<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xml:space="preserve"
   id="SVGRoot"
   version="1.1"
   viewBox="0 0 1920 1080"
   height="1080"
   width="1920"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:dc="http://purl.org/dc/elements/1.1/"><title
     id="title11848">spacetime</title><defs
     id="defs16"><linearGradient
       id="linearGradient1"><stop
         style="stop-color:#fdafb5;stop-opacity:0.98823529;"
         offset="0"
         id="stop2" /><stop
         style="stop-color:#ff62b9;stop-opacity:0.99607843;"
         offset="1"
         id="stop1" /></linearGradient><linearGradient
       id="linearGradient28618"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop28614" /><stop
         style="stop-color:#000000;stop-opacity:0;"
         offset="1"
         id="stop28616" /></linearGradient><filter
       style="color-interpolation-filters:sRGB"
       id="filter50861"
       x="-0.01540035"
       y="-0.018924126"
       width="1.0312759"
       height="1.0363969"><feColorMatrix
         values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -0.21 -0.72 -0.07 1 0 "
         result="result1"
         id="feColorMatrix50829" /><feColorMatrix
         result="result3"
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 2 -1 "
         id="feColorMatrix50831" /><feColorMatrix
         values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.21 0.72 0.07 0 0 "
         in="SourceGraphic"
         result="result2"
         id="feColorMatrix50833" /><feColorMatrix
         result="result9"
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1.5 -0.5 "
         id="feColorMatrix50835" /><feMerge
         result="result11"
         id="feMerge50841"><feMergeNode
           in="result3"
           id="feMergeNode50837" /><feMergeNode
           in="result9"
           id="feMergeNode50839" /></feMerge><feFlood
         flood-opacity="1"
         flood-color="rgb(186,22,91)"
         result="result10"
         id="feFlood50843" /><feComposite
         in2="result11"
         result="result12"
         operator="out"
         id="feComposite50845" /><feFlood
         flood-opacity="1"
         result="result13"
         flood-color="rgb(1,171,171)"
         id="feFlood50847" /><feComposite
         in2="result3"
         result="result14"
         operator="in"
         id="feComposite50849" /><feComposite
         in2="result12"
         result="result17"
         k3="1"
         k2="1"
         operator="arithmetic"
         id="feComposite50851"
         k1="0"
         k4="0" /><feFlood
         flood-opacity="1"
         result="result15"
         flood-color="rgb(255,255,0)"
         id="feFlood50853" /><feComposite
         in2="result9"
         result="result16"
         operator="in"
         id="feComposite50855" /><feComposite
         in2="result17"
         result="result18"
         k3="1"
         k2="1"
         operator="arithmetic"
         id="feComposite50857"
         k1="0"
         k4="0" /><feComposite
         in2="SourceGraphic"
         operator="in"
         id="feComposite50859"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix50973" /><feColorMatrix
         id="feColorMatrix50975"
         type="luminanceToAlpha"
         result="colormatrix1"
         in="fbSourceGraphic" /><feFlood
         id="feFlood50977"
         flood-opacity="0.87451"
         flood-color="rgb(240,222,204)"
         result="flood1" /><feComposite
         in2="colormatrix1"
         id="feComposite50979"
         operator="out"
         result="composite1" /><feFlood
         id="feFlood50981"
         flood-opacity="1"
         flood-color="rgb(250,139,217)"
         result="flood2" /><feComposite
         in2="colormatrix1"
         id="feComposite50983"
         result="composite2"
         operator="in" /><feComposite
         in2="composite1"
         id="feComposite50985"
         in="composite2"
         k2="1"
         k3="1"
         operator="arithmetic"
         result="composite3"
         k1="0"
         k4="0" /><feColorMatrix
         id="feColorMatrix50987"
         in="composite3"
         type="matrix"
         values="2 -1 0 0 0 0 2 -1 0 0 -1 0 2 0 0 0 0 0 1 0 "
         result="colormatrix2" /><feComposite
         in2="composite3"
         id="feComposite50989"
         in="colormatrix2"
         operator="arithmetic"
         k2="0.915888"
         result="composite4"
         k1="0"
         k3="0"
         k4="0" /><feBlend
         in2="composite3"
         id="feBlend50991"
         in="composite4"
         mode="normal"
         result="blend" /><feComposite
         in2="fbSourceGraphic"
         id="feComposite50993"
         operator="in" /></filter><linearGradient
       xlink:href="#linearGradient28618"
       id="linearGradient54102"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(-0.51651191,0.51651191,-0.70710678,-0.70710678,6035.602,-3912.6368)"
       x1="8964.459"
       y1="800.18085"
       x2="8987.541"
       y2="115.70147" /><script
       id="mesh_polyfill-9"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
       id="mesh_polyfill"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
       id="mesh_polyfill-97"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
       id="mesh_polyfill-60"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
       id="mesh_polyfill-5"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
       id="mesh_polyfill-7"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><radialGradient
       xlink:href="#linearGradient1"
       id="radialGradient2-2"
       cx="1145.9915"
       cy="1176.9067"
       fx="1145.9915"
       fy="1176.9067"
       r="296.99146"
       gradientTransform="matrix(1,0,0,0.60239663,-473.5595,-107.73455)"
       gradientUnits="userSpaceOnUse" /></defs><path
     d="m 955.894,96.115974 279.896,279.896056 91.98,-91.98018 7.472,375.39268 -375.394,-7.47207 91.981,-91.97948 -279.896,-279.89606 89.696,-88.26431 z"
     style="fill:url(#linearGradient54102);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:2.26824;filter:url(#filter50861)"
     id="path21905-1-7-0" /><path
     id="path11244-4-9-1-3-4-0"
     style="fill:#dddddd;fill-opacity:1;stroke-width:4.859;filter:url(#filter50861)"
     d="m 890.335,26.524694 c -4.021,0.76214 -8.431,5.07133 -8.18,9.15625 0.239,3.88945 4.91,7.41088 8.796,7.70035 2.782,0.20728 5.782,-2.0319 7.046,-4.5199 1.321,-2.6029 1.073,-6.30326 -0.532,-8.74141 -1.464,-2.22315 -4.515,-4.09098 -7.13,-3.59529 z m -104.528,0.2832 c -4.083,0.22021 -9.033,3.55971 -9.626,7.60599 -0.498,3.39119 2.782,6.99382 5.897,8.42335 3.197,1.46716 7.746,1.13905 10.501,-1.04887 2.436,-1.93538 4.046,-5.90539 3.006,-8.83789 -1.288,-3.62729 -5.934,-6.34983 -9.778,-6.14258 z m 72.268,0.35547 c -3.722,0.31498 -8.494,0.41263 -10.66,3.45612 -1.812,2.54559 -1.714,6.89438 0.19,9.371 1.874,2.43624 5.802,2.25461 8.862,2.54774 3.799,0.36407 8.105,0.9008 11.406,-1.01691 2.325,-1.35124 4.745,-3.9417 4.602,-6.62748 -0.151,-2.83734 -3.086,-5.08045 -5.578,-6.44521 -2.607,-1.42734 -5.861,-1.53585 -8.822,-1.28526 z m -38.867,0 c -3.727,0.31941 -8.507,0.41503 -10.674,3.46393 -1.809,2.54454 -1.706,6.88941 0.198,9.36319 1.875,2.43544 5.802,2.25494 8.862,2.54772 3.802,0.36389 8.127,0.92626 11.414,-1.02026 2.359,-1.39733 4.777,-4.09803 4.58,-6.8331 -0.202,-2.80671 -3.172,-4.94334 -5.656,-6.26692 -2.593,-1.382 -5.797,-1.50546 -8.724,-1.25456 z M 688.6,46.245394 c -4.069,0.17473 -8.982,3.54189 -9.592,7.56881 -0.51,3.37309 2.714,6.97572 5.798,8.43415 3.131,1.48054 7.574,1.18398 10.352,-0.88333 2.465,-1.8339 4.315,-5.6413 3.389,-8.5708 -1.195,-3.78542 -5.981,-6.71914 -9.947,-6.54883 z m 149.328,0.33203 c -4.118,0.0683 -9.1,-0.26605 -12.084,2.57252 -2.12,2.01632 -3.424,5.80096 -2.254,8.48211 1.099,2.51684 4.608,3.21863 7.277,3.86242 5.049,1.21751 10.686,1.51255 15.579,-0.22892 2.471,-0.87953 5.57,-2.32839 6.172,-4.88149 0.662,-2.81119 -1.391,-6.08535 -3.683,-7.8428 -2.957,-2.26787 -7.28,-2.02568 -11.007,-1.96384 z m -116.695,0.002 c -4.085,0.0714 -9.026,-0.25607 -11.987,2.55843 -2.125,2.01896 -3.442,5.80731 -2.271,8.49425 1.097,2.51815 4.609,3.21862 7.279,3.86241 5.051,1.21773 10.693,1.5229 15.585,-0.22882 2.477,-0.88741 5.579,-2.35859 6.173,-4.9226 0.65,-2.80225 -1.406,-6.05445 -3.692,-7.79985 -2.983,-2.27733 -7.334,-2.02943 -11.087,-1.96382 z m 155.496,0 c -4.073,0.43139 -9.048,-0.25329 -12.014,2.57057 -2.117,2.01545 -3.411,5.79038 -2.254,8.47436 1.068,2.47626 4.495,3.20775 7.114,3.85377 5.073,1.25187 10.736,1.50627 15.676,-0.19876 2.444,-0.84353 5.498,-2.20854 6.165,-4.70645 0.733,-2.74513 -1.104,-6.05359 -3.296,-7.86078 -2.696,-2.22193 -6.786,-1.77613 -10.261,-2.13303 -0.374,-0.0385 -0.755,-0.0394 -1.13,3.2e-4 z m 38.863,0 c -4.085,0.0716 -9.025,-0.25608 -11.987,2.55843 -2.124,2.01896 -3.441,5.80725 -2.271,8.49425 1.097,2.51766 4.608,3.21689 7.277,3.86225 5.017,1.213 10.615,1.50561 15.484,-0.20885 2.501,-0.88093 5.652,-2.32152 6.267,-4.90139 0.669,-2.80962 -1.391,-6.08664 -3.685,-7.84237 -2.979,-2.281 -7.333,-2.0281 -11.085,-1.96232 z m 26.867,2.57057 c -2.117,2.01545 -3.411,5.79038 -2.254,8.47436 1.068,2.47626 4.495,3.20793 7.114,3.85377 5.077,1.2523 10.746,1.51523 15.686,-0.20106 2.451,-0.85163 5.521,-2.23536 6.168,-4.74806 0.715,-2.77619 -1.201,-6.08646 -3.434,-7.88526 -2.747,-2.21409 -6.952,-3.17122 -10.66,-3.18185 -4.383,-0.0126 -9.654,0.86424 -12.62,3.6881 z m 50.883,-2.57057 c -4.055,0.51335 -9.029,-0.2571 -11.993,2.55843 -2.123,2.01785 -3.418,5.79478 -2.27,8.49027 1.035,2.43131 4.377,3.187 6.939,3.83216 5.118,1.28845 10.84,1.53554 15.831,-0.17825 2.452,-0.84194 5.524,-2.20299 6.191,-4.70847 0.733,-2.75709 -1.116,-6.092 -3.338,-7.88121 -2.976,-2.3962 -7.462,-1.76088 -11.266,-2.11488 -0.02,-0.001 -0.03,-3.3e-4 -0.05,0 -0.02,3.2e-4 -0.03,-1e-5 -0.05,0.002 z m 38.868,0 c -4.093,0.0729 -9.042,-0.25047 -12.007,2.57057 -2.117,2.01379 -3.419,5.78701 -2.26,8.46865 1.08,2.4959 4.543,3.22005 7.184,3.8659 5.083,1.24274 10.761,1.51831 15.696,-0.22134 2.443,-0.86133 5.512,-2.27037 6.122,-4.78814 0.685,-2.82922 -1.348,-6.15428 -3.653,-7.93291 -2.97,-2.29221 -7.331,-2.02957 -11.082,-1.96273 z m -272.182,0.002 c -4.1,0.0963 -9.08,-0.23397 -12.019,2.62609 -2.096,2.04047 -3.309,5.8543 -2.105,8.52057 1.118,2.47657 4.586,3.13889 7.231,3.76513 5.062,1.19892 10.716,1.5417 15.606,-0.23406 2.489,-0.90372 5.611,-2.41639 6.168,-5.00475 0.613,-2.84782 -1.576,-6.07916 -3.918,-7.81193 -2.98,-2.20478 -7.257,-1.94809 -10.963,-1.86105 z m 39.746,0.0176 c -3.706,0.31129 -8.454,0.39223 -10.622,3.41425 -1.829,2.5499 -1.762,6.92082 0.145,9.41287 1.869,2.44223 5.805,2.25844 8.867,2.54774 3.832,0.36207 8.186,0.9069 11.498,-1.05343 2.312,-1.3685 4.684,-4.00184 4.507,-6.68276 -0.188,-2.83406 -3.152,-5.0284 -5.652,-6.37628 -2.592,-1.3973 -5.809,-1.50885 -8.743,-1.26239 z m -130.609,19.08194 c -4.078,0.16782 -8.997,3.56518 -9.6,7.60208 -0.502,3.36563 2.725,6.94887 5.804,8.39899 3.139,1.47906 7.585,1.17482 10.374,-0.8917 2.443,-1.8106 4.294,-5.56457 3.392,-8.46875 -1.184,-3.81356 -5.98,-6.80482 -9.97,-6.64062 z m 495.617,0 c -4.07,0.15993 -8.98,3.5422 -9.592,7.5688 -0.511,3.36769 2.703,6.96698 5.78,8.42707 3.131,1.48539 7.569,1.18487 10.36,-0.8682 2.45,-1.80141 4.328,-5.54294 3.436,-8.44994 -1.174,-3.82793 -5.983,-6.83497 -9.984,-6.67773 z m -462.195,0.35546 c -3.729,0.31735 -8.514,0.41561 -10.676,3.47 -1.806,2.55316 -1.684,6.90944 0.234,9.38011 1.898,2.44554 5.855,2.23607 8.937,2.52685 3.731,0.35199 7.946,0.8774 11.2,-0.98148 2.344,-1.33911 4.826,-3.89373 4.707,-6.59079 -0.126,-2.85922 -3.078,-5.14089 -5.584,-6.52198 -2.602,-1.43339 -5.859,-1.53463 -8.818,-1.28271 z m 38.869,0 c -3.718,0.32432 -8.506,0.39611 -10.65,3.45024 -1.822,2.59445 -1.661,7.02634 0.316,9.50484 1.988,2.49361 6.072,2.191 9.252,2.43872 3.728,0.29045 7.985,0.83197 11.16,-1.14484 2.29,-1.42635 4.549,-4.17626 4.293,-6.86224 -0.267,-2.80003 -3.253,-4.87825 -5.748,-6.17803 -2.574,-1.34127 -5.732,-1.46094 -8.623,-1.20869 z m 38.875,0 c -3.728,0.31783 -8.514,0.41561 -10.676,3.47 -1.806,2.55316 -1.684,6.90944 0.234,9.38011 1.899,2.44554 5.855,2.23607 8.937,2.52685 3.731,0.35199 7.946,0.8774 11.2,-0.98148 2.344,-1.33911 4.826,-3.89374 4.707,-6.59079 -0.126,-2.86088 -3.08,-5.14354 -5.588,-6.52492 -2.601,-1.4321 -5.856,-1.53194 -8.814,-1.27977 z m 77.744,0 c -3.728,0.31783 -8.514,0.41561 -10.676,3.47 -1.806,2.55316 -1.684,6.90944 0.234,9.38011 1.899,2.44554 5.855,2.23582 8.937,2.52685 3.729,0.35205 7.937,0.87235 11.193,-0.97898 2.338,-1.32991 4.823,-3.86235 4.714,-6.55032 -0.116,-2.87219 -3.072,-5.17718 -5.588,-6.56789 -2.598,-1.43632 -5.856,-1.53194 -8.814,-1.27977 z m 38.871,0 c -3.715,0.31287 -8.495,0.39086 -10.643,3.43832 -1.825,2.5906 -1.677,7.01905 0.291,9.50309 1.96,2.47355 6.001,2.18839 9.146,2.44641 3.725,0.30552 7.951,0.82555 11.157,-1.09313 2.283,-1.36618 4.612,-3.97728 4.441,-6.63258 -0.18,-2.81812 -3.094,-5.02916 -5.574,-6.3794 -2.609,-1.42027 -5.858,-1.53198 -8.818,-1.28271 z m 116.615,0 c -3.718,0.32427 -8.507,0.39565 -10.652,3.45024 -1.822,2.5944 -1.66,7.02634 0.316,9.50484 1.989,2.49362 6.072,2.191 9.252,2.43872 3.728,0.29044 7.986,0.83195 11.16,-1.14484 2.29,-1.42635 4.549,-4.17623 4.293,-6.86224 -0.267,-2.79962 -3.252,-4.87825 -5.746,-6.17803 -2.573,-1.34147 -5.731,-1.46086 -8.623,-1.20869 z m 38.873,0 c -3.728,0.31735 -8.514,0.41561 -10.675,3.47 -1.807,2.55316 -1.684,6.90949 0.234,9.38011 1.898,2.44598 5.856,2.23656 8.939,2.52685 3.733,0.35152 7.95,0.87581 11.205,-0.98539 2.342,-1.33877 4.819,-3.89241 4.7,-6.58688 -0.127,-2.85921 -3.078,-5.14089 -5.585,-6.52198 -2.601,-1.43337 -5.858,-1.53463 -8.818,-1.28271 z m 38.871,0 c -3.718,0.32427 -8.507,0.39567 -10.652,3.45024 -1.821,2.5944 -1.66,7.02634 0.316,9.50484 1.989,2.4936 6.073,2.191 9.252,2.43872 3.729,0.29045 7.986,0.83198 11.16,-1.14484 2.291,-1.42635 4.55,-4.17625 4.293,-6.86224 -0.266,-2.7996 -3.251,-4.87825 -5.745,-6.17803 -2.574,-1.34149 -5.732,-1.46086 -8.624,-1.20869 z m 38.873,0 c -3.728,0.31735 -8.514,0.41561 -10.675,3.47 -1.807,2.55316 -1.684,6.90944 0.234,9.38011 1.898,2.44555 5.855,2.23607 8.937,2.52685 3.731,0.35198 7.946,0.87738 11.2,-0.98148 2.344,-1.33911 4.825,-3.89372 4.707,-6.59079 -0.126,-2.85922 -3.078,-5.14089 -5.584,-6.52198 -2.602,-1.4334 -5.859,-1.53463 -8.819,-1.28271 z m 194.36,0 c -3.715,0.31287 -8.495,0.39087 -10.643,3.43832 -1.825,2.59061 -1.677,7.01905 0.291,9.50309 1.96,2.47353 6.001,2.18839 9.146,2.44641 3.724,0.30553 7.95,0.82557 11.157,-1.09313 2.283,-1.36618 4.612,-3.97728 4.441,-6.63258 -0.181,-2.81813 -3.094,-5.02916 -5.574,-6.3794 -2.609,-1.42026 -5.858,-1.53198 -8.818,-1.28271 z m 116.615,0 c -3.718,0.32394 -8.501,0.39875 -10.652,3.44829 -1.819,2.57818 -1.679,6.98257 0.273,9.46187 1.943,2.46902 5.964,2.21256 9.095,2.47738 3.761,0.31804 8.053,0.87733 11.268,-1.09847 2.323,-1.42709 4.634,-4.188 4.385,-6.90235 -0.257,-2.80053 -3.252,-4.87825 -5.746,-6.17803 -2.574,-1.34147 -5.731,-1.46062 -8.623,-1.20869 z m 77.744,0 c -3.718,0.32427 -8.507,0.39567 -10.652,3.45024 -1.822,2.5944 -1.657,7.024 0.316,9.50484 1.965,2.47055 6.005,2.18481 9.152,2.43559 3.761,0.29968 8.057,0.85069 11.26,-1.14171 2.291,-1.425 4.549,-4.17625 4.293,-6.86224 -0.267,-2.7996 -3.252,-4.87825 -5.746,-6.17803 -2.574,-1.34149 -5.731,-1.46086 -8.623,-1.20869 z m 38.873,0 c -3.728,0.31735 -8.514,0.41561 -10.675,3.47 -1.807,2.55316 -1.684,6.90944 0.234,9.38011 1.898,2.44555 5.855,2.23607 8.937,2.52685 3.731,0.35198 7.945,0.87738 11.199,-0.98148 2.345,-1.33911 4.826,-3.89372 4.707,-6.59079 -0.125,-2.85922 -3.077,-5.14089 -5.584,-6.52198 -2.601,-1.4334 -5.858,-1.53463 -8.818,-1.28271 z m 38.871,0 c -3.718,0.32421 -8.507,0.39567 -10.652,3.45024 -1.822,2.5944 -1.66,7.02634 0.316,9.50484 1.989,2.4936 6.073,2.191 9.252,2.43872 3.728,0.29045 7.986,0.83197 11.16,-1.14484 2.291,-1.42635 4.55,-4.17626 4.293,-6.86224 -0.267,-2.80003 -3.253,-4.87822 -5.747,-6.17803 -2.574,-1.34102 -5.731,-1.46077 -8.622,-1.20869 z m 38.873,0 c -3.728,0.31358 -8.514,0.41562 -10.675,3.47 -1.807,2.55315 -1.684,6.90943 0.234,9.38011 1.898,2.44556 5.855,2.23607 8.937,2.52685 3.731,0.35199 7.946,0.87741 11.2,-0.98148 2.344,-1.33911 4.818,-3.89342 4.707,-6.59079 -0.117,-2.83223 -3.017,-5.11322 -5.495,-6.49057 -2.623,-1.45841 -5.917,-1.56566 -8.908,-1.31412 z m -816.308,0 c -3.715,0.31059 -8.482,0.39787 -10.641,3.43616 -1.821,2.56274 -1.714,6.9469 0.215,9.42922 1.915,2.46339 5.908,2.2355 9.015,2.51666 3.741,0.33846 7.966,0.84292 11.22,-1.03236 2.293,-1.32118 4.705,-3.83099 4.593,-6.47468 -0.122,-2.8693 -3.052,-5.18449 -5.562,-6.57957 -2.603,-1.44671 -5.872,-1.54359 -8.84,-1.29543 z m 116.617,0 c -3.704,0.30655 -8.453,0.38581 -10.615,3.40841 -1.831,2.56077 -1.749,6.95018 0.173,9.44346 1.89,2.45055 5.853,2.23792 8.934,2.52509 3.763,0.35075 8.015,0.86667 11.293,-1.01469 2.302,-1.32099 4.726,-3.83574 4.615,-6.48727 -0.12,-2.86939 -3.052,-5.18445 -5.562,-6.57957 -2.603,-1.44643 -5.871,-1.54104 -8.838,-1.29543 z m 38.871,0 c -3.716,0.31431 -8.498,0.38997 -10.647,3.43832 -1.825,2.59051 -1.677,7.01905 0.291,9.50309 1.96,2.47355 6.001,2.18866 9.146,2.44641 3.727,0.30542 7.962,0.83455 11.165,-1.09577 2.296,-1.38418 4.626,-4.03752 4.434,-6.71197 -0.203,-2.81096 -3.143,-4.97809 -5.625,-6.31264 -2.6,-1.3978 -5.823,-1.51622 -8.764,-1.26744 z m 388.721,0 c -3.704,0.30655 -8.453,0.38579 -10.615,3.40841 -1.832,2.56078 -1.749,6.95019 0.173,9.44346 1.89,2.45055 5.852,2.23792 8.933,2.52509 3.764,0.35075 8.016,0.86667 11.294,-1.01469 2.301,-1.32099 4.726,-3.83574 4.615,-6.48727 -0.12,-2.86939 -3.052,-5.18445 -5.562,-6.57957 -2.603,-1.44643 -5.871,-1.54104 -8.838,-1.29543 z m 38.871,0 c -3.716,0.31431 -8.498,0.38995 -10.647,3.43832 -1.825,2.59051 -1.677,7.01906 0.291,9.50309 1.96,2.47356 6.001,2.18839 9.146,2.44641 3.726,0.30563 7.959,0.83553 11.161,-1.09347 2.298,-1.3844 4.63,-4.03848 4.437,-6.71427 -0.202,-2.81098 -3.142,-4.97808 -5.624,-6.31264 -2.6,-1.39779 -5.823,-1.51621 -8.764,-1.26744 z m 77.746,0 c -3.73,0.31929 -8.519,0.41426 -10.681,3.47 -1.807,2.55301 -1.684,6.90951 0.233,9.38011 1.899,2.44595 5.856,2.24071 8.94,2.52668 3.772,0.34984 8.058,0.9036 11.317,-1.02703 2.352,-1.39285 4.764,-4.07856 4.574,-6.80483 -0.196,-2.80667 -3.156,-4.955 -5.637,-6.28269 -2.597,-1.39004 -5.811,-1.51347 -8.746,-1.26224 z m -453.514,23.41249 c -1.694,2.66203 -1.482,7.00422 0.508,9.4531 1.957,2.408886 5.897,2.324156 9,2.390336 3.408,0.0727 7.587,0.22046 9.986,-2.201236 2.112,-2.13189 3.088,-6.0734 1.855,-8.80932 -1.531,-3.39827 -6.004,-5.27533 -9.722,-5.52332 -4.17,-0.27805 -9.383,1.16511 -11.627,4.69044 z m 200.059,-3.99842 c -4.112,0.0713 -9.11,-0.26591 -12.061,2.59882 -2.119,2.05746 -3.332,5.9089 -2.121,8.60316 1.085,2.4172 4.457,3.08511 7.034,3.703486 5.092,1.22211 10.765,1.5131 15.709,-0.21289 2.451,-0.855366 5.532,-2.244386 6.16,-4.762476 0.703,-2.81277 -1.287,-6.14644 -3.572,-7.9297 -2.977,-2.3224 -7.374,-2.06589 -11.149,-2.0004 z m -38.953,0.002 c -4.092,0.0918 -9.059,-0.23887 -11.998,2.60983 -2.104,2.03996 -3.335,5.85541 -2.135,8.5293 1.113,2.47849 4.579,3.14896 7.222,3.777046 5.069,1.2045 10.73,1.53831 15.627,-0.23845 2.483,-0.900646 5.595,-2.406236 6.157,-4.986596 0.619,-2.84079 -1.548,-6.07626 -3.881,-7.8115 -2.982,-2.2187 -7.276,-1.96297 -10.992,-1.87963 z m 77.744,0 c -4.089,0.0843 -9.042,-0.22962 -11.99,2.60556 -2.1,2.01961 -3.354,5.79278 -2.187,8.46216 1.081,2.47251 4.508,3.1933 7.13,3.834846 5.075,1.24221 10.735,1.49815 15.673,-0.21009 2.439,-0.843736 5.523,-2.199036 6.151,-4.702246 0.717,-2.85883 -1.327,-6.2465 -3.658,-8.05016 -2.976,-2.30242 -7.358,-2.01766 -11.119,-1.94007 z m 26.926,2.57573 c -2.163,2.01755 -3.374,5.90544 -2.166,8.605 1.095,2.44377 4.513,3.10328 7.117,3.725516 5.054,1.20752 10.673,1.48342 15.586,-0.20578 2.444,-0.839946 5.5,-2.191136 6.176,-4.684846 0.742,-2.73749 -1.025,-6.1088 -3.254,-7.86233 -2.99,-2.35231 -7.474,-1.80009 -11.278,-1.75726 -4.125,0.0464 -9.165,-0.63377 -12.181,2.1797 z m -142.682,-2.5562 c -3.712,0.32575 -8.494,0.38662 -10.637,3.4342 -1.828,2.59886 -1.67,7.04225 0.311,9.52673 1.985,2.490086 6.064,2.180146 9.238,2.432006 3.696,0.29323 7.914,0.84738 11.068,-1.099966 2.329,-1.43709 4.651,-4.21423 4.387,-6.9375 -0.273,-2.81951 -3.317,-4.88067 -5.836,-6.17749 -2.552,-1.31425 -5.671,-1.42897 -8.531,-1.17798 z m 194.359,0 c -3.715,0.32852 -8.506,0.391 -10.646,3.44612 -1.824,2.60413 -1.649,7.05159 0.34,9.53239 1.998,2.492466 6.088,2.173706 9.273,2.417176 3.713,0.28377 7.968,0.85416 11.111,-1.141786 2.326,-1.47667 4.576,-4.34451 4.261,-7.08095 -0.32,-2.77254 -3.346,-4.74439 -5.836,-6.00366 -2.553,-1.29079 -5.653,-1.42125 -8.503,-1.16929 z m 38.875,0 c -3.703,0.30971 -8.448,0.39241 -10.614,3.41229 -1.829,2.55047 -1.762,6.9221 0.145,9.41483 1.867,2.439816 5.8,2.248986 8.857,2.546526 3.762,0.3661 8.014,0.89814 11.298,-0.973406 2.348,-1.33823 4.835,-3.89534 4.717,-6.59555 -0.126,-2.86092 -3.08,-5.14355 -5.589,-6.52493 -2.6,-1.4321 -5.855,-1.52717 -8.814,-1.27976 z m 38.867,0 c -3.715,0.32858 -8.501,0.39401 -10.644,3.44612 -1.823,2.59592 -1.661,7.03024 0.316,9.51091 1.984,2.488676 6.058,2.189966 9.231,2.438746 3.733,0.29279 8.015,0.86501 11.178,-1.141876 2.325,-1.47598 4.575,-4.34453 4.26,-7.08095 -0.32,-2.77248 -3.346,-4.74422 -5.836,-6.00344 -2.554,-1.29105 -5.654,-1.42161 -8.505,-1.16951 z m 38.878,0 c -3.704,0.30929 -8.448,0.39241 -10.614,3.41229 -1.83,2.55047 -1.763,6.92217 0.144,9.41483 1.867,2.440216 5.801,2.254266 8.859,2.546356 3.809,0.36368 8.133,0.91159 11.432,-1.025486 2.331,-1.36894 4.731,-4.00269 4.569,-6.70151 -0.169,-2.81171 -3.087,-5.01585 -5.561,-6.36246 -2.612,-1.42182 -5.866,-1.53154 -8.829,-1.28402 z m 116.613,0 c -3.712,0.32115 -8.498,0.38364 -10.637,3.4342 -1.829,2.60752 -1.652,7.06206 0.338,9.54822 1.983,2.477156 6.046,2.161926 9.209,2.410486 3.698,0.29056 7.919,0.84876 11.074,-1.101896 2.328,-1.43918 4.638,-4.22073 4.379,-6.94531 -0.264,-2.78591 -3.251,-4.84177 -5.734,-6.13237 -2.577,-1.33968 -5.735,-1.46372 -8.629,-1.21333 z m 38.894,0 c -3.715,0.32387 -8.503,0.3791 -10.651,3.42841 -1.829,2.59644 -1.669,7.03533 0.306,9.52276 1.96,2.469386 5.995,2.187196 9.138,2.440256 3.754,0.30225 8.043,0.85798 11.24,-1.130576 2.304,-1.43279 4.581,-4.2035 4.313,-6.90343 -0.28,-2.81883 -3.316,-4.88181 -5.834,-6.17944 -2.546,-1.31209 -5.658,-1.4267 -8.512,-1.17798 z m 38.85,0 c -3.712,0.3223 -8.494,0.38663 -10.637,3.4342 -1.828,2.59885 -1.67,7.04224 0.311,9.52673 1.985,2.490116 6.064,2.180366 9.238,2.432006 3.698,0.29307 7.914,0.84294 11.072,-1.101926 2.322,-1.42982 4.637,-4.18907 4.387,-6.90429 -0.258,-2.80187 -3.254,-4.88004 -5.75,-6.17999 -2.573,-1.34066 -5.73,-1.45775 -8.621,-1.20673 z m 38.871,0 c -3.716,0.32841 -8.502,0.39441 -10.647,3.44612 -1.822,2.59348 -1.664,7.02425 0.309,9.50505 1.976,2.484186 6.04,2.190816 9.205,2.441396 3.744,0.29652 8.039,0.87312 11.211,-1.138666 2.326,-1.4753 4.576,-4.34456 4.26,-7.08095 -0.32,-2.77339 -3.348,-4.74434 -5.84,-6.00368 -2.552,-1.28986 -5.65,-1.42103 -8.498,-1.16927 z m -1049.533,0 c -3.713,0.30921 -8.472,0.39794 -10.639,3.42834 -1.823,2.54852 -1.745,6.91206 0.162,9.39878 1.869,2.438486 5.8,2.253446 8.859,2.546376 3.802,0.36416 8.101,0.88398 11.414,-1.017626 2.298,-1.31908 4.714,-3.83361 4.602,-6.48087 -0.121,-2.86934 -3.052,-5.18441 -5.562,-6.57958 -2.602,-1.44616 -5.87,-1.54247 -8.836,-1.29542 z m 38.869,0 c -3.707,0.30771 -8.458,0.39139 -10.622,3.41641 -1.828,2.556 -1.748,6.93589 0.168,9.42598 1.889,2.453736 5.854,2.247786 8.938,2.535916 3.77,0.35235 8.031,0.86474 11.314,-1.022436 2.297,-1.32046 4.714,-3.83361 4.602,-6.48087 -0.121,-2.86934 -3.052,-5.18445 -5.562,-6.57958 -2.603,-1.44643 -5.871,-1.54177 -8.838,-1.29542 z m 388.723,0 c -3.713,0.30921 -8.472,0.39793 -10.639,3.42834 -1.823,2.54852 -1.745,6.91206 0.161,9.39878 1.87,2.438486 5.801,2.253426 8.86,2.546356 3.802,0.36415 8.101,0.88399 11.414,-1.017606 2.297,-1.31908 4.714,-3.83362 4.602,-6.48087 -0.121,-2.86935 -3.052,-5.18441 -5.562,-6.57958 -2.602,-1.44615 -5.87,-1.54247 -8.836,-1.29542 z m 38.869,0 c -3.707,0.30795 -8.459,0.39092 -10.622,3.41641 -1.828,2.55741 -1.746,6.93924 0.172,9.42966 1.889,2.451756 5.852,2.244626 8.933,2.532206 3.771,0.35186 8.032,0.86477 11.315,-1.022406 2.297,-1.32046 4.714,-3.83361 4.602,-6.48087 -0.121,-2.86955 -3.051,-5.18549 -5.562,-6.5807 -2.603,-1.44645 -5.871,-1.54085 -8.838,-1.2943 z m 388.722,0 c -3.713,0.30921 -8.471,0.39793 -10.639,3.42834 -1.823,2.54852 -1.744,6.91206 0.162,9.39878 1.87,2.438486 5.801,2.253426 8.859,2.546356 3.803,0.36415 8.102,0.88399 11.414,-1.017606 2.298,-1.31908 4.714,-3.83362 4.603,-6.48087 -0.121,-2.86935 -3.052,-5.18441 -5.563,-6.57958 -2.602,-1.44615 -5.869,-1.54247 -8.836,-1.29542 z m 38.869,0 c -3.706,0.30795 -8.458,0.39092 -10.621,3.41641 -1.828,2.55741 -1.746,6.93924 0.172,9.42966 1.889,2.451756 5.852,2.244626 8.933,2.532206 3.771,0.35186 8.031,0.86477 11.314,-1.022406 2.298,-1.32046 4.714,-3.83361 4.603,-6.48087 -0.121,-2.86955 -3.052,-5.18549 -5.562,-6.5807 -2.603,-1.44645 -5.871,-1.54085 -8.839,-1.2943 z m -252.671,19.435536 c -3.723,0.31477 -8.495,0.41263 -10.66,3.45612 -1.812,2.5456 -1.714,6.89439 0.19,9.37101 1.874,2.43622 5.802,2.25459 8.861,2.54774 3.798,0.36384 8.099,0.8976 11.399,-1.01617 2.326,-1.34904 4.752,-3.93317 4.612,-6.61846 -0.148,-2.83959 -3.085,-5.08691 -5.578,-6.45363 -2.607,-1.42874 -5.863,-1.5371 -8.824,-1.28661 z m 427.591,0 c -3.722,0.31477 -8.494,0.41264 -10.66,3.45612 -1.811,2.54559 -1.714,6.89439 0.191,9.37101 1.874,2.43625 5.802,2.2546 8.861,2.54774 3.797,0.36384 8.099,0.8976 11.399,-1.01617 2.326,-1.34904 4.752,-3.93317 4.612,-6.61846 -0.148,-2.83959 -3.085,-5.08691 -5.579,-6.45363 -2.606,-1.42874 -5.862,-1.5371 -8.824,-1.28661 z m -1088.41,0 c -3.716,0.31609 -8.496,0.39496 -10.646,3.44202 -1.823,2.58136 -1.682,6.99227 0.272,9.47521 1.936,2.46006 5.943,2.19708 9.062,2.46863 3.702,0.32239 7.906,0.86941 11.103,-1.02745 2.357,-1.39908 4.782,-4.09062 4.588,-6.8252 -0.198,-2.80853 -3.168,-4.95089 -5.652,-6.27683 -2.593,-1.38404 -5.798,-1.50545 -8.727,-1.25638 z m 38.873,0 c -3.704,0.31242 -8.45,0.39197 -10.618,3.4123 -1.829,2.54998 -1.766,6.92171 0.141,9.41483 1.867,2.44129 5.802,2.25475 8.861,2.54774 3.801,0.36396 8.128,0.93389 11.409,-1.01821 2.372,-1.4114 4.792,-4.14522 4.582,-6.89767 -0.212,-2.7881 -3.174,-4.89478 -5.645,-6.20491 -2.597,-1.37749 -5.8,-1.50115 -8.73,-1.25408 z m 505.334,0 c -3.703,0.312 -8.449,0.39243 -10.615,3.4123 -1.83,2.55003 -1.766,6.92171 0.14,9.41483 1.867,2.44128 5.802,2.25475 8.861,2.54774 3.801,0.36397 8.128,0.9339 11.409,-1.01821 2.372,-1.4114 4.792,-4.14528 4.582,-6.89767 -0.213,-2.78874 -3.179,-4.89308 -5.65,-6.20312 -2.596,-1.37661 -5.798,-1.50257 -8.727,-1.25587 z m 38.873,0 c -3.696,0.30885 -8.431,0.38214 -10.598,3.39255 -1.838,2.55248 -1.785,6.93451 0.123,9.43458 1.865,2.44305 5.802,2.25459 8.861,2.54776 3.799,0.36405 8.118,0.92431 11.405,-1.01648 2.358,-1.39289 4.781,-4.083 4.59,-6.81544 -0.196,-2.80936 -3.163,-4.95688 -5.646,-6.28464 -2.594,-1.38689 -5.803,-1.50325 -8.735,-1.25833 z m 38.873,0 c -3.728,0.30966 -8.508,0.4146 -10.675,3.46393 -1.809,2.54449 -1.706,6.88941 0.198,9.3632 1.875,2.43545 5.802,2.25478 8.861,2.54771 3.802,0.36399 8.101,0.88279 11.412,-1.01896 2.299,-1.31966 4.707,-3.83475 4.603,-6.48283 -0.112,-2.83979 -2.99,-5.15088 -5.469,-6.54143 -2.624,-1.47256 -5.93,-1.58073 -8.93,-1.33162 z m 77.745,0 c -3.729,0.30966 -8.509,0.41413 -10.676,3.46393 -1.808,2.54538 -1.703,6.8912 0.203,9.36495 1.874,2.43428 5.8,2.25335 8.859,2.54599 3.801,0.36368 8.098,0.88248 11.41,-1.01899 2.298,-1.31968 4.707,-3.83476 4.602,-6.48283 -0.112,-2.83981 -2.99,-5.15088 -5.468,-6.54143 -2.625,-1.47255 -5.931,-1.58073 -8.93,-1.33162 z m 349.847,0 c -3.728,0.31383 -8.508,0.4146 -10.675,3.46393 -1.809,2.54449 -1.706,6.88941 0.198,9.3632 1.875,2.43546 5.802,2.25481 8.861,2.54774 3.802,0.364 8.109,0.89726 11.412,-1.01899 2.32,-1.34584 4.738,-3.92323 4.601,-6.60197 -0.146,-2.83656 -3.072,-5.08783 -5.561,-6.45653 -2.608,-1.43456 -5.869,-1.54711 -8.836,-1.29738 z M 367.92,123.98953 c -4.06,0.18555 -8.968,3.5081 -9.595,7.52401 -0.525,3.372 2.666,7.01232 5.752,8.47013 3.19,1.50702 7.741,1.18112 10.539,-0.96789 2.435,-1.87039 4.152,-5.73306 3.179,-8.6454 -1.241,-3.71719 -5.96,-6.55976 -9.875,-6.38085 z m -35.328,0.33203 c -4.1175,0.0683 -9.0983,-0.26411 -12.0841,2.57252 -2.1183,2.01244 -3.4271,5.78927 -2.2618,8.46865 1.0961,2.52027 4.6066,3.2275 7.2775,3.87534 5.0172,1.21696 10.6164,1.50657 15.4864,-0.20753 2.503,-0.88096 5.656,-2.32136 6.272,-4.90234 0.67,-2.80929 -1.391,-6.08535 -3.683,-7.8428 -2.957,-2.26788 -7.28,-2.02568 -11.007,-1.96384 z m -38.9508,0.002 c -4.1142,0.0748 -9.0956,-0.2402 -12.0663,2.60715 -2.0971,2.00997 -3.3665,5.77187 -2.1999,8.43207 1.1045,2.51853 4.6105,3.22846 7.2833,3.87555 5.0325,1.21834 10.6545,1.5211 15.5319,-0.21676 2.4947,-0.88886 5.6188,-2.3593 6.2244,-4.9374 0.6548,-2.78775 -1.3774,-6.03443 -3.6497,-7.77711 -2.9886,-2.29206 -7.3579,-2.05193 -11.1237,-1.9835 z m 310.9768,0 c -4.092,0.0728 -9.041,-0.25048 -12.007,2.57057 -2.116,2.01379 -3.425,5.78952 -2.259,8.46865 1.096,2.52024 4.606,3.22994 7.277,3.87582 5.053,1.22157 10.698,1.51652 15.593,-0.23277 2.474,-0.88433 5.574,-2.34577 6.171,-4.90493 0.654,-2.80476 -1.4,-6.06433 -3.688,-7.81307 -2.982,-2.27891 -7.335,-2.031 -11.087,-1.96427 z m 39.668,0.0195 c -3.732,0.31975 -8.518,0.4195 -10.685,3.47391 -1.805,2.54331 -1.696,6.88316 0.208,9.35321 1.877,2.43579 5.805,2.25844 8.867,2.54774 3.831,0.36207 8.194,0.92119 11.498,-1.05343 2.329,-1.39217 4.693,-4.08216 4.493,-6.78823 -0.208,-2.80382 -3.161,-4.94601 -5.641,-6.2713 -2.596,-1.38764 -5.807,-1.51323 -8.74,-1.2619 z m 1049.545,0 c -3.706,0.30638 -8.452,0.39151 -10.62,3.41229 -1.83,2.54993 -1.766,6.92187 0.141,9.41483 1.868,2.44266 5.806,2.25089 8.867,2.54788 3.763,0.36509 8.009,0.88369 11.299,-0.97821 2.328,-1.31722 4.806,-3.82358 4.709,-6.4964 -0.104,-2.87381 -3.043,-5.20074 -5.554,-6.60106 -2.602,-1.45062 -5.873,-1.5448 -8.842,-1.29933 z m 38.869,0 c -3.72,0.32402 -8.518,0.39001 -10.658,3.45003 -1.823,2.6061 -1.636,7.05329 0.353,9.53435 1.986,2.47652 6.048,2.16638 9.213,2.41171 3.714,0.28785 7.943,0.81985 11.117,-1.13005 2.29,-1.40703 4.586,-4.11006 4.352,-6.78752 -0.248,-2.8322 -3.261,-4.953 -5.779,-6.273 -2.563,-1.34377 -5.715,-1.45665 -8.598,-1.20552 z m 15.162,19.08203 c -4.068,0.13349 -8.97,3.53471 -9.59,7.55709 -0.517,3.3567 2.674,6.94786 5.733,8.42313 3.085,1.48767 7.45,1.21239 10.246,-0.7649 2.473,-1.74822 4.487,-5.40299 3.658,-8.31542 -1.112,-3.90748 -5.987,-7.03315 -10.047,-6.8999 z m -1472.8672,0.35547 c -3.7282,0.31782 -8.5141,0.41561 -10.6754,3.47 -1.8065,2.55315 -1.684,6.90944 0.2338,9.38011 1.8984,2.44555 5.8551,2.23607 8.9373,2.52685 3.7309,0.35199 7.9456,0.8774 11.1997,-0.98148 2.3441,-1.33911 4.8257,-3.89374 4.7069,-6.59079 -0.126,-2.86088 -3.0799,-5.14355 -5.5884,-6.52493 -2.6005,-1.4321 -5.8559,-1.53193 -8.8139,-1.27976 z m 38.8691,0 c -3.7176,0.32431 -8.5059,0.39611 -10.6502,3.45024 -1.8215,2.59444 -1.6602,7.02634 0.3162,9.50484 1.9885,2.49361 6.0723,2.191 9.2521,2.43872 3.7281,0.29045 7.9856,0.83197 11.1598,-1.14484 2.2904,-1.42635 4.5495,-4.17626 4.2932,-6.86224 -0.2672,-2.80003 -3.2533,-4.87826 -5.7477,-6.17803 -2.5741,-1.34127 -5.7318,-1.46094 -8.6234,-1.20869 z m 38.8751,0 c -3.728,0.31782 -8.514,0.41561 -10.675,3.47 -1.807,2.55315 -1.685,6.90944 0.233,9.38011 1.899,2.44555 5.855,2.23607 8.938,2.52685 3.731,0.35199 7.945,0.8774 11.199,-0.98148 2.344,-1.33911 4.826,-3.89374 4.707,-6.59079 -0.126,-2.86088 -3.08,-5.14355 -5.588,-6.52493 -2.601,-1.4321 -5.856,-1.53193 -8.814,-1.27976 z m 233.23,0 c -3.718,0.32427 -8.507,0.39567 -10.652,3.45024 -1.821,2.59439 -1.66,7.02634 0.316,9.50484 1.989,2.49361 6.073,2.191 9.253,2.43872 3.728,0.29045 7.985,0.83197 11.159,-1.14484 2.291,-1.42635 4.55,-4.17624 4.293,-6.86224 -0.266,-2.79961 -3.251,-4.87825 -5.745,-6.17803 -2.574,-1.34149 -5.732,-1.46087 -8.624,-1.20869 z m 38.873,0 c -3.728,0.31734 -8.514,0.4156 -10.675,3.47 -1.807,2.55315 -1.684,6.90944 0.234,9.38011 1.898,2.44554 5.855,2.23607 8.937,2.52685 3.731,0.35199 7.946,0.8774 11.2,-0.98148 2.344,-1.33911 4.825,-3.89373 4.707,-6.59079 -0.126,-2.85922 -3.078,-5.1409 -5.584,-6.52199 -2.602,-1.43338 -5.859,-1.53462 -8.819,-1.2827 z m 1088.416,0 c -3.728,0.31783 -8.514,0.41561 -10.675,3.47 -1.807,2.55316 -1.684,6.90944 0.234,9.38011 1.898,2.44553 5.855,2.23582 8.937,2.52685 3.728,0.35205 7.937,0.87235 11.192,-0.97898 2.339,-1.32991 4.824,-3.86234 4.715,-6.55032 -0.117,-2.87219 -3.073,-5.17718 -5.589,-6.5679 -2.598,-1.43632 -5.856,-1.53193 -8.814,-1.27976 z m -1321.644,0 c -3.714,0.31058 -8.482,0.39787 -10.641,3.43616 -1.821,2.56274 -1.714,6.9468 0.215,9.42922 1.914,2.46251 5.905,2.23539 9.011,2.51666 3.742,0.33885 7.969,0.84351 11.224,-1.03236 2.293,-1.32114 4.705,-3.83099 4.593,-6.47468 -0.122,-2.86931 -3.052,-5.18449 -5.562,-6.57957 -2.603,-1.4467 -5.872,-1.54359 -8.84,-1.29543 z m 202.453,23.41249 c -1.737,2.63469 -1.483,7.00443 0.507,9.45314 1.961,2.41225 5.906,2.33526 9.014,2.39212 3.444,0.063 7.699,0.20815 10.077,-2.28314 2.1,-2.2006 2.971,-6.26943 1.6,-8.98493 -1.557,-3.0833 -6.001,-5.10607 -9.674,-5.31263 -4.146,-0.23319 -9.38,1.48208 -11.524,4.73544 z m -310.9766,0 c -1.7357,2.62579 -1.4968,6.98376 0.4835,9.43043 1.9589,2.42036 5.9114,2.34409 9.0244,2.41213 3.4136,0.0746 7.6166,0.23291 10.0019,-2.21013 2.1239,-2.17525 3.0935,-6.22077 1.7544,-8.95009 -1.5387,-3.13594 -6.0227,-5.18873 -9.7256,-5.40889 -4.1491,-0.24668 -9.3888,1.47444 -11.5386,4.72655 z m -28.3906,-3.99647 c -4.069,0.0766 -8.9929,-0.24227 -11.9361,2.56861 -2.1193,2.02409 -3.4126,5.8141 -2.2426,8.50102 1.0812,2.4829 4.5318,3.19164 7.1626,3.83414 5.0339,1.22939 10.6382,1.47476 15.5443,-0.193 2.4581,-0.83559 5.5806,-2.15697 6.2336,-4.66976 0.7411,-2.85246 -1.2775,-6.26162 -3.6005,-8.07524 -2.9777,-2.32468 -7.3843,-2.03684 -11.1613,-1.96577 z m 196.0412,-1.68166 c -3.032,-0.31081 -6.286,0.066 -9.041,1.37059 -2.688,1.27286 -5.562,3.19925 -6.624,5.97701 -0.804,2.10223 -0.66,4.93281 0.715,6.71408 1.58,2.04472 4.688,2.41056 7.25,2.7424 5.954,0.77115 12.774,1.23218 17.914,-1.87101 1.562,-0.94273 2.972,-2.72855 3.038,-4.55134 0.09,-2.65618 -1.915,-5.21127 -3.94,-6.9324 -2.522,-2.14354 -6.019,-3.1118 -9.312,-3.44933 z m 64.04,4.30419 c -2.102,2.05049 -3.303,5.8828 -2.092,8.5582 1.108,2.44687 4.531,3.10546 7.144,3.72747 5.049,1.20195 10.665,1.48933 15.569,-0.21038 2.454,-0.85057 5.521,-2.22784 6.185,-4.73884 0.723,-2.73773 -1.118,-6.03144 -3.31,-7.82406 -2.771,-2.26586 -7.051,-3.2353 -10.815,-3.24518 -4.406,-0.0116 -9.745,0.86892 -12.681,3.73279 z m 38.941,-0.0448 c -2.126,2.05459 -3.374,5.90359 -2.164,8.6012 1.099,2.45051 4.53,3.10542 7.142,3.72928 5.016,1.19794 10.59,1.47751 15.469,-0.19118 2.484,-0.8493 5.605,-2.20928 6.285,-4.74433 0.735,-2.74196 -1.117,-6.04976 -3.316,-7.84474 -2.795,-2.28096 -7.061,-3.22232 -10.828,-3.23276 -4.372,-0.0121 -9.657,0.85006 -12.588,3.68253 z m -142.678,-2.55818 c -3.716,0.32847 -8.502,0.39442 -10.647,3.44612 -1.823,2.59348 -1.665,7.02455 0.309,9.50505 1.977,2.48476 6.043,2.18906 9.208,2.43947 3.744,0.2961 8.037,0.87411 11.208,-1.13674 2.326,-1.47514 4.575,-4.34451 4.26,-7.08094 -0.32,-2.7725 -3.346,-4.74419 -5.836,-6.00345 -2.553,-1.29079 -5.653,-1.42143 -8.502,-1.16951 z m 1321.65,0 c -3.703,0.31444 -8.448,0.3924 -10.614,3.41229 -1.829,2.55047 -1.763,6.92217 0.145,9.41483 1.867,2.44022 5.8,2.25408 8.859,2.54636 3.808,0.36386 8.13,0.91196 11.429,-1.02386 2.335,-1.36983 4.751,-4.0059 4.578,-6.70704 -0.183,-2.84953 -3.177,-5.05056 -5.693,-6.40145 -2.582,-1.38658 -5.784,-1.48911 -8.704,-1.24113 z m -1360.516,0 c -3.705,0.30189 -8.451,0.39151 -10.617,3.41229 -1.83,2.55038 -1.763,6.9221 0.144,9.41483 1.867,2.4398 5.8,2.24931 8.857,2.54653 3.766,0.36603 8.02,0.89501 11.308,-0.97654 2.341,-1.33282 4.812,-3.8768 4.709,-6.56899 -0.108,-2.82272 -2.984,-5.11037 -5.449,-6.4903 -2.633,-1.47381 -5.945,-1.58282 -8.952,-1.33782 z m -101.4528,19.08008 c -4.0571,0.20806 -8.9636,3.51664 -9.5813,7.53183 -0.5202,3.38098 2.6893,7.02568 5.7884,8.47403 3.2172,1.5036 7.8157,1.16674 10.6035,-1.03321 2.4243,-1.91317 4.0407,-5.84583 3.0176,-8.75976 -1.284,-3.65689 -5.9575,-6.41139 -9.8282,-6.21289 z m 151.7658,2.94113 c -2.062,2.04931 -3.351,5.77035 -2.2,8.43974 1.056,2.44713 4.426,3.19637 7.012,3.84193 5.099,1.27284 10.795,1.52368 15.764,-0.18801 2.456,-0.84611 5.527,-2.21614 6.195,-4.7262 0.73,-2.73962 -1.143,-6.00027 -3.301,-7.83816 -2.885,-2.45608 -7.256,-2.7046 -11.045,-2.68523 -4.273,0.0219 -9.394,0.14367 -12.425,3.15593 z m 85.732,-2.5857 c -3.71,0.3224 -8.488,0.38701 -10.631,3.43224 -1.828,2.59824 -1.675,7.04199 0.305,9.52674 1.989,2.49603 5.868,2.81799 9.05,3.06533 3.722,0.28927 8.188,0.21193 11.35,-1.77041 2.302,-1.44276 4.556,-4.2324 4.282,-6.93528 -0.283,-2.78601 -3.272,-4.83045 -5.759,-6.11668 -2.57,-1.32902 -5.714,-1.45245 -8.597,-1.20194 z m -281.2435,0.47351 c -2.3079,2.88646 -3.3696,9.31312 -1.3813,12.30578 1.9884,2.99266 5.3613,2.24711 8.8018,2.58973 3.4404,0.34262 8.6816,0.67682 11.5257,-1.01269 2.8441,-1.68951 4.6437,-4.01255 4.5807,-6.8954 -0.063,-2.88285 -2.8276,-5.48701 -5.3164,-7.29038 -2.4888,-1.80338 -5.758,-2.93565 -8.9593,-2.90324 -3.2013,0.0324 -6.9433,0.31975 -9.2512,3.2062 z m 242.3785,-0.47351 c -3.727,0.31445 -8.505,0.41548 -10.672,3.46393 -1.808,2.54459 -1.705,6.8894 0.199,9.36319 1.875,2.43545 5.802,2.25481 8.861,2.54774 3.802,0.364 8.1,0.88253 11.412,-1.01899 2.298,-1.31923 4.714,-3.83361 4.602,-6.48087 -0.121,-2.86934 -3.052,-5.1845 -5.562,-6.57958 -2.603,-1.4467 -5.872,-1.54582 -8.84,-1.29542 z m 77.744,0 c -3.726,0.31445 -8.505,0.41548 -10.671,3.46393 -1.809,2.54459 -1.706,6.8894 0.198,9.36319 1.875,2.43545 5.802,2.25483 8.861,2.54774 3.798,0.36361 8.091,0.8797 11.401,-1.01812 2.3,-1.31919 4.724,-3.83199 4.613,-6.48174 -0.119,-2.86941 -3.052,-5.1845 -5.562,-6.57958 -2.603,-1.4467 -5.872,-1.54582 -8.84,-1.29542 z m 1205.031,0 c -3.726,0.31445 -8.505,0.41549 -10.671,3.46393 -1.809,2.54459 -1.706,6.8894 0.198,9.36319 1.875,2.43546 5.802,2.25479 8.861,2.54771 3.802,0.364 8.1,0.88254 11.412,-1.01896 2.298,-1.31923 4.714,-3.8336 4.603,-6.48087 -0.121,-2.86935 -3.052,-5.1845 -5.563,-6.57958 -2.603,-1.44671 -5.872,-1.54583 -8.84,-1.29542 z M 457.899,201.44851 c -4.122,0.40744 -8.62,5.24835 -8.166,9.36523 0.452,4.10105 5.913,8.07548 9.971,7.33374 3.989,-0.72899 7.301,-6.21106 6.617,-10.20791 -0.598,-3.49358 -4.895,-6.83973 -8.422,-6.49106 z m -206.5839,0.2832 c -4.0806,0.1657 -9.0112,3.54995 -9.6188,7.58842 -0.5071,3.37045 2.7259,6.9615 5.8089,8.41489 3.1316,1.4763 7.5675,1.17492 10.3483,-0.88747 2.4531,-1.81932 4.3074,-5.59253 3.3991,-8.50841 -1.1831,-3.79789 -5.9629,-6.76882 -9.9375,-6.60743 z m -35.4121,0.33594 c -4.0934,0.43916 -9.1181,-0.26006 -12.0722,2.60726 -2.112,2.05 -3.3362,5.89107 -2.1205,8.57162 1.1218,2.47346 4.5956,3.11695 7.2394,3.73879 5.0363,1.18459 10.6286,1.45866 15.5197,-0.22822 2.411,-0.83155 5.4235,-2.16665 6.0932,-4.62758 0.7502,-2.75658 -1.0532,-6.10972 -3.2571,-7.92748 -2.7859,-2.29779 -7.0276,-1.77947 -10.6213,-2.13521 -0.2591,-0.0257 -0.5223,-0.027 -0.7812,8.2e-4 z m 272.896,0.0195 c -3.673,0.57566 -8.439,0.4002 -10.619,3.4123 -1.827,2.52473 -1.806,6.85707 0.07,9.34942 1.824,2.43038 5.713,2.29682 8.737,2.6054 3.86,0.39403 8.246,0.95024 11.598,-1.0044 2.347,-1.36842 4.772,-4.00806 4.612,-6.72014 -0.166,-2.80761 -3.09,-5.00193 -5.56,-6.3467 -2.613,-1.42284 -5.865,-1.07933 -8.833,-1.29588 z m 38.87,0 c -3.717,0.31421 -8.48,0.40628 -10.647,3.44202 -1.818,2.54669 -1.733,6.90289 0.171,9.3851 1.871,2.43818 5.802,2.25441 8.862,2.54777 3.795,0.36398 8.109,0.92197 11.394,-1.01421 2.36,-1.39081 4.787,-4.07498 4.602,-6.80794 -0.188,-2.80056 -3.136,-4.95234 -5.609,-6.28052 -2.603,-1.3983 -5.829,-1.52117 -8.773,-1.27222 z m 1205.031,0 c -3.717,0.31421 -8.48,0.4063 -10.647,3.44202 -1.818,2.54669 -1.733,6.90288 0.172,9.3851 1.871,2.43819 5.801,2.25441 8.861,2.54777 3.796,0.36398 8.109,0.92198 11.395,-1.01421 2.359,-1.39081 4.786,-4.07499 4.602,-6.80794 -0.189,-2.80055 -3.137,-4.95234 -5.61,-6.28052 -2.603,-1.39831 -5.829,-1.52117 -8.773,-1.27222 z m 31.418,0.22461 c -3.29,0.43864 -6.126,3.82356 -7.079,7.0029 -1.049,3.49686 -0.448,8.26955 2.262,10.71585 2.334,2.10687 6.843,2.85486 9.38,0.99763 3.971,-2.90696 4.988,-9.9881 2.948,-14.46662 -1.193,-2.6178 -4.66,-4.62991 -7.511,-4.24976 z M 224.85,225.43228 c -1.7597,2.60639 -1.613,6.95916 0.3344,9.42848 1.911,2.42322 5.8361,2.39271 8.9211,2.47578 3.5015,0.0943 7.8281,0.25769 10.2623,-2.26108 2.1064,-2.17957 2.9792,-6.21658 1.6525,-8.94188 -1.4589,-2.99655 -2.8971,-4.02198 -8.1593,-5.45112 -5.2621,-1.42915 -10.845,1.54158 -13.011,4.74982 z m -27.5935,-3.90953 c -3.7054,0.31111 -8.4527,0.39268 -10.6198,3.41425 -1.8288,2.54996 -1.7655,6.92319 0.1446,9.41287 1.8913,2.46511 5.8717,2.2599 8.965,2.55182 3.7564,0.3545 8.0122,0.88853 11.2743,-1.00744 2.3397,-1.35982 4.7836,-3.9666 4.6304,-6.66838 -0.1616,-2.85098 -3.14,-5.07766 -5.65,-6.43932 -2.5888,-1.40436 -5.8097,-1.51021 -8.7445,-1.2638 z m 1554.8805,0 c -3.713,0.3136 -8.472,0.3991 -10.639,3.4303 -1.822,2.54903 -1.741,6.91245 0.166,9.39858 1.871,2.43889 5.803,2.25357 8.863,2.54598 3.802,0.36326 8.125,0.92541 11.41,-1.02028 2.359,-1.39693 4.776,-4.0965 4.581,-6.83114 -0.2,-2.80196 -3.162,-4.93836 -5.64,-6.26155 -2.597,-1.38663 -5.807,-1.50965 -8.741,-1.26189 z m 4.682,28.28125 c 0.52,4.05646 5.886,7.92028 9.916,7.22502 3.925,-0.67706 7.346,-5.92822 6.741,-9.86467 -0.568,-3.69631 -5.101,-7.34342 -8.818,-6.93606 -4.101,0.44934 -8.364,5.48418 -7.839,9.57571 z M 182.3092,240.91142 c -3.8933,-0.15362 -8.8178,0.77889 -10.9746,4.02381 -1.7356,2.61118 -1.5238,6.9468 0.4336,9.39611 1.9182,2.4003 5.8163,2.36013 8.8877,2.44489 3.4769,0.0959 7.7621,0.27396 10.1982,-2.20856 2.1243,-2.16473 3.1397,-6.2275 1.758,-8.9274 -1.7216,-3.36381 -6.5271,-4.57987 -10.3029,-4.72885 z m 1537.5028,2.65183 c -2.032,2.11946 -3.304,5.88106 -2.094,8.55635 1.107,2.44741 4.531,3.10746 7.144,3.72914 5.064,1.20476 10.695,1.4829 15.615,-0.21857 2.419,-0.83665 5.425,-2.19124 6.104,-4.65922 0.746,-2.70816 -1.071,-5.91919 -3.139,-7.81978 -2.771,-2.54618 -7.031,-3.27915 -10.793,-3.30797 -4.455,-0.0341 -9.754,0.50447 -12.837,3.72005 z M 216.6901,240.96022 c -3.7128,0.30999 -8.4755,0.39752 -10.6371,3.43204 -1.8222,2.55798 -1.7251,6.93507 0.1957,9.41982 1.8929,2.44867 5.8533,2.23922 8.9351,2.52492 3.7713,0.34962 8.0331,0.86193 11.3158,-1.02711 2.2935,-1.31976 4.705,-3.83098 4.5928,-6.47467 -0.1218,-2.86931 -3.052,-5.1845 -5.5623,-6.57958 -2.6031,-1.4467 -5.8722,-1.54321 -8.84,-1.29542 z M 1718.708,260.0403 c -4.048,0.21666 -8.948,3.49186 -9.575,7.49644 -0.53,3.38346 2.667,7.04595 5.766,8.50356 3.214,1.51153 7.824,1.19121 10.605,-1.01758 2.447,-1.94348 4.041,-5.94577 2.985,-8.88672 -1.299,-3.6157 -5.945,-6.30105 -9.781,-6.0957 z m -1521.4574,0.35547 c -3.703,0.31444 -8.448,0.3924 -10.6139,3.41229 -1.8292,2.55048 -1.7625,6.9221 0.1446,9.41483 1.8676,2.4409 5.8018,2.25544 8.8612,2.54772 3.8071,0.3637 8.1291,0.91052 11.4274,-1.02522 2.3344,-1.36998 4.7503,-4.00591 4.5772,-6.70705 -0.1826,-2.84952 -3.1765,-5.05056 -5.6921,-6.40144 -2.582,-1.38658 -5.7841,-1.48911 -8.7044,-1.24113 z m 1554.8864,0 c -3.713,0.30921 -8.471,0.39796 -10.639,3.42834 -1.823,2.54851 -1.744,6.91198 0.162,9.39878 1.87,2.43919 5.802,2.25482 8.861,2.54774 3.802,0.364 8.1,0.88251 11.412,-1.01899 2.298,-1.31923 4.714,-3.8336 4.603,-6.48087 -0.121,-2.86935 -3.052,-5.18442 -5.563,-6.57958 -2.602,-1.44617 -5.869,-1.54248 -8.836,-1.29542 z m -50.349,18.79687 c -4.024,0.74608 -8.416,5.07047 -8.18,9.15625 0.223,3.86244 4.823,7.38686 8.678,7.70701 2.801,0.23258 5.844,-1.98959 7.142,-4.4824 1.338,-2.56773 1.136,-6.24159 -0.434,-8.67448 -1.464,-2.27003 -4.55,-4.19883 -7.206,-3.70638 z m -1524.7581,0.61914 c -4.0916,0.0713 -9.0397,-0.25427 -12.0056,2.5652 -2.1191,2.01444 -3.4247,5.79025 -2.2645,8.47402 1.0787,2.49529 4.5415,3.21688 7.1818,3.86421 5.0452,1.23698 10.682,1.52363 15.5828,-0.19887 2.5017,-0.8793 5.6518,-2.31877 6.269,-4.89774 0.6714,-2.80531 -1.3797,-6.08191 -3.6685,-7.83755 -2.9803,-2.28614 -7.3394,-2.0347 -11.095,-1.96927 z m 1555.6701,0.0195 c -3.717,0.3161 -8.495,0.39543 -10.647,3.44202 -1.822,2.58047 -1.685,6.99053 0.269,9.47345 1.936,2.46168 5.945,2.19864 9.065,2.47039 3.701,0.32232 7.902,0.86791 11.097,-1.02713 2.359,-1.39904 4.787,-4.08974 4.595,-6.82552 -0.198,-2.80857 -3.169,-4.95089 -5.652,-6.27683 -2.593,-1.38405 -5.799,-1.50546 -8.727,-1.25638 z M 162.8737,299.21804 c -3.8872,-0.12416 -8.7957,0.77472 -10.9577,4.00761 -1.7397,2.60155 -1.5578,6.92949 0.3877,9.38101 1.919,2.41823 5.8386,2.39786 8.9248,2.47452 3.5302,0.0877 7.9188,0.2536 10.3366,-2.32017 2.0987,-2.23421 2.9167,-6.38956 1.4497,-9.08115 -1.7673,-3.24276 -6.4499,-4.34392 -10.1411,-4.46182 z m 31.0221,-0.18393 c -2.917,0.73793 -6.4838,1.60207 -7.985,4.20975 -1.5549,2.70099 -1.549,6.89613 0.3826,9.3419 1.8978,2.4029 5.781,2.3932 8.8413,2.49226 3.5025,0.11337 7.8382,0.31969 10.2819,-2.19201 2.149,-2.20874 2.9919,-6.30334 1.6788,-9.0912 -1.3347,-2.83354 -5.2175,-3.64665 -8.2106,-4.56922 -1.677,-0.29094 -3.456,-0.30975 -4.989,-0.19148 z m 1519.3622,0.23273 c -3.718,0.31876 -8.513,0.39137 -10.652,3.45003 -1.823,2.60625 -1.636,7.05328 0.354,9.53434 1.986,2.47652 6.048,2.16321 9.213,2.41169 3.684,0.28929 7.871,0.8144 11.033,-1.09942 2.305,-1.39509 4.642,-4.06747 4.439,-6.754 -0.212,-2.81272 -3.169,-4.9645 -5.657,-6.29289 -2.593,-1.38432 -5.801,-1.5008 -8.73,-1.24975 z m -32.271,22.01288 c -2.145,1.98991 -3.36,5.81772 -2.19,8.49936 1.062,2.43447 4.429,3.15602 7.007,3.7924 5.103,1.25933 10.795,1.51193 15.767,-0.19136 2.425,-0.83076 5.452,-2.16963 6.132,-4.64145 0.752,-2.73827 -0.985,-6.12769 -3.211,-7.89106 -2.975,-2.35676 -7.454,-1.80552 -11.249,-1.76424 -4.15,0.0451 -9.214,-0.62664 -12.256,2.19635 z M 167.2012,322.1166 c -1.8255,2.52272 -1.8092,6.85338 0.063,9.34162 1.8488,2.45715 5.7873,2.30514 8.8466,2.61523 3.7955,0.38471 8.0838,0.90405 11.4032,-0.97626 2.3311,-1.32045 4.809,-3.83887 4.7053,-6.51593 -0.1116,-2.87946 -0.5452,-3.51746 -7.5052,-8.17166 -6.9599,-4.6542 -15.3355,0.69779 -17.513,3.70699 z m 23.44,15.38263 c -4.0253,0.63665 -8.2952,5.00215 -8.1914,9.07617 0.093,3.65956 4.1475,7.19805 7.7637,7.76758 2.8828,0.45404 6.2323,-1.52421 7.793,-3.99023 1.5083,-2.38339 1.6347,-5.99402 0.2614,-8.45771 -1.4287,-2.56297 -4.7284,-4.8542 -7.6267,-4.39581 z m 1507.8498,9.33152 c 0.165,3.69785 4.482,7.10025 8.159,7.53309 2.836,0.33392 6.018,-1.73262 7.472,-4.19073 1.429,-2.4178 1.631,-6.09125 0.07,-8.42619 -1.624,-2.42852 -5.28,-3.93471 -8.127,-3.28114 -3.666,0.84152 -7.742,4.60727 -7.574,8.36497 z M 158.3756,338.13991 c -3.7156,0.32847 -8.5015,0.39442 -10.6465,3.44612 -1.8228,2.59348 -1.6652,7.02455 0.3086,9.50505 1.9773,2.48476 6.0432,2.18906 9.2088,2.43947 3.7432,0.2961 8.0361,0.87412 11.2072,-1.13674 2.3263,-1.47514 4.5758,-4.34452 4.2602,-7.08095 -0.3197,-2.7725 -3.3454,-4.74418 -5.8361,-6.00344 -2.553,-1.29079 -5.6525,-1.42143 -8.5022,-1.16951 z m 1516.0094,0 c -3.71,0.312 -8.456,0.40566 -10.631,3.42834 -1.82,2.53055 -1.769,6.86387 0.11,9.35095 1.828,2.41983 5.705,2.28395 8.723,2.58774 3.874,0.38999 8.277,0.94732 11.635,-1.02327 2.329,-1.36634 4.719,-4.00276 4.554,-6.69728 -0.173,-2.81696 -3.101,-5.02019 -5.58,-6.36748 -2.608,-1.41664 -5.854,-1.52766 -8.811,-1.279 z M 164.9636,360.16113 c -2.0984,2.00997 -3.3644,5.77012 -2.2038,8.43402 1.086,2.49271 4.5428,3.21718 7.1837,3.86395 5.0552,1.23801 10.6966,1.50449 15.6124,-0.20517 2.4593,-0.85534 5.5391,-2.24489 6.1889,-4.76636 0.7124,-2.76464 -1.1913,-6.06403 -9.5518,-9.29072 -8.3605,-3.22668 -14.2565,-0.88336 -17.2294,1.96428 z m 1477.1444,-0.008 c -2.028,2.09159 -3.371,5.78638 -2.205,8.45593 1.086,2.48824 4.54,3.20469 7.177,3.85075 5.021,1.23018 10.615,1.48263 15.508,-0.18468 2.471,-0.84173 5.583,-2.18517 6.258,-4.70633 0.743,-2.77747 -1.237,-6.02041 -3.381,-7.93548 -2.783,-2.48482 -6.995,-3.19166 -10.726,-3.19826 -4.389,-0.008 -9.577,0.56645 -12.631,3.71807 z m 44.266,-2.35261 c -3.29,0.43877 -6.126,3.82213 -7.08,7.00095 -1.049,3.49738 -0.447,8.27102 2.263,10.7178 2.334,2.10691 6.843,2.85545 9.38,0.99763 3.971,-2.90879 4.984,-9.99331 2.942,-14.47247 -1.193,-2.61494 -4.657,-4.62387 -7.505,-4.24391 z M 165.983,376.38015 c -3.8357,1.34328 -8.2801,5.35106 -7.7833,9.3847 0.5029,4.08348 5.8421,7.54539 9.9494,7.30475 2.9846,-0.17487 5.9651,-3.18629 6.5606,-6.11617 0.7019,-3.45322 -1.5604,-7.44491 -4.3048,-9.65531 -1.1724,-0.94429 -3.0011,-1.41553 -4.4219,-0.91797 z m 1504.152,0.27734 c -4.073,0.18285 -8.996,3.53773 -9.609,7.56881 -0.512,3.36907 2.708,6.96851 5.788,8.42707 3.132,1.48302 7.585,1.20117 10.358,-0.87606 2.481,-1.85858 4.31,-5.72262 3.358,-8.67319 -1.208,-3.74649 -5.962,-6.62316 -9.895,-6.44663 z m -1472.8844,0.35352 c -3.7183,0.32381 -8.5134,0.39137 -10.6523,3.45003 -1.8226,2.60625 -1.6361,7.05328 0.3535,9.53434 1.986,2.47652 6.0483,2.16208 9.213,2.41172 3.6777,0.29012 7.8732,0.8464 11.0138,-1.08934 2.3517,-1.44957 4.6991,-4.25149 4.4349,-7.00146 -0.2671,-2.78051 -3.2684,-4.81349 -5.7499,-6.09606 -2.5755,-1.33118 -5.7248,-1.46075 -8.613,-1.20923 z m 1438.2634,0 c -3.663,0.57228 -8.414,0.39209 -10.592,3.39255 -1.835,2.52748 -1.825,6.86996 0.05,9.36917 1.823,2.43294 5.716,2.29334 8.74,2.60547 3.825,0.39472 8.152,0.93239 11.494,-0.96781 2.347,-1.33456 4.837,-3.89141 4.713,-6.58883 -0.133,-2.88595 -3.133,-5.17091 -5.668,-6.55666 -2.581,-1.41081 -5.801,-1.04438 -8.734,-1.25389 0,-10e-6 0,-2e-5 0,0 z m 15.168,19.08203 c -4.08,0.22128 -9.014,3.57648 -9.601,7.62001 -0.492,3.38864 2.785,6.98284 5.897,8.41103 3.191,1.46409 7.725,1.13653 10.48,-1.03885 2.436,-1.924 4.071,-5.87352 3.043,-8.80274 -1.282,-3.65022 -5.956,-6.39897 -9.819,-6.18945 z m -1468.363,0.30664 c -3.8971,-0.13561 -8.8254,0.77665 -10.9844,4.02381 -1.736,2.61093 -1.5273,6.94958 0.4336,9.39611 1.9426,2.42372 5.8863,2.3741 8.9916,2.44609 3.4664,0.0804 7.7553,0.24229 10.1529,-2.26249 2.1164,-2.21104 3.0366,-6.33654 1.6035,-9.04102 -1.7435,-3.2904 -6.4757,-4.43299 -10.1972,-4.5625 z m 1432.898,0.0293 c -4.081,0.0913 -9.022,-0.23445 -11.969,2.59064 -2.106,2.01913 -3.378,5.79576 -2.21,8.46902 1.088,2.48735 4.543,3.20065 7.181,3.84203 5.091,1.23795 10.786,1.54612 15.717,-0.22396 2.463,-0.88391 5.558,-2.35135 6.128,-4.90486 0.641,-2.86551 -1.527,-6.15081 -3.88,-7.90792 -2.971,-2.21908 -7.259,-1.94785 -10.967,-1.86495 z m -1398.523,0.0176 c -3.7129,0.31355 -8.4714,0.39955 -10.6389,3.4303 -1.8223,2.54814 -1.7443,6.91071 0.1618,9.39682 1.8711,2.4405 5.8057,2.25515 8.867,2.54774 3.8019,0.36337 8.1288,0.93024 11.412,-1.02081 2.3647,-1.4052 4.7785,-4.12458 4.575,-6.86773 -0.207,-2.79084 -3.1642,-4.90877 -5.6345,-6.22393 -2.5989,-1.38372 -5.8085,-1.51016 -8.7424,-1.26239 z m 1407.476,23.41637 c -1.737,2.6513 -1.456,7.0468 0.559,9.49332 2.007,2.43611 6.016,2.32469 9.172,2.35487 3.41,0.0326 7.642,0.15033 9.957,-2.35441 2.082,-2.2532 2.849,-6.38877 1.406,-9.09587 -1.638,-3.07184 -6.453,-3.59209 -10.008,-3.70706 -3.854,-0.12463 -8.95,0.0499 -11.086,3.30915 z m -1426.9135,-3.9789 c -3.7051,0.31116 -8.4525,0.39107 -10.6198,3.41229 -1.8294,2.55033 -1.7658,6.9246 0.1446,9.41483 1.89,2.46354 5.8678,2.25966 8.9591,2.55043 3.7642,0.35406 8.0411,0.90533 11.2968,-1.01687 2.3606,-1.39372 4.7902,-4.0809 4.6021,-6.81576 -0.1931,-2.80688 -3.156,-4.955 -5.6365,-6.28269 -2.5971,-1.39004 -5.811,-1.50874 -8.7463,-1.26223 z m 38.8711,0 c -3.7121,0.30504 -8.4701,0.39748 -10.635,3.42834 -1.8231,2.5524 -1.74,6.92313 0.1737,9.40832 1.8908,2.45544 5.8582,2.24725 8.9433,2.54104 3.7286,0.35506 7.9355,0.87094 11.194,-0.97582 2.3366,-1.32424 4.8177,-3.84275 4.7244,-6.52688 -0.099,-2.84116 -2.9893,-5.15355 -5.4686,-6.54459 -2.6252,-1.47287 -5.9318,-1.57694 -8.9318,-1.33041 z m 1360.5194,0 c -3.712,0.3052 -8.471,0.397 -10.635,3.42834 -1.823,2.55329 -1.737,6.92488 0.178,9.41008 1.89,2.45381 5.855,2.24573 8.939,2.53928 3.729,0.35495 7.936,0.87096 11.194,-0.97582 2.337,-1.32424 4.818,-3.84275 4.724,-6.52688 -0.1,-2.84128 -2.988,-5.15424 -5.468,-6.54534 -2.625,-1.4729 -5.932,-1.57632 -8.932,-1.32966 z m 19.066,19.38672 c -3.894,-0.13786 -8.83,0.77219 -10.974,4.02576 -1.737,2.63489 -1.481,7.00457 0.509,9.4531 1.961,2.41207 5.906,2.33393 9.014,2.39222 3.437,0.0645 7.682,0.21331 10.059,-2.26952 2.109,-2.2029 3.045,-6.306 1.623,-9.00391 -1.743,-3.30747 -6.494,-4.46537 -10.231,-4.59765 z m -51.353,2.6307 c -2.031,2.1012 -3.35,5.81331 -2.18,8.49097 1.066,2.44008 4.442,3.15962 7.028,3.79826 5.06,1.25004 10.704,1.51338 15.635,-0.17364 2.487,-0.8507 5.609,-2.2203 6.286,-4.75996 0.731,-2.7409 -1.213,-5.94102 -3.327,-7.83246 -2.801,-2.50649 -7.045,-3.22237 -10.803,-3.23221 -4.391,-0.0115 -9.588,0.55202 -12.639,3.70904 z m -1347.6699,-2.5819 c -3.7267,0.31445 -8.5051,0.41548 -10.6717,3.46393 -1.8084,2.54459 -1.7057,6.88941 0.1985,9.3632 1.8746,2.43545 5.8018,2.25481 8.8612,2.54774 3.8017,0.364 8.0998,0.88253 11.4119,-1.01899 2.2978,-1.31923 4.7141,-3.83362 4.6024,-6.48088 -0.121,-2.86934 -3.052,-5.18449 -5.5623,-6.57957 -2.6031,-1.4467 -5.8724,-1.54583 -8.84,-1.29543 z m 38.873,0 c -3.6721,0.57566 -8.4399,0.39883 -10.6158,3.4123 -1.8272,2.53045 -1.7959,6.87205 0.085,9.36309 1.8428,2.44115 5.7582,2.28994 8.8017,2.59362 3.8383,0.38297 8.181,0.90508 11.5275,-1.01313 2.2988,-1.31763 4.7141,-3.83362 4.6024,-6.48088 -0.121,-2.86934 -3.052,-5.18445 -5.5623,-6.57957 -2.6025,-1.44643 -5.8684,-1.07895 -8.8381,-1.29543 z m 1306.7009,19.38672 c -3.894,-0.14728 -8.826,0.77523 -10.974,4.02577 -1.736,2.62574 -1.499,6.98401 0.481,9.43048 1.964,2.42569 5.926,2.35186 9.046,2.414 3.429,0.0683 7.656,0.21159 10.039,-2.25501 2.106,-2.1801 3.082,-6.24553 1.686,-8.93634 -1.733,-3.34143 -6.516,-4.53662 -10.278,-4.6789 z m -1326.1325,0.0488 c -3.6734,0.57566 -8.4399,0.40019 -10.6198,3.41229 -1.8272,2.52473 -1.806,6.85708 0.065,9.34943 1.8246,2.43038 5.7135,2.29777 8.737,2.6054 3.8673,0.39349 8.2612,0.94758 11.6176,-1.0134 2.34,-1.3672 4.7598,-4.00415 4.5927,-6.70919 -0.1749,-2.83199 -3.1398,-5.03019 -5.6362,-6.37889 -2.5947,-1.40181 -5.8148,-1.05416 -8.7564,-1.26564 z m 38.8691,0 c -3.7164,0.31556 -8.4798,0.40628 -10.6467,3.44202 -1.8177,2.54669 -1.7333,6.90289 0.1716,9.3851 1.8711,2.43818 5.8018,2.25441 8.8611,2.54777 3.7959,0.36398 8.1098,0.92219 11.3948,-1.01421 2.3601,-1.39124 4.7894,-4.07661 4.602,-6.8099 -0.1926,-2.81005 -3.1592,-4.96074 -5.6426,-6.28989 -2.5952,-1.38904 -5.8072,-1.50993 -8.7402,-1.26089 z m 1321.6504,0 c -3.706,0.30611 -8.44,0.40022 -10.62,3.41229 -1.827,2.52472 -1.806,6.85707 0.06,9.34943 1.825,2.4304 5.714,2.29777 8.737,2.6054 3.868,0.39349 8.261,0.94759 11.618,-1.0134 2.34,-1.3672 4.752,-4.00372 4.593,-6.70919 -0.166,-2.80322 -3.079,-4.9984 -5.545,-6.34289 -2.617,-1.42739 -5.877,-1.54708 -8.848,-1.30164 z m -52.867,19.08203 c -4.069,0.17473 -8.983,3.54183 -9.592,7.56881 -0.51,3.37307 2.715,6.9743 5.799,8.43255 3.131,1.48009 7.573,1.18498 10.351,-0.88173 2.465,-1.83372 4.315,-5.64129 3.389,-8.5708 -1.196,-3.78542 -5.981,-6.71914 -9.947,-6.54883 z m -1288.217,0.35352 c -3.712,0.30416 -8.4676,0.39743 -10.6351,3.42618 -1.824,2.54865 -1.7483,6.91331 0.158,9.40094 1.8702,2.44045 5.8045,2.25405 8.8651,2.54788 3.794,0.36424 8.0809,0.88198 11.3896,-1.00996 2.2991,-1.31462 4.7168,-3.81807 4.6189,-6.46465 -0.1053,-2.84693 -2.9855,-5.17153 -5.4686,-6.56803 -2.6226,-1.47496 -5.929,-1.57809 -8.9279,-1.33236 z m 38.8711,0 c -3.6832,0.57974 -8.4651,0.41103 -10.6447,3.43616 -1.8172,2.52221 -1.7782,6.84239 0.092,9.32556 1.8295,2.42905 5.7175,2.2976 8.7428,2.6054 3.8628,0.39301 8.2607,0.96351 11.6044,-1.01026 2.3624,-1.39453 4.7812,-4.09705 4.5864,-6.83342 -0.1994,-2.80199 -3.1622,-4.93836 -5.6402,-6.26155 -2.5967,-1.38664 -5.8044,-1.05103 -8.7407,-1.26189 z m 1282.7749,0 c -3.715,0.31444 -8.477,0.40189 -10.644,3.43616 -1.82,2.54835 -1.735,6.90872 0.171,9.39272 1.872,2.43827 5.803,2.25691 8.863,2.54598 3.832,0.36195 8.196,0.92229 11.498,-1.05344 2.331,-1.39433 4.696,-4.08936 4.493,-6.79798 -0.209,-2.80127 -3.162,-4.93836 -5.64,-6.26155 -2.597,-1.38663 -5.807,-1.51015 -8.741,-1.26189 z M 265.1964,496.33166 c -1.4993,0.9807 -1.9432,2.90668 -2.1347,4.57441 -0.2125,2.50576 0.5527,5.46426 2.9001,6.75549 2.5043,1.31184 5.4212,1.05121 8.1446,1.41795 3.4585,0.3381 7.2028,0.72801 10.3927,-0.96396 2.1827,-1.1757 4.1679,-3.0882 4.81,-5.54549 0.4069,-1.91719 -0.5792,-3.82133 -1.9627,-5.09756 -1.1984,-1.16354 -2.5975,-2.17615 -4.1506,-2.79506 -2.4619,-0.59736 -5.3609,-1.46371 -9.2818,-1.25879 -3.9208,0.20492 -6.2719,1.73523 -8.7176,2.91301 z m 48.6616,-2.70352 c -3.7109,0.32291 -8.4884,0.39244 -10.6328,3.43831 -1.8247,2.59199 -1.6758,7.02378 0.2969,9.50505 1.9862,2.49821 6.0749,2.19373 9.2563,2.44851 3.6897,0.29549 7.8966,0.84276 11.0503,-1.095 2.3276,-1.43012 4.6541,-4.1896 4.4063,-6.91015 -0.2552,-2.80116 -3.2532,-4.87837 -5.7477,-6.17803 -2.5759,-1.34204 -5.7357,-1.46047 -8.6293,-1.20869 z m 1233.298,3.41229 c -1.825,2.52271 -1.809,6.85336 0.06,9.34161 1.849,2.45715 5.788,2.30484 8.847,2.61524 3.795,0.38509 8.089,0.91502 11.403,-0.97399 2.344,-1.33611 4.822,-3.8928 4.703,-6.58851 -0.126,-2.85971 -3.077,-5.14254 -5.584,-6.52394 -2.603,-1.43439 -5.839,-2.18764 -8.853,-1.95958 -3.77,0.28523 -8.401,1.07998 -10.579,4.08917 z M 295.664,528.49764 c -4.0591,1.22279 -9.0055,0.57565 -12.6097,-1.65625 -2.0586,-1.27475 -4.0232,-3.60468 -4.0566,-6.02577 -0.032,-2.3483 1.8263,-4.63543 3.7718,-5.95094 3.1524,-2.13158 7.5329,-3.00139 11.2251,-2.08016 4.2599,1.06289 10.2101,3.81324 10.3056,8.20274 0.083,3.81412 -4.9833,6.40999 -8.6362,7.51038 z m 30.275,0.39335 c 3.0047,1.2187 7.087,0.89184 9.668,-1.07127 2.426,-1.84504 4.394,-5.60918 3.396,-8.4884 -1.423,-4.10133 -6.999,-7.19193 -11.2846,-6.50084 -3.86,0.62246 -7.7325,4.84417 -7.8079,8.75329 -0.061,3.15707 3.1023,6.12039 6.0285,7.30722 z m 1246.999,-16.18271 c -4.069,0.16389 -8.969,3.54396 -9.592,7.5688 -0.518,3.3438 2.643,6.94188 5.694,8.40365 3.157,1.51242 7.65,1.21922 10.468,-0.85875 2.449,-1.80643 4.302,-5.5663 3.401,-8.47308 -1.183,-3.81397 -5.981,-6.80131 -9.971,-6.64062 z m -34.6,0.35351 c -3.706,0.30795 -8.458,0.39116 -10.621,3.41642 -1.828,2.55671 -1.747,6.93741 0.17,9.42783 1.887,2.44991 5.845,2.24437 8.924,2.53248 3.774,0.3532 8.039,0.86782 11.325,-1.02086 2.298,-1.3202 4.714,-3.83361 4.603,-6.48087 -0.121,-2.86955 -3.052,-5.18548 -5.562,-6.58069 -2.603,-1.44645 -5.871,-1.54086 -8.839,-1.29431 z m -1224.4663,19.4375 c -3.7038,0.312 -8.4488,0.39241 -10.6158,3.41229 -1.8299,2.55003 -1.766,6.92171 0.1407,9.41483 1.867,2.44129 5.8017,2.25475 8.8611,2.54774 3.8005,0.36396 8.1273,0.9339 11.4084,-1.0182 2.3723,-1.4114 4.7926,-4.14528 4.5826,-6.89767 -0.2129,-2.78874 -3.179,-4.89309 -5.65,-6.20313 -2.5966,-1.3766 -5.7984,-1.50256 -8.727,-1.25586 z m 1243.9043,0 c -3.724,0.31805 -8.499,0.41154 -10.666,3.45655 -1.812,2.54539 -1.714,6.8941 0.191,9.37057 1.873,2.4362 5.802,2.25459 8.861,2.54777 3.799,0.36407 8.118,0.92433 11.404,-1.01648 2.359,-1.39289 4.782,-4.08304 4.591,-6.81544 -0.197,-2.81152 -3.168,-4.95856 -5.654,-6.28659 -2.592,-1.38482 -5.799,-1.50648 -8.727,-1.25638 z M 299.8893,551.58132 c -4.0868,0.20041 -9.0239,3.58383 -9.6133,7.63282 -0.4915,3.37683 2.7719,6.95665 5.8701,8.38711 3.1758,1.46633 7.6775,1.1416 10.4465,-0.99573 2.4317,-1.87693 4.1456,-5.74045 3.1697,-8.6531 -1.2443,-3.71383 -5.961,-6.56294 -9.873,-6.3711 z m 1242.9547,0.30274 c -3.896,-0.13469 -8.828,0.77103 -10.984,4.01992 -1.737,2.61817 -1.513,6.96641 0.456,9.41507 1.941,2.41422 5.872,2.36089 8.969,2.43182 3.464,0.0793 7.751,0.24603 10.145,-2.25744 2.121,-2.21666 3.037,-6.35339 1.598,-9.0625 -1.744,-3.28327 -6.468,-4.41845 -10.184,-4.54687 z m -1209.543,0.0488 c -3.7069,0.32018 -8.4732,0.38842 -10.6248,3.42444 -1.8304,2.58275 -1.7088,7.00386 0.2463,9.49353 1.9403,2.47085 5.9645,2.20788 9.0955,2.4715 3.761,0.31678 8.056,0.87679 11.272,-1.1004 2.321,-1.42691 4.63,-4.18733 4.38,-6.90039 -0.257,-2.80048 -3.251,-4.87797 -5.745,-6.17803 -2.574,-1.34182 -5.732,-1.46041 -8.624,-1.21065 z m 1243.912,0 c -3.731,0.32002 -8.517,0.4195 -10.685,3.47392 -1.804,2.54331 -1.695,6.88316 0.208,9.35321 1.878,2.43579 5.806,2.25512 8.867,2.54774 3.801,0.36329 8.13,0.93662 11.409,-1.02028 2.373,-1.417 4.785,-4.16444 4.57,-6.92067 -0.216,-2.77654 -3.168,-4.86938 -5.629,-6.17352 -2.601,-1.37826 -5.807,-1.51189 -8.74,-1.2604 z m 15.161,19.08594 c -4.067,0.14862 -8.97,3.53317 -9.59,7.55514 -0.518,3.35667 2.673,6.94781 5.733,8.42313 3.084,1.48747 7.457,1.22552 10.244,-0.76448 2.494,-1.78101 4.487,-5.50979 3.623,-8.45016 -1.135,-3.86368 -5.986,-6.9107 -10.01,-6.76363 z m -1278.5101,0.35156 c -3.713,0.32251 -8.4932,0.39271 -10.6387,3.44027 -1.8247,2.592 -1.6727,7.02134 0.2969,9.50505 1.9637,2.47627 6.0097,2.19388 9.1599,2.44733 3.7531,0.30194 8.0391,0.85145 11.2385,-1.13351 2.298,-1.42567 4.5691,-4.1782 4.3145,-6.87046 -0.2648,-2.80026 -3.2534,-4.87798 -5.7477,-6.17803 -2.574,-1.3416 -5.7316,-1.46182 -8.6234,-1.21065 z m 1243.9061,0 c -3.704,0.30916 -8.448,0.39404 -10.614,3.41425 -1.828,2.55011 -1.762,6.92076 0.145,9.41288 1.868,2.44179 5.805,2.25077 8.865,2.54788 3.764,0.36545 8.019,0.89654 11.303,-0.97789 2.344,-1.33739 4.822,-3.8928 4.703,-6.58852 -0.125,-2.85971 -3.077,-5.14215 -5.584,-6.52394 -2.601,-1.43392 -5.858,-1.53176 -8.818,-1.28466 z m -1258.8456,19.3887 c -3.8963,-0.11527 -8.8404,0.76839 -10.9785,4.0277 -1.7373,2.64828 -1.4614,7.03993 0.5509,9.48575 2.0075,2.43994 6.0201,2.35994 9.1798,2.36244 3.5274,0.003 7.9207,0.0256 10.2525,-2.62123 1.9657,-2.23121 2.5752,-6.2689 1.1028,-8.85232 -1.8197,-3.19267 -6.4342,-4.29367 -10.1075,-4.40234 z m 33.5626,0.0293 c -1.8112,-0.0572 -3.6394,0.0106 -7.5952,1.33523 -3.9558,1.32463 -5.8961,4.36123 -6.194,6.97607 -0.3334,2.92566 1.2402,8.51496 14.1322,8.39709 12.893,-0.11788 14.605,-6.47885 14.219,-9.20472 -0.392,-2.77029 -3.11,-5.24296 -5.64,-6.43847 -2.708,-1.27986 -5.928,-0.97071 -8.922,-1.0652 z m 1244.717,0.0195 c -3.712,0.32536 -8.498,0.38364 -10.637,3.4342 -1.829,2.60753 -1.653,7.06207 0.338,9.54823 1.983,2.47716 6.046,2.16192 9.209,2.41048 3.698,0.29056 7.919,0.84857 11.074,-1.10189 2.328,-1.43874 4.645,-4.22001 4.379,-6.94336 -0.275,-2.81512 -3.314,-4.87237 -5.828,-6.16731 -2.554,-1.31493 -5.674,-1.43116 -8.535,-1.18035 z M 303.3424,623.02273 c 1.8438,2.43993 5.7585,2.28666 8.8017,2.58972 3.8377,0.38218 8.2101,0.95735 11.5257,-1.01269 2.372,-1.40936 4.7878,-4.14425 4.5788,-6.89539 -0.2117,-2.78724 -5.9045,-7.89006 -17.7298,-6.19942 -11.8253,1.69063 -9.0582,9.02772 -7.1764,11.51778 z m 1282.6856,-9.36288 c -1.682,2.62961 -1.792,6.8728 0.09,9.36288 1.843,2.43994 5.758,2.28666 8.801,2.58972 3.837,0.38206 8.207,0.95614 11.522,-1.01236 2.374,-1.40929 4.793,-4.14341 4.585,-6.89572 -0.212,-2.78772 -3.169,-4.90347 -5.643,-6.20491 -3.329,-1.75062 -7.457,-2.06496 -11.178,-1.52556 -2.959,0.42883 -6.567,1.16699 -8.177,3.68595 z m -1.221,15.38827 c -4.017,0.49172 -8.266,5.2974 -7.787,9.31638 0.489,4.1019 5.896,8.117 9.959,7.3748 4.006,-0.7318 7.359,-6.268 6.614,-10.27169 -0.663,-3.56603 -5.185,-6.86015 -8.786,-6.41949 z m -1298.5299,0.28906 c -2.8446,1.12753 -5.6471,3.06665 -6.7314,6.0528 -0.8211,2.09342 -1.0022,4.81372 0.6775,6.54652 1.9794,1.842 4.7851,2.1982 7.2984,2.8468 5.905,1.2911 12.4245,1.2025 17.8118,-1.82 1.7477,-0.9419 3.3478,-2.6645 3.1908,-4.7836 -0.1592,-2.77045 -1.9128,-5.27691 -4.1367,-6.83887 -2.8258,-1.74595 -2.1826,-1.43093 -5.4621,-2.4088 -3.2795,-0.97788 -10.3244,-0.4919 -12.6483,0.40515 z m 1329.7999,0.34177 c -3.708,0.32024 -8.479,0.38497 -10.625,3.42443 -1.832,2.59282 -1.693,7.02972 0.277,9.51892 1.961,2.4784 6.01,2.1935 9.16,2.4473 3.756,0.3025 8.047,0.8582 11.246,-1.1318 2.302,-1.4316 4.568,-4.1995 4.307,-6.8975 -0.27,-2.79132 -3.252,-4.85651 -5.74,-6.15071 -2.576,-1.33988 -5.733,-1.4605 -8.625,-1.21064 z m -13.985,19.08205 c -4.078,0.1689 -8.995,3.5654 -9.599,7.6021 -0.503,3.3615 2.716,6.9433 5.79,8.3939 3.143,1.483 7.595,1.182 10.387,-0.8867 2.446,-1.8117 4.297,-5.5704 3.393,-8.4765 -1.185,-3.8117 -5.982,-6.798 -9.971,-6.6328 z m -1292.4937,0 c -4.0693,0.1599 -8.9819,3.5404 -9.5918,7.5668 -0.5109,3.3731 2.7136,6.9755 5.7976,8.4342 3.1306,1.4808 7.5641,1.1729 10.3519,-0.8816 2.4452,-1.8021 4.3184,-5.54 3.4266,-8.4436 -1.1753,-3.8272 -5.9839,-6.8331 -9.9843,-6.6758 z m 1325.9217,0.3496 c -3.705,0.3111 -8.453,0.3927 -10.62,3.4142 -1.829,2.55 -1.762,6.9208 0.145,9.4129 1.868,2.4418 5.805,2.2534 8.865,2.5479 3.789,0.3646 8.082,0.9072 11.374,-1.0035 2.341,-1.3585 4.784,-3.9666 4.631,-6.6684 -0.162,-2.851 -3.14,-5.0776 -5.65,-6.4393 -2.589,-1.4044 -5.81,-1.5102 -8.745,-1.2638 z m -1360.5194,0 c -3.7053,0.3111 -8.4526,0.3927 -10.6197,3.4142 -1.8289,2.55 -1.7623,6.9208 0.1446,9.4129 1.8684,2.4418 5.8045,2.2534 8.865,2.5479 3.7887,0.3646 8.0825,0.9072 11.3743,-1.0035 2.3404,-1.3585 4.7835,-3.9666 4.6303,-6.6684 -0.1616,-2.851 -3.14,-5.0777 -5.65,-6.4393 -2.5887,-1.4044 -5.8097,-1.5102 -8.7445,-1.2638 z m -13.9922,19.082 c -4.0696,0.16 -8.9831,3.5418 -9.5918,7.5688 -0.5101,3.3752 2.7191,6.9777 5.8055,8.4361 3.1283,1.4783 7.5572,1.1698 10.3424,-0.8831 2.4454,-1.8023 4.3197,-5.5399 3.4283,-8.444 -1.1749,-3.8277 -5.9836,-6.835 -9.9844,-6.6778 z m 1360.5196,0 c -4.07,0.16 -8.983,3.5418 -9.592,7.5688 -0.51,3.3752 2.719,6.9777 5.806,8.4361 3.128,1.4783 7.557,1.1698 10.342,-0.8831 2.445,-1.8023 4.32,-5.54 3.428,-8.444 -1.175,-3.8276 -5.983,-6.835 -9.984,-6.6778 z m -1327.0996,0.3535 c -3.7149,0.3193 -8.4981,0.3921 -10.6428,3.442 -1.8242,2.5942 -1.6686,7.0282 0.3068,9.5092 1.9857,2.4939 6.0687,2.1886 9.2465,2.4417 3.6971,0.2945 7.9133,0.8421 11.0719,-1.1018 2.321,-1.4285 4.6309,-4.1839 4.3886,-6.8985 -0.248,-2.7791 -3.2026,-4.8576 -5.6726,-6.1552 -2.5927,-1.3621 -5.7806,-1.4882 -8.6984,-1.2374 z m 1360.5196,0 c -3.715,0.3236 -8.498,0.3921 -10.643,3.442 -1.824,2.5942 -1.669,7.0285 0.307,9.5092 1.987,2.495 6.072,2.1918 9.252,2.4408 3.723,0.2914 7.974,0.8336 11.146,-1.1371 2.294,-1.4253 4.564,-4.1734 4.309,-6.8623 -0.267,-2.8071 -3.266,-4.8872 -5.767,-6.1889 -2.569,-1.3369 -5.719,-1.455 -8.604,-1.2037 z m -25.914,23.4145 c -1.692,2.6631 -1.484,7.0026 0.505,9.4513 1.958,2.4103 5.899,2.3254 9.004,2.3921 3.406,0.073 7.591,0.2299 9.981,-2.1973 2.122,-2.1553 3.073,-6.1408 1.815,-8.8916 -1.546,-3.3798 -6.015,-5.2225 -9.724,-5.456 -4.158,-0.2616 -9.347,1.1845 -11.581,4.7015 z m -1354.0392,-3.977 c -3.7046,0.3151 -8.4539,0.393 -10.6176,3.4164 -1.8277,2.554 -1.7522,6.9307 0.162,9.4204 1.8863,2.4534 5.8488,2.2509 8.93,2.5395 3.7806,0.3542 8.07,0.895 11.3449,-1.0267 2.3324,-1.3687 4.7494,-3.9982 4.5791,-6.6972 -0.18,-2.8512 -3.1722,-5.0577 -5.6884,-6.4105 -2.5831,-1.3888 -5.7879,-1.4904 -8.71,-1.2419 z m 1399.3982,0 c -3.713,0.3051 -8.463,0.4039 -10.639,3.4284 -1.821,2.5308 -1.769,6.865 0.11,9.3529 1.825,2.4159 5.695,2.2807 8.707,2.5857 3.868,0.3917 8.245,0.9206 11.618,-1.0111 2.299,-1.3167 4.706,-3.8333 4.603,-6.4809 -0.112,-2.8408 -2.989,-5.1542 -5.469,-6.5453 -2.624,-1.4726 -5.93,-1.5761 -8.93,-1.3297 z m 15.154,19.082 c -4.047,0.1593 -8.932,3.4918 -9.568,7.4926 -0.535,3.3632 2.623,7.0069 5.691,8.484 3.15,1.5164 7.642,1.2134 10.453,-0.8649 2.453,-1.8135 4.304,-5.5864 3.395,-8.4984 -1.188,-3.807 -5.985,-6.7701 -9.971,-6.6133 z m -1440.4683,4.3305 c -1.7351,2.6091 -1.5254,6.9417 0.4297,9.3903 1.9154,2.3988 5.8095,2.3622 8.878,2.4468 3.4839,0.096 7.7777,0.2703 10.2177,-2.2183 2.1195,-2.1617 3.0765,-6.1896 1.7517,-8.9118 -1.518,-3.1188 -5.46,-4.7448 -9.4384,-5.0562 -5.5019,-0.6087 -9.6796,1.1026 -11.8387,4.3492 z m 45.3594,-3.977 c -3.7279,0.3141 -8.5081,0.4146 -10.6755,3.464 -1.8086,2.5445 -1.7057,6.8894 0.1984,9.3632 1.8747,2.4354 5.8018,2.2548 8.8612,2.5477 3.8017,0.364 8.1077,0.8962 11.4119,-1.019 2.3184,-1.3438 4.7356,-3.9163 4.6005,-6.5926 -0.1433,-2.8392 -3.0694,-5.0962 -5.5599,-6.467 -2.6081,-1.4355 -5.87,-1.5462 -8.8366,-1.2963 z m 1360.5199,0 c -3.728,0.3141 -8.509,0.4142 -10.676,3.464 -1.808,2.5454 -1.703,6.8912 0.203,9.3649 1.874,2.4343 5.8,2.2531 8.859,2.546 3.797,0.3636 8.097,0.8947 11.398,-1.0162 2.324,-1.3446 4.751,-3.918 4.616,-6.5989 -0.143,-2.8392 -3.073,-5.0935 -5.564,-6.4635 -2.608,-1.4347 -5.87,-1.5462 -8.836,-1.2963 z M 274.9948,726.8547 c -3.7188,0.3183 -8.5134,0.3913 -10.6524,3.45 -1.8225,2.6063 -1.6362,7.0534 0.3535,9.5343 1.9865,2.477 6.0492,2.1688 9.215,2.4115 3.7285,0.2859 7.9747,0.8081 11.1591,-1.1524 2.2638,-1.3936 4.5184,-4.0645 4.3037,-6.7141 -0.2272,-2.8024 -3.1562,-4.9503 -5.6359,-6.2753 -2.5967,-1.3876 -5.8096,-1.5051 -8.743,-1.254 z m 77.7442,0 c -3.719,0.3183 -8.514,0.3913 -10.652,3.45 -1.823,2.6063 -1.637,7.0534 0.353,9.5343 1.986,2.477 6.049,2.1688 9.215,2.4115 3.729,0.2859 7.975,0.8081 11.159,-1.1524 2.264,-1.3936 4.519,-4.0645 4.304,-6.7141 -0.227,-2.8024 -3.156,-4.9503 -5.636,-6.2753 -2.597,-1.3876 -5.81,-1.5051 -8.743,-1.254 z m -38.8653,0 c -3.7053,0.3023 -8.4504,0.3919 -10.6178,3.4123 -1.8299,2.5499 -1.7662,6.9218 0.1407,9.4148 1.8683,2.4426 5.8061,2.2509 8.867,2.5479 3.7629,0.3651 8.0091,0.8837 11.2994,-0.9782 2.3277,-1.3173 4.7988,-3.8234 4.7091,-6.4964 -0.095,-2.8473 -2.9855,-5.1716 -5.4686,-6.5681 -2.6232,-1.4752 -5.9302,-1.5771 -8.9298,-1.3323 z m 77.7443,0 c -3.732,0.3197 -8.518,0.4195 -10.685,3.4739 -1.805,2.5433 -1.696,6.8831 0.208,9.3532 1.877,2.4358 5.805,2.2584 8.867,2.5477 3.831,0.3621 8.194,0.9212 11.498,-1.0534 2.329,-1.3922 4.693,-4.0822 4.493,-6.7882 -0.208,-2.8039 -3.161,-4.946 -5.641,-6.2713 -2.596,-1.3877 -5.807,-1.5133 -8.74,-1.2619 z m 1282.775,0 c -3.732,0.3112 -8.518,0.4195 -10.685,3.4739 -1.805,2.5433 -1.696,6.8831 0.208,9.3532 1.877,2.4358 5.806,2.2511 8.867,2.5479 3.763,0.3648 8.01,0.8831 11.299,-0.9802 2.329,-1.3187 4.799,-3.8281 4.708,-6.5023 -0.1,-2.8466 -2.989,-5.1676 -5.473,-6.5627 -2.622,-1.4731 -5.927,-1.5798 -8.924,-1.3298 z m -13.994,19.082 c -4.07,0.1566 -8.975,3.5426 -9.592,7.5684 -0.514,3.3559 2.682,6.9409 5.741,8.4133 3.086,1.4851 7.462,1.2287 10.244,-0.7682 2.501,-1.7956 4.48,-5.5555 3.601,-8.5063 -1.146,-3.8448 -5.985,-6.8615 -9.994,-6.7072 z m -1250.135,0.334 c -4.112,0.073 -9.093,-0.2457 -12.06,2.6016 -2.105,2.0195 -3.373,5.8012 -2.197,8.47 1.106,2.5076 4.604,3.2033 7.268,3.8435 5.054,1.2142 10.687,1.4875 15.592,-0.232 2.43,-0.852 5.483,-2.2351 6.106,-4.7339 0.704,-2.8213 -1.282,-6.1684 -3.574,-7.9577 -2.972,-2.3201 -7.365,-2.0584 -11.135,-1.9915 z m 1283.551,0.02 c -3.712,0.3228 -8.486,0.395 -10.635,3.4383 -1.824,2.5833 -1.687,6.9991 0.27,9.4836 1.942,2.4657 5.96,2.2019 9.087,2.4656 3.753,0.3166 8.036,0.8778 11.247,-1.0906 2.329,-1.4277 4.654,-4.1896 4.406,-6.9102 -0.255,-2.8007 -3.252,-4.8784 -5.746,-6.178 -2.575,-1.3423 -5.735,-1.4604 -8.629,-1.2087 z m -1399.3906,0 c -3.7154,0.314 -8.4983,0.3937 -10.6425,3.4442 -1.8226,2.5928 -1.6622,7.0209 0.3086,9.503 1.9593,2.4678 5.992,2.1832 9.1325,2.4405 3.7248,0.3052 7.9515,0.8259 11.1586,-1.093 2.2832,-1.3662 4.6116,-3.9773 4.4413,-6.6326 -0.1808,-2.8181 -3.0941,-5.0293 -5.5744,-6.3794 -2.6105,-1.4211 -5.8623,-1.533 -8.8241,-1.2827 z m 38.8726,0 c -3.7188,0.3135 -8.5062,0.3978 -10.6516,3.4522 -1.8176,2.5876 -1.6548,7.0039 0.3103,9.4814 1.96,2.4711 5.995,2.1944 9.1383,2.4541 3.723,0.3076 7.948,0.8254 11.155,-1.0911 2.282,-1.3641 4.611,-3.9706 4.445,-6.6248 -0.176,-2.8122 -3.075,-5.0268 -5.548,-6.3778 -2.616,-1.4292 -5.878,-1.5444 -8.849,-1.294 z m 38.872,0 c -3.702,0.3066 -8.444,0.3939 -10.608,3.4123 -1.829,2.5493 -1.764,6.9189 0.142,9.4107 1.869,2.4432 5.807,2.257 8.869,2.5499 3.802,0.3637 8.111,0.8989 11.412,-1.021 2.323,-1.3505 4.736,-3.939 4.595,-6.6219 -0.149,-2.8259 -3.067,-5.0648 -5.547,-6.4274 -2.617,-1.4379 -5.887,-1.5492 -8.863,-1.3026 z m 19.441,19.4375 c -3.71,0.3115 -8.456,0.4061 -10.631,3.4283 -1.82,2.5297 -1.776,6.8645 0.106,9.349 1.851,2.4447 5.775,2.2922 8.826,2.5935 3.843,0.3794 8.209,0.9255 11.54,-1.0293 2.323,-1.3639 4.713,-3.9899 4.552,-6.6794 -0.17,-2.8188 -3.095,-5.0292 -5.575,-6.3794 -2.609,-1.4203 -5.858,-1.5312 -8.818,-1.2827 z m 38.873,0 c -3.705,0.3087 -8.456,0.3918 -10.618,3.4164 -1.828,2.5575 -1.746,6.9393 0.173,9.4297 1.889,2.4522 5.852,2.2476 8.935,2.5322 3.794,0.3504 8.097,0.8767 11.384,-1.0507 2.299,-1.3473 4.674,-3.9255 4.528,-6.5854 -0.155,-2.8362 -3.076,-5.085 -5.566,-6.4517 -2.61,-1.4322 -5.87,-1.5377 -8.836,-1.2905 z m 1166.156,0 c -3.715,0.3281 -8.507,0.3901 -10.646,3.4461 -1.824,2.606 -1.645,7.057 0.347,9.5363 2.016,2.5076 6.136,2.177 9.344,2.4175 3.686,0.2763 7.906,0.8301 11.029,-1.146 2.318,-1.466 4.575,-4.3039 4.273,-7.0291 -0.309,-2.7847 -3.336,-4.7821 -5.833,-6.0519 -2.554,-1.2983 -5.66,-1.4249 -8.514,-1.1729 z m 77.746,0 c -3.71,0.3124 -8.457,0.4056 -10.631,3.4283 -1.82,2.5306 -1.769,6.8639 0.11,9.351 1.828,2.4198 5.705,2.2839 8.723,2.5877 3.874,0.39 8.277,0.9473 11.635,-1.0233 2.329,-1.3663 4.72,-4.0028 4.554,-6.6972 -0.174,-2.8195 -3.106,-5.023 -5.589,-6.3707 -2.605,-1.4144 -5.847,-1.5246 -8.802,-1.2758 z m -38.865,0 c -3.705,0.3111 -8.452,0.3911 -10.62,3.4123 -1.829,2.5503 -1.766,6.9246 0.145,9.4148 1.89,2.4636 5.868,2.2597 8.959,2.5504 3.766,0.3542 8.042,0.903 11.301,-1.0172 2.353,-1.3871 4.779,-4.0593 4.597,-6.7853 -0.188,-2.8146 -3.15,-4.9786 -5.636,-6.3128 -2.595,-1.3932 -5.811,-1.5087 -8.746,-1.2622 z m -1189.877,19.08 c -4.055,0.2107 -8.958,3.5166 -9.575,7.5299 -0.52,3.3806 2.688,7.0242 5.786,8.4741 3.21,1.5024 7.8,1.1719 10.584,-1.0215 2.434,-1.9172 4.06,-5.8623 3.033,-8.7852 -1.284,-3.654 -5.96,-6.3981 -9.828,-6.1973 z m 963.232,2.9327 c -2.024,2.0944 -3.368,5.7852 -2.205,8.456 1.08,2.4793 4.515,3.2048 7.141,3.8497 5.058,1.2421 10.703,1.5094 15.623,-0.2004 2.467,-0.8575 5.568,-2.2482 6.208,-4.7803 0.708,-2.7982 -1.353,-6.0088 -3.526,-7.9083 -2.802,-2.4492 -6.992,-3.1483 -10.714,-3.1412 -4.356,0.01 -9.499,0.5924 -12.527,3.7245 z m 38.839,0.021 c -2.091,2.0089 -3.34,5.7647 -2.179,8.4217 1.089,2.4914 4.543,3.2173 7.184,3.8639 5.062,1.2393 10.716,1.5204 15.633,-0.2078 2.467,-0.8672 5.546,-2.291 6.185,-4.827 0.692,-2.752 -1.217,-6.0167 -3.432,-7.7914 -2.787,-2.2337 -6.998,-3.1966 -10.731,-3.2013 -4.4,-0.01 -9.685,0.8838 -12.66,3.7419 z m 38.902,-0.016 c -2.101,2.0122 -3.355,5.7726 -2.204,8.4437 1.055,2.4468 4.425,3.1957 7.01,3.8419 5.088,1.2719 10.767,1.5065 15.733,-0.1798 2.438,-0.8279 5.493,-2.1519 6.18,-4.6332 0.761,-2.7485 -1.04,-6.0957 -3.23,-7.9231 -2.675,-2.2321 -6.966,-3.2365 -10.692,-3.2621 -4.442,-0.031 -9.825,0.8656 -12.797,3.7126 z m 38.843,0.016 c -2.092,2.0089 -3.341,5.7647 -2.18,8.4217 1.089,2.4914 4.543,3.2173 7.184,3.8639 5.062,1.2392 10.717,1.5223 15.633,-0.2078 2.47,-0.8691 5.551,-2.2978 6.188,-4.8371 0.69,-2.7499 -1.221,-6.0091 -3.435,-7.7813 -2.788,-2.2326 -6.998,-3.1966 -10.731,-3.2013 -4.4,-0.01 -9.684,0.8838 -12.659,3.7419 z m 38.905,-0.021 c -2.104,2.015 -3.377,5.7892 -2.205,8.456 1.104,2.5143 4.609,3.2162 7.279,3.8602 5.037,1.2152 10.657,1.5031 15.544,-0.2209 2.462,-0.8685 5.534,-2.2942 6.167,-4.8267 0.69,-2.759 -1.233,-6.0255 -3.454,-7.801 -2.784,-2.2241 -6.982,-3.1813 -10.704,-3.1867 -4.388,-0.01 -9.657,0.874 -12.627,3.7191 z M 411.053,785.1618 c -3.704,0.3124 -8.45,0.3919 -10.617,3.4123 -1.83,2.55 -1.766,6.9217 0.14,9.4148 1.867,2.4413 5.802,2.2548 8.861,2.5477 3.802,0.3641 8.131,0.9346 11.412,-1.0185 2.371,-1.411 4.789,-4.1443 4.579,-6.8954 -0.212,-2.7886 -3.174,-4.8963 -5.645,-6.2068 -2.597,-1.3777 -5.8,-1.5012 -8.73,-1.2541 z m 1205.024,0 c -3.708,0.3202 -8.479,0.3849 -10.625,3.4244 -1.832,2.5928 -1.693,7.0297 0.277,9.5189 1.96,2.4773 6.007,2.1922 9.156,2.4462 3.754,0.3029 8.042,0.8558 11.242,-1.1287 2.3,-1.4258 4.573,-4.1801 4.319,-6.8741 -0.265,-2.7993 -3.252,-4.8764 -5.746,-6.1761 -2.574,-1.3416 -5.731,-1.4604 -8.623,-1.2106 z m 38.881,0 c -3.729,0.3096 -8.509,0.4141 -10.676,3.4639 -1.808,2.5454 -1.703,6.8912 0.203,9.365 1.874,2.4342 5.8,2.2531 8.859,2.5459 3.797,0.3637 8.089,0.8816 11.398,-1.0161 2.302,-1.3199 4.717,-3.8346 4.614,-6.4857 -0.111,-2.8398 -2.99,-5.1508 -5.468,-6.5414 -2.625,-1.4726 -5.931,-1.5807 -8.93,-1.3316 z m -213.805,19.4336 c -3.708,0.3202 -8.483,0.3823 -10.627,3.4244 -1.832,2.599 -1.683,7.0464 0.297,9.5346 1.984,2.494 6.068,2.1894 9.246,2.4367 3.73,0.2902 7.989,0.8314 11.164,-1.1468 2.289,-1.4261 4.545,-4.1755 4.289,-6.8602 -0.267,-2.7992 -3.25,-4.8781 -5.744,-6.1781 -2.574,-1.3423 -5.733,-1.4604 -8.625,-1.2106 z m 38.873,0 c -3.719,0.3187 -8.513,0.3914 -10.652,3.45 -1.823,2.6063 -1.636,7.0533 0.353,9.5344 1.986,2.4765 6.048,2.1639 9.213,2.4116 3.694,0.2891 7.893,0.8145 11.06,-1.1077 2.294,-1.3915 4.611,-4.0571 4.409,-6.7317 -0.213,-2.8152 -3.164,-4.9754 -5.654,-6.3069 -2.592,-1.3862 -5.8,-1.5008 -8.729,-1.2497 z m 77.744,0 c -3.719,0.318 -8.513,0.3914 -10.652,3.45 -1.823,2.6063 -1.636,7.0533 0.353,9.5344 1.986,2.4765 6.048,2.1677 9.213,2.4116 3.724,0.287 7.962,0.8095 11.146,-1.1427 2.266,-1.3898 4.532,-4.0521 4.323,-6.7025 -0.221,-2.8078 -3.153,-4.9658 -5.636,-6.2952 -2.597,-1.3904 -5.812,-1.5066 -8.747,-1.2556 z m -1127.279,0 c -3.698,0.3036 -8.421,0.3903 -10.601,3.3925 -1.834,2.5273 -1.816,6.8631 0.05,9.3692 1.763,2.3701 5.536,2.2787 8.473,2.5938 3.944,0.423 8.41,0.9695 11.858,-0.9905 2.302,-1.3087 4.723,-3.8183 4.619,-6.4646 -0.114,-2.8735 -3.043,-5.2008 -5.555,-6.6011 -2.602,-1.4506 -5.873,-1.5431 -8.842,-1.2993 z m 932.928,0 c -3.706,0.3064 -8.453,0.3913 -10.62,3.4123 -1.83,2.5501 -1.765,6.922 0.142,9.4148 1.869,2.442 5.805,2.2511 8.866,2.5479 3.764,0.3651 8.012,0.883 11.303,-0.9802 2.326,-1.317 4.802,-3.8229 4.705,-6.4944 -0.104,-2.8738 -3.043,-5.2008 -5.554,-6.6011 -2.602,-1.4506 -5.874,-1.5448 -8.842,-1.2993 z m 38.871,0 c -3.732,0.3199 -8.518,0.4195 -10.685,3.4739 -1.805,2.5433 -1.696,6.8831 0.208,9.3532 1.877,2.4358 5.805,2.2551 8.867,2.5477 3.801,0.3635 8.129,0.9309 11.412,-1.0204 2.366,-1.4065 4.781,-4.1288 4.577,-6.874 -0.209,-2.7904 -3.168,-4.9055 -5.638,-6.2195 -2.599,-1.3825 -5.808,-1.5124 -8.741,-1.2609 z m 116.617,0 c -3.706,0.3064 -8.452,0.3915 -10.62,3.4123 -1.83,2.5499 -1.766,6.9218 0.141,9.4148 1.868,2.4426 5.806,2.2509 8.867,2.5479 3.763,0.3651 8.009,0.8837 11.299,-0.9782 2.328,-1.3172 4.806,-3.8236 4.709,-6.4964 -0.104,-2.8738 -3.042,-5.2008 -5.554,-6.6011 -2.602,-1.4506 -5.873,-1.5448 -8.842,-1.2993 z m 77.744,0 c -3.706,0.3068 -8.452,0.3915 -10.62,3.4123 -1.83,2.5499 -1.766,6.9218 0.141,9.4148 1.868,2.4426 5.806,2.2542 8.867,2.5479 3.795,0.3641 8.084,0.8843 11.391,-1.0108 2.303,-1.3192 4.727,-3.8339 4.617,-6.4853 -0.119,-2.8701 -3.051,-5.1867 -5.561,-6.5827 -2.602,-1.4464 -5.869,-1.5418 -8.835,-1.2962 z m -179.201,19.084 c -4.069,0.1686 -8.982,3.5403 -9.592,7.5668 -0.511,3.3731 2.714,6.9747 5.798,8.4342 3.126,1.4798 7.56,1.1833 10.34,-0.8753 2.461,-1.8223 4.324,-5.6065 3.411,-8.5294 -1.187,-3.8003 -5.979,-6.7612 -9.957,-6.5963 z m -86.332,2.9412 c -2.147,2.013 -3.33,5.8883 -2.121,8.5716 1.104,2.4483 4.53,3.1071 7.142,3.7292 5.054,1.2035 10.67,1.4731 15.584,-0.2127 2.423,-0.8311 5.449,-2.1644 6.129,-4.6334 0.755,-2.7398 -0.981,-6.1339 -3.208,-7.8992 -2.976,-2.3584 -7.457,-1.806 -11.253,-1.7631 -4.157,0.047 -9.241,-0.6352 -12.273,2.2076 z M 449.919,824.031 c -3.704,0.3091 -8.448,0.3946 -10.614,3.4142 -1.829,2.5485 -1.767,6.9171 0.138,9.409 1.869,2.4443 5.809,2.2543 8.871,2.5518 3.765,0.3656 8.019,0.895 11.304,-0.9796 2.343,-1.3372 4.821,-3.8916 4.703,-6.5868 -0.126,-2.8598 -3.077,-5.1422 -5.584,-6.524 -2.602,-1.4339 -5.858,-1.5317 -8.818,-1.2846 z m 932.927,0 c -3.703,0.3096 -8.447,0.3946 -10.614,3.4142 -1.828,2.5485 -1.766,6.9171 0.139,9.409 1.869,2.4443 5.809,2.2543 8.871,2.5518 3.764,0.3656 8.019,0.895 11.304,-0.9796 2.343,-1.3372 4.821,-3.8916 4.703,-6.5868 -0.126,-2.8614 -3.08,-5.1448 -5.589,-6.5269 -2.6,-1.4327 -5.855,-1.5291 -8.814,-1.2817 z m -946.914,19.082 c -4.069,0.1599 -8.983,3.5417 -9.592,7.5688 -0.51,3.3752 2.72,6.9769 5.806,8.4361 3.125,1.4779 7.55,1.1725 10.335,-0.8772 2.448,-1.8028 4.327,-5.543 3.436,-8.45 -1.174,-3.8279 -5.984,-6.835 -9.985,-6.6777 z m 916.139,4.3285 c -1.737,2.6353 -1.482,7.0061 0.509,9.455 1.962,2.4126 5.907,2.3356 9.016,2.3922 3.442,0.063 7.695,0.2066 10.073,-2.2831 2.1,-2.199 2.974,-6.2648 1.604,-8.9796 -1.556,-3.0859 -6.002,-5.1101 -9.676,-5.3176 -4.147,-0.2341 -9.382,1.4799 -11.526,4.7331 z m -882.719,-3.975 c -3.712,0.3212 -8.493,0.3868 -10.637,3.4342 -1.827,2.5981 -1.671,7.0404 0.309,9.5248 1.985,2.4906 6.064,2.1817 9.239,2.4339 3.696,0.2937 7.915,0.8491 11.07,-1.1 2.328,-1.4389 4.64,-4.2199 4.382,-6.9453 -0.263,-2.7865 -3.25,-4.8437 -5.733,-6.1348 -2.578,-1.3399 -5.736,-1.4633 -8.63,-1.2128 z m 855.184,0 c -3.712,0.3215 -8.494,0.3866 -10.637,3.4342 -1.828,2.5988 -1.67,7.0422 0.311,9.5267 1.985,2.4901 6.064,2.1802 9.238,2.432 3.696,0.2932 7.913,0.8474 11.068,-1.1 2.328,-1.437 4.643,-4.2135 4.387,-6.9375 -0.263,-2.7908 -3.254,-4.8514 -5.742,-6.1443 -2.576,-1.3392 -5.733,-1.4617 -8.625,-1.2111 z m -840.014,19.082 c -4.076,0.1632 -8.993,3.5577 -9.598,7.5918 -0.504,3.3679 2.725,6.9536 5.804,8.408 3.128,1.4775 7.556,1.1789 10.342,-0.8721 2.45,-1.8035 4.327,-5.5476 3.434,-8.4558 -1.174,-3.826 -5.983,-6.8321 -9.982,-6.6719 z m -34.603,0.3535 c -3.663,0.572 -8.417,0.389 -10.593,3.3906 -1.835,2.5318 -1.819,6.8827 0.06,9.3809 1.84,2.4449 5.761,2.293 8.806,2.5966 3.844,0.3832 8.211,0.9344 11.544,-1.0185 2.336,-1.3682 4.75,-4.0058 4.578,-6.707 -0.182,-2.8486 -3.174,-5.0499 -5.689,-6.4007 -2.583,-1.3876 -5.783,-1.0344 -8.708,-1.2419 z m 310.972,0 c -3.709,0.3314 -8.488,0.387 -10.631,3.4323 -1.828,2.5982 -1.675,7.042 0.305,9.5267 1.989,2.496 6.078,2.1873 9.26,2.4347 3.723,0.2895 7.992,0.8619 11.144,-1.1398 2.327,-1.4774 4.588,-4.3502 4.26,-7.0867 -0.337,-2.8103 -3.437,-4.7755 -5.97,-6.0386 -2.519,-1.2561 -5.564,-1.3791 -8.368,-1.1286 z m 533.615,3.3947 c -1.834,2.5273 -1.822,6.8686 0.05,9.367 1.823,2.4318 5.713,2.2982 8.737,2.6054 3.87,0.3933 8.269,0.9481 11.627,-1.0175 2.336,-1.3674 4.75,-4.0058 4.577,-6.707 -0.182,-2.8486 -3.174,-5.0499 -5.688,-6.4007 -2.583,-1.3875 -6.081,-1.7006 -9.156,-1.4157 -3.571,0.3307 -7.97,0.5665 -10.148,3.5685 z M 722.03,862.902 c -3.728,0.3143 -8.508,0.4146 -10.676,3.464 -1.808,2.5444 -1.705,6.8894 0.199,9.3631 1.874,2.4355 5.802,2.2549 8.861,2.5478 3.802,0.364 8.1,0.8825 11.412,-1.019 2.298,-1.3192 4.714,-3.8336 4.602,-6.4809 -0.121,-2.8693 -3.052,-5.1844 -5.562,-6.5796 -2.602,-1.4461 -5.87,-1.5454 -8.836,-1.2954 z m 611.119,4.2573 c -1.578,2.6925 -1.791,6.8728 0.09,9.3628 1.844,2.44 5.759,2.2867 8.802,2.5898 3.837,0.382 8.207,0.9561 11.522,-1.0124 2.373,-1.4093 4.502,-4.1367 4.585,-6.8957 0.08,-2.5542 -1.841,-5.0542 -3.857,-6.6253 -2.943,-2.2947 -7.048,-3.5118 -10.757,-3.1021 -3.922,0.4331 -8.389,2.2788 -10.385,5.6829 z m -42.006,14.8248 c -4.082,0.2121 -9.017,3.5576 -9.625,7.6001 -0.505,3.3655 2.713,6.9687 5.799,8.4038 3.217,1.4961 7.809,1.1733 10.596,-1.0235 2.43,-1.9159 4.049,-5.8569 3.025,-8.7773 -1.278,-3.6471 -5.935,-6.4037 -9.795,-6.2031 z m -821.781,0.3535 c -3.732,0.3185 -8.518,0.4195 -10.685,3.4739 -1.805,2.5433 -1.696,6.883 0.208,9.3532 1.876,2.4349 5.803,2.255 8.863,2.5477 3.802,0.3637 8.125,0.925 11.412,-1.0202 2.359,-1.3961 4.775,-4.0931 4.583,-6.8273 -0.197,-2.7951 -3.145,-4.9331 -5.615,-6.256 -2.603,-1.394 -5.824,-1.5225 -8.766,-1.2713 z m 194.361,0 c -3.673,0.5756 -8.44,0.4002 -10.62,3.4123 -1.827,2.5247 -1.806,6.857 0.07,9.3494 1.825,2.4304 5.714,2.2968 8.737,2.6054 3.861,0.394 8.246,0.95 11.599,-1.0044 2.347,-1.368 4.777,-4.007 4.612,-6.7182 -0.173,-2.8321 -3.14,-5.0302 -5.636,-6.3789 -2.595,-1.4018 -5.815,-1.0542 -8.757,-1.2656 z m 38.869,0 c -3.716,0.3142 -8.479,0.4062 -10.646,3.442 -1.818,2.5467 -1.734,6.9029 0.171,9.3851 1.871,2.4382 5.802,2.2544 8.861,2.5478 3.796,0.3639 8.11,0.9222 11.395,-1.0142 2.36,-1.3913 4.787,-4.0765 4.602,-6.8099 -0.189,-2.8001 -3.137,-4.9509 -5.609,-6.2786 -2.604,-1.3981 -5.829,-1.5212 -8.774,-1.2722 z m 38.873,0 c -3.672,0.5756 -8.438,0.4006 -10.617,3.4123 -1.828,2.5247 -1.806,6.857 0.07,9.3494 1.824,2.4304 5.713,2.2968 8.737,2.6054 3.86,0.394 8.245,0.95 11.598,-1.0044 2.347,-1.368 4.77,-4.0066 4.612,-6.7182 -0.164,-2.8031 -3.08,-4.9974 -5.545,-6.3418 -2.618,-1.4276 -5.876,-1.085 -8.85,-1.3027 z m 38.871,0 c -3.716,0.3142 -8.479,0.4062 -10.646,3.442 -1.818,2.5467 -1.734,6.9029 0.171,9.3851 1.871,2.4382 5.802,2.2544 8.861,2.5478 3.796,0.3639 8.11,0.9222 11.395,-1.0142 2.36,-1.3913 4.787,-4.0765 4.602,-6.8099 -0.189,-2.8001 -3.137,-4.9509 -5.609,-6.2786 -2.603,-1.3981 -5.829,-1.5212 -8.774,-1.2722 z m 38.874,0 c -3.728,0.3171 -8.509,0.4146 -10.676,3.4639 -1.809,2.5445 -1.706,6.8894 0.198,9.3632 1.875,2.4354 5.802,2.2549 8.862,2.5477 3.802,0.3639 8.126,0.9253 11.414,-1.0202 2.358,-1.396 4.774,-4.0931 4.582,-6.8273 -0.196,-2.7951 -3.144,-4.9331 -5.614,-6.256 -2.603,-1.394 -5.824,-1.5216 -8.766,-1.2713 z m 38.873,0 c -3.717,0.315 -8.482,0.4058 -10.649,3.442 -1.818,2.5466 -1.733,6.9029 0.171,9.3851 1.872,2.4382 5.802,2.2541 8.862,2.5477 3.796,0.3644 8.104,0.9123 11.396,-1.0121 2.345,-1.3706 4.778,-4.007 4.612,-6.7182 -0.173,-2.8321 -3.14,-5.0302 -5.636,-6.3789 -2.595,-1.4018 -5.818,-1.5147 -8.756,-1.2656 z m 38.871,0 c -3.732,0.3185 -8.518,0.4195 -10.685,3.4739 -1.805,2.5433 -1.696,6.883 0.208,9.3532 1.875,2.4345 5.801,2.2549 8.861,2.5477 3.802,0.3639 8.127,0.9253 11.414,-1.0202 2.359,-1.396 4.775,-4.0931 4.583,-6.8273 -0.197,-2.7951 -3.145,-4.9331 -5.615,-6.256 -2.603,-1.394 -5.824,-1.5225 -8.766,-1.2713 z m 427.591,0 c -3.731,0.3195 -8.518,0.419 -10.685,3.4739 -1.804,2.5442 -1.692,6.8848 0.212,9.3549 1.877,2.4333 5.801,2.2535 8.86,2.546 3.801,0.3636 8.132,0.9367 11.412,-1.0202 2.374,-1.4165 4.786,-4.1626 4.572,-6.9188 -0.214,-2.773 -3.159,-4.8669 -5.616,-6.1709 -2.604,-1.3823 -5.817,-1.5165 -8.755,-1.2649 z m -713.689,19.084 c -4.069,0.1856 -8.982,3.5419 -9.592,7.5688 -0.51,3.3731 2.714,6.9754 5.798,8.4341 3.129,1.4803 7.577,1.1943 10.348,-0.8812 2.481,-1.8581 4.314,-5.7194 3.362,-8.6693 -1.21,-3.7531 -5.976,-6.6322 -9.916,-6.4524 z m 379.002,0 c -4.069,0.1747 -8.982,3.5419 -9.592,7.5688 -0.511,3.3731 2.714,6.9757 5.798,8.4341 3.131,1.4806 7.573,1.184 10.352,-0.8833 2.465,-1.8339 4.315,-5.6413 3.389,-8.5708 -1.196,-3.7854 -5.981,-6.7192 -9.947,-6.5488 z m -358.435,2.943 c -2.026,2.0842 -3.353,5.7726 -2.194,8.4378 1.074,2.4724 4.494,3.2062 7.111,3.8517 5.078,1.2521 10.743,1.5002 15.688,-0.2013 2.43,-0.836 5.465,-2.1848 6.137,-4.665 0.744,-2.7452 -1.148,-5.9767 -3.255,-7.8873 -2.768,-2.5101 -6.993,-3.2261 -10.73,-3.2462 -4.429,-0.024 -9.671,0.5342 -12.757,3.7103 z m 310.95,0.015 c -2.031,2.1211 -3.305,5.8811 -2.094,8.5564 1.107,2.4474 4.53,3.1081 7.143,3.7291 5.077,1.2065 10.721,1.4789 15.653,-0.2264 2.398,-0.8293 5.386,-2.1676 6.054,-4.6157 0.75,-2.7445 -1.113,-5.989 -3.215,-7.9065 -2.768,-2.5255 -7.011,-3.243 -10.758,-3.2634 -4.438,-0.024 -9.714,0.5204 -12.783,3.7265 z m -453.574,-2.6069 c -3.711,0.3085 -8.467,0.3977 -10.635,3.4262 -1.824,2.5484 -1.75,6.9132 0.156,9.4009 1.871,2.4411 5.806,2.2509 8.867,2.5479 3.763,0.3651 8.009,0.8837 11.3,-0.9782 2.327,-1.3172 4.806,-3.8236 4.709,-6.4964 -0.105,-2.876 -3.048,-5.2024 -5.562,-6.603 -2.6,-1.4485 -5.869,-1.5439 -8.835,-1.2974 z m 272.094,0 c -3.715,0.323 -8.497,0.3944 -10.643,3.444 -1.823,2.5921 -1.669,7.0206 0.301,9.5033 1.964,2.475 6.009,2.1932 9.158,2.4453 3.762,0.3011 8.06,0.8501 11.264,-1.1436 2.29,-1.4249 4.546,-4.1756 4.289,-6.8603 -0.267,-2.7996 -3.252,-4.878 -5.746,-6.178 -2.573,-1.3419 -5.731,-1.4622 -8.623,-1.2107 z m 544.215,0 c -3.705,0.3111 -8.453,0.3927 -10.62,3.4143 -1.829,2.5499 -1.765,6.9231 0.145,9.4128 1.891,2.4651 5.872,2.2599 8.965,2.5518 3.756,0.3545 8.012,0.8886 11.274,-1.0074 2.34,-1.3598 4.784,-3.9666 4.631,-6.6684 -0.162,-2.851 -3.141,-5.0776 -5.651,-6.4393 -2.588,-1.4044 -5.809,-1.5102 -8.744,-1.2638 z m -621.949,0 c -3.707,0.3025 -8.454,0.3922 -10.622,3.4143 -1.829,2.5499 -1.762,6.9207 0.145,9.4128 1.868,2.4418 5.804,2.2541 8.865,2.5479 3.794,0.3643 8.081,0.882 11.389,-1.01 2.299,-1.3146 4.717,-3.818 4.619,-6.4646 -0.105,-2.8469 -2.985,-5.1715 -5.468,-6.568 -2.623,-1.475 -5.929,-1.5772 -8.928,-1.3324 z m 38.871,0 c -3.683,0.5797 -8.465,0.411 -10.645,3.4362 -1.817,2.5222 -1.775,6.8398 0.09,9.3255 1.807,2.4058 5.65,2.2913 8.643,2.6016 3.895,0.4037 8.322,0.9667 11.704,-1.0064 2.345,-1.3676 4.762,-4.009 4.6,-6.7182 -0.167,-2.8064 -3.09,-4.9979 -5.56,-6.3417 -2.614,-1.4227 -5.866,-1.0803 -8.834,-1.297 z m 77.744,0 c -3.706,0.3113 -8.454,0.3922 -10.622,3.4143 -1.829,2.5499 -1.762,6.9208 0.145,9.4128 1.869,2.4423 5.805,2.2585 8.867,2.5478 3.832,0.362 8.194,0.9201 11.498,-1.0535 2.328,-1.3907 4.694,-4.0772 4.495,-6.782 -0.206,-2.8054 -3.16,-4.9505 -5.641,-6.277 -2.596,-1.3885 -5.808,-1.5088 -8.742,-1.2624 z m 38.873,0 c -3.712,0.3042 -8.467,0.3977 -10.635,3.4262 -1.824,2.5484 -1.75,6.9132 0.156,9.4009 1.87,2.4411 5.806,2.2509 8.867,2.5479 3.763,0.3651 8.009,0.8837 11.299,-0.9782 2.328,-1.3172 4.799,-3.8234 4.709,-6.4964 -0.09,-2.8473 -2.985,-5.1715 -5.468,-6.568 -2.623,-1.475 -5.929,-1.5781 -8.928,-1.3324 z m 38.869,0 c -3.705,0.3111 -8.452,0.3927 -10.62,3.4143 -1.828,2.5499 -1.762,6.9207 0.145,9.4128 1.868,2.4418 5.805,2.2534 8.865,2.5479 3.789,0.3646 8.083,0.9072 11.374,-1.0035 2.341,-1.3585 4.784,-3.9666 4.631,-6.6684 -0.162,-2.8509 -3.14,-5.0776 -5.65,-6.4393 -2.589,-1.4044 -5.81,-1.5102 -8.745,-1.2638 z m 38.875,0 c -3.712,0.3085 -8.467,0.3977 -10.635,3.4262 -1.824,2.5484 -1.75,6.9132 0.156,9.4009 1.871,2.4411 5.806,2.2509 8.867,2.5479 3.763,0.3651 8.009,0.8837 11.299,-0.9782 2.328,-1.3172 4.807,-3.8236 4.71,-6.4964 -0.105,-2.876 -3.049,-5.2024 -5.563,-6.603 -2.6,-1.4485 -5.868,-1.5439 -8.834,-1.2974 z m -441.586,19.0819 c -4.06,0.162 -8.953,3.5196 -9.583,7.5338 -0.526,3.3527 2.633,6.9719 5.693,8.4409 3.152,1.5137 7.642,1.2163 10.456,-0.861 2.453,-1.8108 4.307,-5.5794 3.401,-8.4906 -1.185,-3.8088 -5.981,-6.782 -9.967,-6.6231 z m 111.164,0.3536 c -3.718,0.3242 -8.507,0.3956 -10.652,3.4502 -1.821,2.5944 -1.66,7.0263 0.316,9.5048 1.989,2.4936 6.073,2.191 9.252,2.4388 3.729,0.2904 7.986,0.8319 11.16,-1.1449 2.291,-1.4263 4.55,-4.1762 4.293,-6.8622 -0.266,-2.7996 -3.251,-4.8783 -5.745,-6.1781 -2.574,-1.3415 -5.732,-1.4608 -8.624,-1.2086 z m 38.873,0 c -3.728,0.3173 -8.514,0.4156 -10.675,3.47 -1.807,2.5531 -1.684,6.9094 0.234,9.3801 1.898,2.4455 5.855,2.236 8.937,2.5268 3.731,0.352 7.946,0.8774 11.2,-0.9815 2.344,-1.3391 4.825,-3.8937 4.707,-6.5908 -0.126,-2.8592 -3.078,-5.1409 -5.584,-6.5219 -2.602,-1.4334 -5.859,-1.5347 -8.819,-1.2827 z m 388.719,0 c -3.718,0.3242 -8.507,0.3956 -10.652,3.4502 -1.822,2.5944 -1.66,7.0263 0.316,9.5048 1.989,2.4937 6.072,2.191 9.252,2.4388 3.728,0.2904 7.986,0.8319 11.16,-1.1449 2.29,-1.4263 4.549,-4.1762 4.293,-6.8622 -0.267,-2.7997 -3.252,-4.8783 -5.746,-6.1781 -2.573,-1.3414 -5.731,-1.4608 -8.623,-1.2086 z m 272.106,0 c -3.729,0.3178 -8.514,0.4156 -10.676,3.47 -1.806,2.5531 -1.684,6.9094 0.234,9.3801 1.898,2.4455 5.855,2.2358 8.937,2.5268 3.729,0.3521 7.937,0.8724 11.192,-0.979 2.339,-1.3299 4.824,-3.8623 4.715,-6.5503 -0.117,-2.8722 -3.073,-5.1772 -5.588,-6.5679 -2.599,-1.4363 -5.856,-1.5319 -8.814,-1.2797 z m -777.436,0 c -3.712,0.3093 -8.49,0.3835 -10.636,3.4284 -1.828,2.5949 -1.674,7.0313 0.298,9.5188 1.956,2.4672 5.987,2.1829 9.125,2.4405 3.723,0.3057 7.948,0.8254 11.155,-1.0911 2.282,-1.3642 4.611,-3.9706 4.445,-6.6248 -0.176,-2.8113 -3.075,-5.0248 -5.546,-6.3758 -2.614,-1.4285 -5.873,-1.5434 -8.841,-1.296 z m 427.592,0 c -3.704,0.3065 -8.453,0.3858 -10.615,3.4084 -1.831,2.5607 -1.749,6.9501 0.173,9.4434 1.89,2.4506 5.853,2.238 8.934,2.5251 3.763,0.3508 8.015,0.8667 11.293,-1.0147 2.302,-1.321 4.726,-3.8357 4.615,-6.4872 -0.12,-2.8694 -3.052,-5.1845 -5.562,-6.5796 -2.603,-1.4464 -5.871,-1.5411 -8.838,-1.2954 z m 38.871,0 c -3.716,0.3143 -8.498,0.3899 -10.647,3.4383 -1.825,2.5905 -1.677,7.019 0.291,9.5031 1.96,2.4735 6.001,2.1881 9.146,2.4464 3.723,0.3057 7.953,0.8358 11.154,-1.0907 2.3,-1.3846 4.637,-4.0391 4.445,-6.7171 -0.202,-2.811 -3.143,-4.978 -5.625,-6.3126 -2.6,-1.3978 -5.823,-1.5162 -8.764,-1.2674 z m 92.908,19.0839 c -4.043,0.1628 -8.929,3.4736 -9.571,7.4691 -0.541,3.3681 2.616,7.0244 5.688,8.5075 3.144,1.5176 7.633,1.2219 10.437,-0.8568 2.469,-1.8297 4.318,-5.6408 3.393,-8.5709 -1.195,-3.7857 -5.98,-6.7085 -9.947,-6.5489 z m -581.734,1.9649 c -2.297,1.3541 -5.176,3.3358 -5.293,6.0005 -0.136,3.098 2.774,6.0488 5.521,7.4881 3.374,1.768 7.799,1.5156 11.423,0.3403 2.673,-0.8672 5.976,-2.4286 6.676,-5.1506 0.79,-3.0658 -1.272,-6.7825 -3.782,-8.7113 -2.288,-1.758 -5.677,-1.3847 -8.56,-1.2868 -2.042,0.069 -4.225,0.2828 -5.985,1.3198 z m 811.459,0 c -2.222,1.4786 -5.184,3.3356 -5.301,6.0026 -0.137,3.0987 2.772,6.0532 5.521,7.49 3.409,1.7816 7.885,1.5353 11.534,0.3195 2.668,-0.889 5.948,-2.512 6.609,-5.2457 0.744,-3.0766 -1.413,-6.7146 -3.918,-8.6503 -2.305,-1.7819 -5.735,-1.043 -8.477,-1.2357 -2.742,-0.1927 -4.513,0.352 -5.968,1.3196 z m -743.639,0.9743 c -2.025,2.0884 -3.355,5.7726 -2.203,8.4437 1.055,2.4473 4.426,3.1949 7.012,3.8419 5.068,1.2683 10.728,1.5169 15.672,-0.1699 2.485,-0.8474 5.604,-2.2093 6.285,-4.7443 0.736,-2.7425 -1.201,-5.9522 -3.316,-7.8466 -2.81,-2.5164 -7.072,-3.2269 -10.844,-3.2339 -4.38,-0.01 -9.557,0.5644 -12.606,3.7091 z m 38.867,0 c -2.02,2.0901 -3.349,5.7706 -2.197,8.4398 1.055,2.4465 4.425,3.1949 7.01,3.8419 5.069,1.2687 10.73,1.5187 15.674,-0.1699 2.486,-0.8489 5.606,-2.2151 6.287,-4.7521 0.734,-2.7362 -1.192,-5.9419 -3.304,-7.8304 -2.839,-2.5391 -7.148,-3.2448 -10.957,-3.2435 -4.351,0 -9.489,0.5861 -12.513,3.7142 z m 401.567,-2.5857 c -3.715,0.3282 -8.506,0.3906 -10.645,3.4462 -1.824,2.606 -1.645,7.057 0.348,9.5363 2.015,2.5075 6.135,2.177 9.344,2.4174 3.685,0.2763 7.905,0.8302 11.029,-1.146 2.317,-1.4659 4.575,-4.3038 4.272,-7.029 -0.309,-2.7852 -3.337,-4.7822 -5.835,-6.052 -2.554,-1.298 -5.66,-1.4249 -8.513,-1.1729 z m 38.877,0 c -3.704,0.3055 -8.448,0.3924 -10.614,3.4123 -1.83,2.5505 -1.766,6.9246 0.144,9.4149 1.89,2.4631 5.867,2.2559 8.957,2.5505 3.731,0.3557 7.944,0.874 11.2,-0.9802 2.341,-1.3329 4.819,-3.8717 4.715,-6.5635 -0.11,-2.84 -3.012,-5.1361 -5.495,-6.5199 -2.621,-1.4612 -5.916,-1.5608 -8.907,-1.3141 z m 233.228,0 c -3.716,0.3281 -8.507,0.3902 -10.646,3.4462 -1.824,2.606 -1.643,7.0546 0.347,9.5363 1.993,2.4846 6.069,2.171 9.244,2.4146 3.719,0.2853 7.977,0.8488 11.129,-1.1432 2.318,-1.4645 4.575,-4.3038 4.273,-7.029 -0.309,-2.7848 -3.336,-4.7822 -5.833,-6.052 -2.554,-1.2982 -5.66,-1.4248 -8.514,-1.1729 z m -738.558,0 c -3.706,0.3112 -8.453,0.3911 -10.62,3.4123 -1.83,2.5504 -1.766,6.9246 0.144,9.4149 1.89,2.4635 5.868,2.2596 8.96,2.5504 3.764,0.3541 8.041,0.9053 11.296,-1.0169 2.361,-1.3937 4.79,-4.0809 4.602,-6.8157 -0.193,-2.8069 -3.156,-4.955 -5.636,-6.2827 -2.597,-1.3901 -5.811,-1.5088 -8.746,-1.2623 z m 727.085,18.7969 c -3.883,1.3214 -8.506,5.1215 -8.161,9.2086 0.339,4.0214 5.401,7.7313 9.434,7.5874 3.283,-0.1171 6.668,-3.4684 7.219,-6.7063 0.595,-3.4964 -2.112,-7.3011 -4.962,-9.4124 -0.962,-0.7132 -2.395,-1.0633 -3.53,-0.6773 z m -235.742,0.2852 c -4.066,0.1621 -8.963,3.5326 -9.59,7.5531 -0.521,3.3467 2.638,6.9525 5.692,8.4174 3.156,1.5138 7.648,1.2199 10.466,-0.8568 2.45,-1.8061 4.306,-5.5657 3.405,-8.4731 -1.183,-3.8147 -5.982,-6.7997 -9.973,-6.6406 z m -517.265,4.3304 c -1.737,2.6335 -1.482,7.0012 0.507,9.4496 1.958,2.4104 5.898,2.3349 9.002,2.3957 3.437,0.067 7.676,0.2154 10.061,-2.2597 2.105,-2.1851 3.011,-6.2309 1.664,-8.9497 -1.529,-3.0848 -5.986,-5.1439 -9.664,-5.3626 -4.159,-0.2473 -9.424,1.4716 -11.57,4.7267 z m 550.687,-3.9769 c -3.694,0.3116 -8.427,0.3834 -10.592,3.3925 -1.838,2.5526 -1.785,6.9345 0.123,9.4346 1.865,2.443 5.802,2.2549 8.861,2.5477 3.803,0.364 8.12,0.9114 11.416,-1.0205 2.338,-1.3703 4.761,-4.0071 4.589,-6.7118 -0.182,-2.8496 -3.177,-5.0505 -5.692,-6.4014 -2.583,-1.3866 -5.784,-1.4875 -8.705,-1.2411 z m 233.233,0 c -3.723,0.3147 -8.495,0.4126 -10.66,3.4561 -1.812,2.5456 -1.714,6.8944 0.19,9.371 1.874,2.4362 5.802,2.2546 8.861,2.5477 3.798,0.3639 8.099,0.8976 11.399,-1.0162 2.326,-1.349 4.752,-3.9331 4.612,-6.6184 -0.148,-2.8396 -3.085,-5.0869 -5.578,-6.4536 -2.607,-1.4288 -5.863,-1.5371 -8.824,-1.2866 z m -738.565,0 c -3.727,0.3144 -8.505,0.4154 -10.671,3.4639 -1.809,2.5446 -1.706,6.8894 0.198,9.3632 1.875,2.4354 5.802,2.2548 8.861,2.5477 3.798,0.3636 8.091,0.8797 11.401,-1.0181 2.3,-1.3192 4.724,-3.832 4.613,-6.4817 -0.119,-2.8695 -3.052,-5.1845 -5.562,-6.5796 -2.603,-1.4467 -5.872,-1.5458 -8.84,-1.2954 z m 38.871,0 c -3.704,0.3129 -8.443,0.4009 -10.617,3.4164 -1.826,2.5319 -1.782,6.8677 0.09,9.3648 1.784,2.3778 5.58,2.2689 8.537,2.5781 3.922,0.4102 8.395,1.0064 11.788,-1.003 2.374,-1.4061 4.79,-4.1439 4.581,-6.8954 -0.212,-2.7877 -3.173,-4.8947 -5.643,-6.2049 -2.599,-1.3791 -5.806,-1.5037 -8.738,-1.256 z m 494.719,3.4164 c -1.461,2.7592 -1.782,6.8677 0.09,9.3648 1.784,2.3778 5.58,2.2689 8.537,2.5781 3.921,0.4101 8.392,1.0055 11.784,-1.0027 2.376,-1.406 4.793,-4.1434 4.585,-6.8957 -0.211,-2.7877 -3.118,-5.0048 -5.643,-6.2049 -4.49,-2.1338 -10.095,-2.1224 -14.89,-0.8133 -1.725,0.4709 -3.629,1.3931 -4.465,2.9737 z m -8.816,16.0191 c -3.731,0.3205 -8.517,0.42 -10.684,3.4739 -1.804,2.5434 -1.695,6.8831 0.208,9.3532 1.878,2.4358 5.806,2.2551 8.867,2.5477 3.802,0.3634 8.131,0.9331 11.413,-1.0204 2.368,-1.4096 4.781,-4.1398 4.573,-6.8877 -0.212,-2.7881 -3.172,-4.8973 -5.641,-6.2087 -2.599,-1.3798 -5.805,-1.5098 -8.736,-1.258 z m 38.875,0 c -3.722,0.3107 -8.517,0.3915 -10.661,3.45 -1.822,2.6006 -1.647,7.0405 0.336,9.5207 1.987,2.4841 6.058,2.1745 9.229,2.4253 3.684,0.2914 7.862,0.8009 11.033,-1.0974 2.281,-1.3656 4.609,-3.9692 4.445,-6.6229 -0.173,-2.8047 -3.058,-5.0184 -5.523,-6.3692 -2.617,-1.4349 -5.884,-1.5549 -8.859,-1.3065 z m 155.488,0 c -3.728,0.3094 -8.509,0.4144 -10.676,3.4639 -1.808,2.5452 -1.704,6.8911 0.201,9.365 1.875,2.4354 5.803,2.2489 8.863,2.5461 3.756,0.3649 7.994,0.8826 11.28,-0.9731 2.333,-1.3176 4.815,-3.8233 4.728,-6.5016 -0.09,-2.8452 -2.979,-5.1704 -5.46,-6.5667 -2.625,-1.4772 -5.935,-1.5827 -8.936,-1.3336 z m -146.612,32.1914 c 2.037,2.3036 5.788,2.3048 8.847,2.6152 3.796,0.3851 8.089,0.915 11.403,-0.974 2.345,-1.3361 4.822,-3.8928 4.704,-6.5885 -0.126,-2.8597 -3.129,-5.0525 -5.585,-6.5239 -2.605,-1.5617 -5.868,-2.1556 -8.9,-1.9615 -4.236,0.2712 -10.927,1.1931 -11.986,4.3041 -1.058,3.1111 -0.526,6.8178 1.517,9.1286 z m 49.42,-12.7559 c -3.713,0.3225 -8.493,0.3927 -10.638,3.4403 -1.825,2.592 -1.676,7.0236 0.297,9.505 1.985,2.4979 6.073,2.1947 9.254,2.4496 3.69,0.2957 7.898,0.8421 11.052,-1.0961 2.328,-1.4302 4.654,-4.1896 4.407,-6.9101 -0.256,-2.8011 -3.254,-4.8779 -5.748,-6.178 -2.574,-1.3416 -5.732,-1.4619 -8.624,-1.2107 z m 29.936,1.163 c -1.59,1.1769 -2.629,3.2273 -2.876,5.1896 -0.302,2.4025 0.132,5.3085 1.837,7.0281 1.687,1.7018 4.561,1.5898 6.94,1.8784 3.79,0.4599 7.902,1.145 11.452,-0.262 2.305,-0.9137 4.665,-2.6488 5.534,-4.9711 0.596,-1.5927 0.21,-3.5821 -0.625,-5.0634 -1.02,-1.8096 -3.001,-3.0065 -4.898,-3.8535 -2.903,-1.2961 -6.216,-1.703 -9.394,-1.6447 -2.716,0.05 -5.787,0.082 -7.97,1.6986 z m -102.811,-1.163 c -3.713,0.3091 -8.471,0.3993 -10.638,3.4303 -1.823,2.5483 -1.743,6.9108 0.163,9.3968 1.871,2.4399 5.805,2.254 8.865,2.5479 3.794,0.3644 8.096,0.9072 11.39,-1.0093 2.336,-1.3589 4.763,-3.9679 4.615,-6.6665 -0.155,-2.8218 -3.079,-5.045 -5.558,-6.4018 -2.612,-1.4293 -5.87,-1.5444 -8.837,-1.2974 z m 150.629,0 c -3.713,0.3135 -8.471,0.3993 -10.639,3.4303 -1.822,2.5483 -1.742,6.9108 0.164,9.3968 1.871,2.4398 5.805,2.2552 8.865,2.5478 3.802,0.3635 8.137,0.9432 11.412,-1.0208 2.381,-1.4275 4.788,-4.2002 4.562,-6.9669 -0.225,-2.762 -3.171,-4.8309 -5.621,-6.1248 -2.604,-1.3748 -5.809,-1.5102 -8.743,-1.2624 z m 12.803,18.7988 c -4.051,0.6376 -8.02,5.1104 -8.158,9.209 -0.101,2.9914 2.633,6.2048 5.487,7.1075 3.249,1.0276 7.642,-0.3602 9.763,-3.0266 1.815,-2.2808 1.995,-6.1367 0.644,-8.7194 -1.387,-2.6543 -4.777,-5.0362 -7.736,-4.5705 z m -109.992,0.6387 c -3.712,0.3215 -8.494,0.3866 -10.637,3.4342 -1.828,2.5989 -1.67,7.0423 0.311,9.5268 1.985,2.4901 6.064,2.1801 9.238,2.432 3.696,0.2932 7.913,0.8474 11.068,-1.1 2.329,-1.4371 4.643,-4.2135 4.387,-6.9375 -0.263,-2.7908 -3.254,-4.8515 -5.741,-6.1444 -2.577,-1.3392 -5.734,-1.4616 -8.626,-1.2111 z m 38.873,0 c -3.721,0.3241 -8.523,0.3903 -10.658,3.4542 -1.821,2.6126 -1.617,7.0677 0.383,9.5458 2.005,2.485 6.091,2.1566 9.275,2.3959 3.697,0.2778 7.919,0.8235 11.062,-1.1409 2.301,-1.4374 4.563,-4.2097 4.299,-6.9093 -0.272,-2.7848 -3.249,-4.8422 -5.731,-6.1328 -2.578,-1.3399 -5.736,-1.465 -8.63,-1.2129 z m 38.871,0 c -3.712,0.3253 -8.494,0.3864 -10.637,3.4342 -1.828,2.5996 -1.668,7.044 0.313,9.5287 1.984,2.4887 6.061,2.1827 9.235,2.4301 3.724,0.2903 7.978,0.8385 11.148,-1.138 2.302,-1.4356 4.575,-4.2079 4.304,-6.9073 -0.282,-2.8144 -3.313,-4.8724 -5.828,-6.1673 -2.553,-1.3149 -5.674,-1.4312 -8.535,-1.1804 z m -19.434,19.4356 c -3.721,0.3207 -8.497,0.4106 -10.659,3.4561 -1.812,2.551 -1.706,6.909 0.208,9.3844 1.892,2.4476 5.847,2.2482 8.928,2.5362 3.778,0.3534 8.073,0.9066 11.339,-1.0268 2.354,-1.3934 4.773,-4.0807 4.579,-6.8089 -0.201,-2.8221 -3.19,-4.9709 -5.688,-6.2999 -2.588,-1.377 -5.786,-1.4928 -8.707,-1.2411 z" /><path
     id="path1528-3-3-0-8-2"
     style="display:inline;fill:none;stroke:#000000;stroke-width:13.592;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:40.776, 40.776;filter:url(#filter50861)"
     d="m 1481.846,601.49066 a 214.03976,179.55559 0 0 1 -214.039,179.55559 214.03976,179.55559 0 0 1 -214.04,-179.55559 214.03976,179.55559 0 0 1 214.04,-179.55559 214.03976,179.55559 0 0 1 214.039,179.55559 z" /><path
     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:5.77552;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;filter:url(#filter50861)"
     d="m 997.534,868.39469 c 6.17,-30.8504 126.769,-301.38953 276.321,-316.78538 190.899,-19.65245 361.098,-74.8545 352.269,-211.1372 -19.563,-301.950706 -12.626,442.8386 -12.626,442.8386"
     id="path18147-2-4-6-8" /><metadata
     id="metadata11846"><rdf:RDF><cc:Work
         rdf:about=""><dc:title>spacetime</dc:title><cc:license
           rdf:resource="http://creativecommons.org/licenses/by-nc-sa/4.0/" /></cc:Work><cc:License
         rdf:about="http://creativecommons.org/licenses/by-nc-sa/4.0/"><cc:permits
           rdf:resource="http://creativecommons.org/ns#Reproduction" /><cc:permits
           rdf:resource="http://creativecommons.org/ns#Distribution" /><cc:requires
           rdf:resource="http://creativecommons.org/ns#Notice" /><cc:requires
           rdf:resource="http://creativecommons.org/ns#Attribution" /><cc:prohibits
           rdf:resource="http://creativecommons.org/ns#CommercialUse" /><cc:permits
           rdf:resource="http://creativecommons.org/ns#DerivativeWorks" /><cc:requires
           rdf:resource="http://creativecommons.org/ns#ShareAlike" /></cc:License></rdf:RDF></metadata><script
     id="mesh_polyfill-6"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="mesh_polyfill-63"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="mesh_polyfill-8"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script36975"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script104539"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
     id="script1"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><path
     style="font-style:italic;font-weight:bold;font-size:96px;line-height:1;font-family:Calibri;-inkscape-font-specification:'Calibri Bold Italic';font-variant-ligatures:none;text-align:center;letter-spacing:1px;word-spacing:1px;text-orientation:upright;text-anchor:middle;fill:url(#radialGradient2-2);stroke:#e1ae53;stroke-width:4.19878;stroke-linejoin:bevel;stroke-opacity:0.836773;paint-order:stroke fill markers"
     d="m 473.725,457.83209 q -0.407,0.332 -1.252,0.8528 -0.804,0.5717 -1.843,1.1662 -1.039,0.5945 -2.212,1.1289 -1.081,0.5437 -2.184,0.852 -1.011,0.3176 -1.851,0.3261 -0.841,0.01 -1.214,-0.4488 -0.581,-0.7115 -0.843,-2.2765 -0.211,-1.6066 -0.786,-3.7628 -0.482,-2.1469 -1.574,-4.7283 -1.041,-2.6228 -3.199,-5.2651 -2.241,-2.744 -4.58,-4.0524 -2.297,-1.2577 -4.564,-1.4398 -2.215,-0.2235 -4.288,0.4532 -1.981,0.6859 -3.557,1.9724 -1.829,1.4939 -2.505,3.5706 -0.625,2.0351 -0.599,4.5554 0.08,2.4789 0.535,5.3228 0.5,2.8946 0.899,5.8723 0.441,3.0286 0.544,6.1629 0.196,3.1438 -0.49,6.2451 -0.635,3.0599 -2.378,6.0079 -1.694,2.9056 -4.894,5.5209 -4.776,3.9008 -10.469,5.3313 -5.642,1.3889 -11.596,0.3218 -5.861,-1.0577 -11.697,-4.6774 -5.795,-3.5688 -10.775,-9.6665 -2.697,-3.3029 -4.42,-6.5541 -1.775,-3.2097 -2.797,-6.0172 -0.98,-2.7567 -1.371,-4.8942 -0.339,-2.1791 -0.158,-3.513 0.181,-1.3339 1.705,-2.5788 0.407,-0.3319 1.303,-0.8943 0.896,-0.5624 1.935,-1.1569 1.132,-0.5852 2.304,-1.1196 1.224,-0.5759 2.328,-0.8842 1.103,-0.3082 1.943,-0.3167 0.882,0.042 1.297,0.5505 0.705,0.8638 0.847,2.6965 0.234,1.842 0.721,4.409 0.537,2.5254 1.716,5.6285 1.179,3.103 3.959,6.5075 2.449,2.9981 5.037,4.6114 2.63,1.6641 5.196,2.1096 2.566,0.4454 4.916,-0.2033 2.443,-0.6394 4.526,-2.3408 1.88,-1.5355 2.556,-3.6121 0.676,-2.0766 0.599,-4.5554 0.02,-2.4696 -0.493,-5.272 -0.469,-2.7516 -0.868,-5.7293 -0.399,-2.9777 -0.553,-6.0705 -0.112,-3.042 0.523,-6.1019 0.727,-3.0506 2.47,-5.9986 1.743,-2.9483 5.046,-5.6454 4.573,-3.7349 9.929,-5.0594 5.356,-1.3246 10.756,-0.3134 5.45,0.9697 10.668,4.2471 5.269,3.236 9.709,8.6731 2.075,2.5407 3.536,5.1593 1.512,2.5772 2.437,4.9552 0.977,2.3367 1.344,4.2387 0.368,1.9022 0.275,2.8253 -0.04,0.8816 -0.436,1.5414 -0.3,0.669 -1.113,1.333 z m 37.552,50.4831 q -2.416,2.7679 -5.69,5.222 -3.225,2.4974 -7.154,4.2055 -3.887,1.6588 -8.397,2.337 -4.418,0.672 -9.4,-0.1057 -4.889,-0.784 -10.125,-3.2648 -5.194,-2.5302 -10.878,-7.4915 l -6.673,-5.8241 -21.962,16.8818 q -0.531,0.408 -1.271,0.4583 -0.741,0.05 -1.797,-0.436 -1.056,-0.4862 -2.427,-1.509 -1.415,-0.9735 -3.293,-2.6129 -1.829,-1.5961 -2.935,-2.823 -1.1,-1.1342 -1.576,-1.9854 -0.476,-0.851 -0.421,-1.4127 0.1,-0.6111 0.721,-1.0252 l 61.776,-47.5298 q 2.472,-1.9348 4.947,-1.7773 2.519,0.108 4.693,2.0062 l 13.988,12.209 q 2.57,2.2434 4.424,4.2099 1.897,1.917 3.529,4.0381 2.497,3.2248 3.791,6.5312 1.344,3.3496 1.385,6.6946 0.08,3.2956 -1.226,6.5929 -1.268,3.2478 -4.029,6.4111 z m -14.986,-10.4674 q 2.071,-2.3724 2.444,-5.0946 0.373,-2.7222 -1.395,-5.485 -0.736,-1.2519 -1.935,-2.4724 -1.155,-1.27 -2.737,-2.6505 l -5.734,-5.0044 -23.189,17.988 5.931,5.177 q 2.817,2.459 5.355,3.5421 2.631,1.0769 5.062,1.2838 2.482,0.2499 4.814,-0.3269 2.382,-0.5337 4.448,-1.6039 2.115,-1.0271 3.836,-2.3993 1.763,-1.4217 3.1,-2.9539 z m 33.628,85.677 q -0.908,2.2047 -1.66,3.3612 -0.701,1.1861 -1.852,1.3492 -1.068,0.1362 -2.89,-0.7767 -1.855,-0.8561 -4.914,-2.6434 -2.153,-1.2574 -3.446,-2.1654 -1.326,-0.8511 -1.93,-1.5079 -0.604,-0.6569 -0.622,-1.2755 -0.02,-0.6187 0.388,-1.4448 l 6.623,-15.886 -27.529,-16.0861 -15.998,9.9525 q -0.86,0.5613 -1.7,0.8298 -0.808,0.2119 -1.937,-0.068 -1.128,-0.2794 -2.837,-1.1261 -1.652,-0.8134 -4.088,-2.2366 -2.606,-1.5226 -3.922,-2.52 -1.374,-1.0305 -1.463,-1.9184 -0.112,-0.9776 0.979,-1.9357 1.035,-0.9909 3.269,-2.3446 l 73.571,-44.2419 q 1.129,-0.632 2.026,-0.8674 0.931,-0.2921 2.116,0.02 1.275,0.289 3.064,1.2585 1.879,0.9458 4.768,2.6338 3.342,1.9529 5.201,3.1915 1.95,1.215 2.828,2.1839 0.91,0.912 0.886,1.7337 -0.02,0.8217 -0.54,1.9642 z m 9.15,-66.7636 -0.06,-0.033 -34.575,21.589 20.618,12.048 z m 89.83,27.8852 q -0.619,1.7297 -2.275,4.412 -1.595,2.7043 -3.162,4.1645 -1.483,1.4202 -2.595,1.0225 -0.803,-0.2872 -1.562,-1.6734 -0.736,-1.4478 -2.108,-3.2623 -1.371,-1.8145 -3.797,-3.7972 -2.405,-2.0445 -6.543,-3.525 -4.572,-1.6351 -9.003,-1.1299 -4.409,0.4436 -8.456,2.4098 -4.026,1.9045 -7.642,5.0007 -3.616,3.0962 -6.601,6.7664 -2.923,3.6923 -5.167,7.6277 -2.16,3.8956 -3.442,7.4786 -1.547,4.3241 -1.667,7.9737 -0.06,3.6717 1.205,6.563 1.266,2.8912 3.833,5.0637 2.589,2.1108 6.296,3.4366 4.386,1.5689 7.806,1.7471 3.481,0.2003 6.041,-0.1382 2.622,-0.3164 4.374,-0.7348 1.814,-0.3963 2.988,0.024 0.803,0.2873 0.829,0.9933 0.11,0.6665 -0.266,1.7167 -0.154,0.4327 -0.587,1.253 -0.434,0.8204 -1.016,1.8661 -0.567,0.9808 -1.268,2.1953 -0.688,1.1477 -1.396,2.1486 -0.684,0.9395 -1.448,1.7116 -0.68,0.7322 -1.602,1.1686 -0.923,0.4364 -3.297,0.8413 -2.353,0.343 -5.526,0.2531 -3.173,-0.09 -6.977,-0.7537 -3.825,-0.602 -7.902,-2.0604 -6.734,-2.4086 -11.529,-6.1445 -4.733,-3.7138 -7.198,-8.7063 -2.464,-4.9925 -2.536,-11.2195 -0.07,-6.227 2.557,-13.5779 2.055,-5.7449 5.439,-11.5023 3.405,-5.8195 7.874,-10.9098 4.53,-5.0684 10.075,-9.0772 5.545,-4.0088 11.901,-6.1944 6.44,-2.2255 13.58,-2.319 7.203,-0.071 14.924,2.6906 4.324,1.5468 7.823,3.8434 3.582,2.2569 5.893,4.7559 2.373,2.5211 3.043,4.1543 0.754,1.5935 0.09,3.4467 z m 59.806,7.9181 q -0.106,0.3791 -0.495,1.2923 -0.327,0.9307 -0.85,2.0791 -0.505,1.0853 -1.173,2.2615 -0.664,1.1782 -1.471,2.1107 -0.724,0.8885 -1.612,1.3908 -0.826,0.5197 -1.584,0.3091 l -29.205,-8.1107 -9.593,18.8519 24.78,6.8818 q 0.885,0.2457 1.088,0.9832 0.204,0.7375 -0.112,1.8753 -0.123,0.4425 -0.512,1.3556 -0.309,0.8675 -0.833,2.0159 -0.505,1.0853 -1.156,2.1981 -0.644,1.1162 -1.436,1.9842 -0.723,0.8885 -1.531,1.3452 -0.808,0.4565 -1.566,0.2458 l -24.717,-6.8642 -11.085,21.7738 29.584,8.216 q 0.758,0.2107 0.945,1.0114 0.203,0.7374 -0.148,2.0017 -0.123,0.4425 -0.449,1.3731 -0.327,0.9307 -0.913,2.0615 -0.506,1.0854 -1.156,2.1981 -0.645,1.1163 -1.454,2.0475 -0.723,0.8885 -1.531,1.3451 -0.808,0.4566 -1.629,0.2284 l -41.089,-11.4112 q -1.012,-0.2808 -1.763,-0.7619 -0.734,-0.5443 -1.128,-1.3345 -0.312,-0.8358 -0.239,-1.8367 0.09,-1.064 0.731,-2.3845 l 34.089,-67.3372 q 1.341,-2.6234 3.382,-3.3505 2.057,-0.7903 4.143,-0.2109 l 40.71,11.3058 q 1.643,0.4564 0.976,2.8585 z m 76.115,29.3568 q -0.166,0.4285 -0.667,1.3597 -0.416,0.8944 -1.112,1.9615 -0.631,1.0929 -1.498,2.2343 -0.779,1.1056 -1.671,1.956 -0.831,0.8744 -1.765,1.287 -0.872,0.4362 -1.606,0.1521 l -19.885,-7.6953 -37.422,58.8902 q -0.421,0.5406 -1.099,0.8408 -0.679,0.3001 -1.838,0.2034 -1.097,-0.073 -2.759,-0.5049 -1.601,-0.4084 -3.987,-1.3319 -2.325,-0.8996 -3.783,-1.6752 -1.459,-0.7755 -2.197,-1.4129 -0.677,-0.6137 -0.794,-1.2216 -0.06,-0.5842 0.304,-1.1487 l 37.422,-58.8901 -19.701,-7.6243 q -0.918,-0.3552 -1.024,-1.1702 -0.05,-0.7914 0.404,-1.954 0.189,-0.4896 0.606,-1.3835 0.501,-0.9318 1.134,-2.0231 0.718,-1.1293 1.498,-2.2343 0.865,-1.1428 1.756,-1.9935 0.893,-0.8507 1.741,-1.2257 0.872,-0.4363 1.607,-0.1522 l 55.8,21.5942 q 0.734,0.284 0.841,1.0992 0.167,0.8387 -0.306,2.0624 z m -17.427,81.6109 q -0.408,0.5304 -1.111,0.7686 -0.703,0.2384 -1.849,0.039 -1.086,-0.1703 -2.674,-0.8075 -1.616,-0.5783 -3.852,-1.6816 -2.295,-1.1322 -3.678,-2.0346 -1.354,-0.8144 -2.033,-1.515 -0.678,-0.7006 -0.74,-1.3165 -0.06,-0.6158 0.405,-1.117 l 49.949,-64.8981 q 0.349,-0.5597 1.052,-0.7977 0.762,-0.2094 1.849,-0.039 1.145,0.1994 2.674,0.8075 1.617,0.5784 3.852,1.6816 2.236,1.1032 3.561,1.9765 1.413,0.8435 2.091,1.544 0.737,0.7297 0.74,1.3164 0.06,0.6159 -0.346,1.1462 z m 100.681,63.5105 q -0.537,0.4245 -1.161,0.6286 -0.623,0.2042 -1.617,-0.092 -0.941,-0.2582 -2.36,-1.0915 -1.456,-0.7796 -3.445,-2.1719 -2.095,-1.4676 -3.272,-2.532 -1.215,-1.0106 -1.725,-1.7685 -0.511,-0.758 -0.425,-1.3385 0.14,-0.5427 0.624,-1.0048 l 50.912,-48.6856 -0.107,-0.075 -71.134,34.4448 q -1.586,0.892 -3.805,0.059 -2.129,-0.8495 -5.514,-3.2204 -3.493,-2.446 -4.638,-4.1285 -1.053,-1.6986 -0.467,-2.6498 l 31.533,-62.4159 -0.107,-0.075 -51.003,48.7019 q -0.484,0.4621 -1.161,0.6286 -0.624,0.2041 -1.618,-0.092 -0.94,-0.2582 -2.359,-1.0915 -1.403,-0.7419 -3.445,-2.172 -2.042,-1.4299 -3.219,-2.4943 -1.214,-1.0107 -1.725,-1.7686 -0.51,-0.7579 -0.424,-1.3383 0.09,-0.5804 0.624,-1.0048 l 55.749,-53.3071 q 1.21,-1.1553 2.5,-1.8538 1.344,-0.6608 2.639,-0.7949 1.387,-0.1503 2.725,0.2262 1.338,0.3764 2.574,1.2419 l 8.814,6.1717 q 2.364,1.6557 3.729,3.2522 1.402,1.5428 1.8,3.2627 0.397,1.72 -0.157,3.6548 -0.5,1.9724 -1.828,4.3262 l -22.259,46.0839 0.269,0.1881 52.837,-24.6715 q 2.543,-1.3432 4.671,-2.0953 2.166,-0.8058 4.133,-0.87 2.059,-0.08 3.972,0.6188 1.951,0.6453 4.154,2.1882 l 9.996,6.9995 q 1.343,0.9408 2.047,1.9943 0.704,1.0536 0.715,2.1823 0.102,1.1125 -0.543,2.2626 -0.555,1.1338 -1.71,2.3269 z m 118.16,7.3482 q -0.286,0.2697 -1.093,0.8479 -0.762,0.6261 -1.806,1.3362 -0.995,0.6653 -2.176,1.3248 -1.181,0.6595 -2.353,1.0408 -1.079,0.3841 -2.099,0.3525 -0.975,0.016 -1.515,-0.5576 l -20.756,-22.0878 -17.983,11.1371 17.612,18.7412 q 0.629,0.6694 0.42,1.4054 -0.209,0.7362 -1.069,1.5449 -0.335,0.3143 -1.142,0.8927 -0.714,0.5812 -1.757,1.2914 -0.996,0.6652 -2.129,1.2798 -1.133,0.6146 -2.257,0.9509 -1.079,0.3842 -2.007,0.3554 -0.927,-0.029 -1.466,-0.6026 l -17.567,-18.6933 -20.775,12.8605 21.026,22.3746 q 0.539,0.5738 0.283,1.3549 -0.208,0.736 -1.165,1.6346 -0.335,0.3143 -1.096,0.9406 -0.762,0.6261 -1.851,1.2885 -0.995,0.6651 -2.128,1.2797 -1.133,0.6146 -2.305,0.9959 -1.08,0.3842 -2.007,0.3554 -0.927,-0.029 -1.511,-0.6504 l -29.203,-31.0759 q -0.719,-0.7649 -1.111,-1.5661 -0.345,-0.8462 -0.272,-1.7257 0.167,-0.8767 0.749,-1.694 0.63,-0.8622 1.862,-1.6595 l 64.082,-39.8728 q 2.508,-1.5465 4.629,-1.1093 2.17,0.3923 3.652,1.9701 l 28.933,30.789 q 1.168,1.2431 -0.649,2.9502 z"
     id="text1-0"
     aria-label="SPACETIME" /><path
     d="m 879.257,299.16134 q 0,0.5313 -0.03,0.9375 -0.03,0.375 -0.125,0.6563 -0.06,0.25 -0.187,0.4687 -0.09,0.1875 -0.5,0.5938 -0.375,0.375 -1.313,0.9687 -0.937,0.5625 -2.125,1.0313 -1.156,0.4375 -2.531,0.7187 -1.375,0.2813 -2.844,0.2813 -3.031,0 -5.375,-1 -2.343,-1 -3.937,-2.9063 -1.563,-1.9375 -2.406,-4.7187 -0.813,-2.8125 -0.813,-6.4688 0,-4.1562 1,-7.125 1.031,-3 2.781,-4.9062 1.782,-1.9063 4.157,-2.8125 2.406,-0.9375 5.187,-0.9375 1.344,0 2.594,0.25 1.281,0.25 2.344,0.6562 1.062,0.4063 1.875,0.9375 0.843,0.5313 1.218,0.9063 0.375,0.375 0.5,0.5937 0.157,0.2188 0.25,0.5313 0.09,0.2812 0.125,0.6562 0.03,0.375 0.03,0.9375 0,1.2188 -0.281,1.7188 -0.281,0.4687 -0.688,0.4687 -0.468,0 -1.093,-0.5 -0.594,-0.5312 -1.532,-1.1562 -0.937,-0.625 -2.281,-1.125 -1.312,-0.5313 -3.125,-0.5313 -3.719,0 -5.719,2.875 -1.968,2.8438 -1.968,8.2813 0,2.7187 0.5,4.7812 0.531,2.0313 1.531,3.4063 1,1.375 2.437,2.0625 1.469,0.6562 3.344,0.6562 1.781,0 3.125,-0.5625 1.344,-0.5625 2.313,-1.2187 1,-0.6875 1.656,-1.2188 0.687,-0.5625 1.062,-0.5625 0.219,0 0.375,0.125 0.157,0.125 0.25,0.4375 0.125,0.2813 0.157,0.75 0.06,0.4375 0.06,1.0625 z m 33.469,-10.0937 q 0,3.4375 -0.906,6.3437 -0.907,2.875 -2.719,4.9688 -1.781,2.0937 -4.5,3.2812 -2.688,1.1563 -6.25,1.1563 -3.469,0 -6.063,-1.0313 -2.562,-1.0312 -4.281,-3 -1.719,-1.9687 -2.562,-4.7812 -0.844,-2.8125 -0.844,-6.375 0,-3.4375 0.875,-6.3125 0.906,-2.9063 2.687,-5 1.813,-2.0938 4.5,-3.25 2.688,-1.1563 6.282,-1.1563 3.468,0 6.031,1.0313 2.594,1.0312 4.312,3 1.719,1.9687 2.563,4.7812 0.875,2.8125 0.875,6.3438 z m -5.438,0.3437 q 0,-2.2812 -0.437,-4.3125 -0.406,-2.0312 -1.375,-3.5625 -0.969,-1.5312 -2.625,-2.4062 -1.656,-0.9063 -4.125,-0.9063 -2.281,0 -3.938,0.8125 -1.625,0.8125 -2.687,2.3125 -1.063,1.4688 -1.594,3.5 -0.5,2.0313 -0.5,4.4375 0,2.3125 0.406,4.3438 0.438,2.0312 1.407,3.5625 1,1.5 2.656,2.4062 1.656,0.875 4.125,0.875 2.25,0 3.906,-0.8125 1.656,-0.8125 2.719,-2.2812 1.062,-1.4688 1.562,-3.5 0.5,-2.0313 0.5,-4.4688 z m 38.25,14.0313 q 0,0.25 -0.125,0.4375 -0.125,0.1562 -0.406,0.2812 -0.281,0.125 -0.781,0.1875 -0.5,0.062 -1.25,0.062 -0.781,0 -1.281,-0.062 -0.5,-0.062 -0.782,-0.1875 -0.281,-0.125 -0.406,-0.2812 -0.125,-0.1875 -0.125,-0.4375 v -16.4688 q 0,-2.4062 -0.375,-3.875 -0.375,-1.4687 -1.094,-2.5312 -0.718,-1.0625 -1.875,-1.625 -1.125,-0.5625 -2.625,-0.5625 -1.937,0 -3.875,1.375 -1.937,1.375 -4.062,4.0312 v 19.6563 q 0,0.25 -0.125,0.4375 -0.125,0.1562 -0.406,0.2812 -0.282,0.125 -0.782,0.1875 -0.5,0.062 -1.281,0.062 -0.75,0 -1.25,-0.062 -0.5,-0.062 -0.812,-0.1875 -0.282,-0.125 -0.407,-0.2812 -0.09,-0.1875 -0.09,-0.4375 v -28.125 q 0,-0.25 0.09,-0.4063 0.09,-0.1875 0.375,-0.3125 0.282,-0.1562 0.719,-0.1875 0.438,-0.062 1.156,-0.062 0.688,0 1.125,0.062 0.469,0.031 0.719,0.1875 0.25,0.125 0.344,0.3125 0.125,0.1563 0.125,0.4063 v 3.7187 q 2.375,-2.6562 4.719,-3.875 2.375,-1.25 4.781,-1.25 2.812,0 4.719,0.9688 1.937,0.9375 3.125,2.5312 1.187,1.5938 1.687,3.75 0.531,2.125 0.531,5.125 z m 30.625,-4.2813 q 0,0.5313 -0.03,0.9375 -0.03,0.375 -0.125,0.6563 -0.06,0.25 -0.188,0.4687 -0.09,0.1875 -0.5,0.5938 -0.375,0.375 -1.312,0.9687 -0.938,0.5625 -2.125,1.0313 -1.157,0.4375 -2.532,0.7187 -1.375,0.2813 -2.843,0.2813 -3.032,0 -5.375,-1 -2.344,-1 -3.938,-2.9063 -1.562,-1.9375 -2.406,-4.7187 -0.813,-2.8125 -0.813,-6.4688 0,-4.1562 1,-7.125 1.032,-3 2.782,-4.9062 1.781,-1.9063 4.156,-2.8125 2.406,-0.9375 5.187,-0.9375 1.344,0 2.594,0.25 1.281,0.25 2.344,0.6562 1.062,0.4063 1.875,0.9375 0.844,0.5313 1.219,0.9063 0.375,0.375 0.5,0.5937 0.156,0.2188 0.25,0.5313 0.09,0.2812 0.125,0.6562 0.03,0.375 0.03,0.9375 0,1.2188 -0.281,1.7188 -0.281,0.4687 -0.687,0.4687 -0.469,0 -1.094,-0.5 -0.594,-0.5312 -1.531,-1.1562 -0.938,-0.625 -2.282,-1.125 -1.312,-0.5313 -3.125,-0.5313 -3.718,0 -5.718,2.875 -1.969,2.8438 -1.969,8.2813 0,2.7187 0.5,4.7812 0.531,2.0313 1.531,3.4063 1,1.375 2.438,2.0625 1.468,0.6562 3.343,0.6562 1.782,0 3.125,-0.5625 1.344,-0.5625 2.313,-1.2187 1,-0.6875 1.656,-1.2188 0.688,-0.5625 1.063,-0.5625 0.218,0 0.375,0.125 0.156,0.125 0.25,0.4375 0.125,0.2813 0.156,0.75 0.06,0.4375 0.06,1.0625 z m 31.844,-11 q 0,1.2188 -0.625,1.75 -0.594,0.5 -1.375,0.5 H 987.57 q 0,2.3438 0.468,4.2188 0.469,1.875 1.563,3.2187 1.094,1.3438 2.844,2.0625 1.75,0.7188 4.281,0.7188 2,0 3.562,-0.3125 1.563,-0.3438 2.688,-0.75 1.156,-0.4063 1.875,-0.7188 0.75,-0.3437 1.125,-0.3437 0.219,0 0.375,0.125 0.187,0.094 0.281,0.3125 0.09,0.2187 0.125,0.625 0.06,0.375 0.06,0.9375 0,0.4062 -0.03,0.7187 -0.03,0.2813 -0.09,0.5313 -0.03,0.2187 -0.156,0.4062 -0.09,0.1875 -0.281,0.375 -0.156,0.1563 -1,0.5625 -0.844,0.375 -2.188,0.75 -1.343,0.375 -3.125,0.6563 -1.75,0.3125 -3.75,0.3125 -3.468,0 -6.093,-0.9688 -2.594,-0.9687 -4.375,-2.875 -1.782,-1.9062 -2.688,-4.7812 -0.906,-2.875 -0.906,-6.6875 0,-3.625 0.937,-6.5 0.938,-2.9063 2.688,-4.9063 1.781,-2.0312 4.281,-3.0937 2.5,-1.0938 5.594,-1.0938 3.312,0 5.625,1.0625 2.344,1.0625 3.844,2.875 1.5,1.7813 2.187,4.2188 0.719,2.4062 0.719,5.1562 z m -5.187,-1.5312 q 0.09,-4.0625 -1.813,-6.375 -1.875,-2.3125 -5.594,-2.3125 -1.906,0 -3.343,0.7187 -1.438,0.7188 -2.407,1.9063 -0.968,1.1875 -1.5,2.7812 -0.531,1.5625 -0.593,3.2813 z m 39.906,2.3125 q 0,3.6875 -0.813,6.625 -0.781,2.9375 -2.343,5 -1.532,2.0312 -3.813,3.1562 -2.281,1.0938 -5.219,1.0938 -1.25,0 -2.312,-0.25 -1.063,-0.25 -2.094,-0.7813 -1,-0.5312 -2,-1.3437 -1,-0.8125 -2.125,-1.9063 v 14.0625 q 0,0.25 -0.125,0.4375 -0.125,0.1875 -0.406,0.3125 -0.281,0.125 -0.781,0.1875 -0.5,0.062 -1.282,0.062 -0.75,0 -1.25,-0.062 -0.5,-0.062 -0.812,-0.1875 -0.281,-0.125 -0.406,-0.3125 -0.09,-0.1875 -0.09,-0.4375 v -39.2812 q 0,-0.2813 0.09,-0.4375 0.09,-0.1875 0.375,-0.3125 0.281,-0.125 0.718,-0.1563 0.438,-0.062 1.063,-0.062 0.656,0 1.062,0.062 0.438,0.031 0.719,0.1563 0.281,0.125 0.375,0.3125 0.125,0.1562 0.125,0.4375 v 3.7812 q 1.281,-1.3125 2.469,-2.2812 1.187,-0.9688 2.375,-1.5938 1.219,-0.6562 2.469,-0.9687 1.281,-0.3438 2.687,-0.3438 3.063,0 5.219,1.1875 2.156,1.1875 3.5,3.25 1.375,2.0625 2,4.8125 0.625,2.7188 0.625,5.7813 z m -5.438,0.5937 q 0,-2.1562 -0.343,-4.1562 -0.313,-2.0313 -1.125,-3.5938 -0.782,-1.5625 -2.125,-2.5 -1.344,-0.9375 -3.344,-0.9375 -1,0 -1.969,0.3125 -0.969,0.2813 -1.969,0.9375 -1,0.625 -2.093,1.6875 -1.094,1.0313 -2.313,2.5625 v 11.1875 q 2.125,2.5938 4.031,3.9688 1.907,1.375 4,1.375 1.938,0 3.313,-0.9375 1.406,-0.9375 2.25,-2.5 0.875,-1.5625 1.281,-3.5 0.406,-1.9375 0.406,-3.9063 z m 28.532,11.8438 q 0,0.9062 -0.125,1.4375 -0.125,0.5312 -0.375,0.7812 -0.25,0.25 -0.75,0.4688 -0.5,0.2187 -1.157,0.3437 -0.625,0.1563 -1.343,0.25 -0.719,0.094 -1.438,0.094 -2.187,0 -3.75,-0.5625 -1.562,-0.5937 -2.562,-1.75 -1,-1.1875 -1.469,-2.9687 -0.438,-1.8125 -0.438,-4.25 v -16.4375 h -3.937 q -0.469,0 -0.75,-0.5 -0.281,-0.5 -0.281,-1.625 0,-0.5938 0.06,-1 0.09,-0.4063 0.219,-0.6563 0.125,-0.2812 0.312,-0.375 0.219,-0.125 0.469,-0.125 h 3.906 v -6.6878 q 0,-0.2187 0.09,-0.4062 0.125,-0.1875 0.406,-0.3125 0.313,-0.1563 0.813,-0.2188 0.5,-0.062 1.25,-0.062 0.781,0 1.281,0.062 0.5,0.062 0.781,0.2188 0.282,0.125 0.407,0.3125 0.125,0.1875 0.125,0.4062 v 6.6875 h 7.218 q 0.25,0 0.438,0.125 0.187,0.094 0.312,0.375 0.157,0.25 0.219,0.6563 0.06,0.4062 0.06,1 0,1.125 -0.281,1.625 -0.282,0.5 -0.75,0.5 h -7.219 v 15.6875 q 0,2.9062 0.844,4.4062 0.875,1.4688 3.093,1.4688 0.719,0 1.282,-0.125 0.562,-0.1563 1,-0.3125 0.437,-0.1563 0.75,-0.2813 0.312,-0.1562 0.562,-0.1562 0.156,0 0.281,0.094 0.157,0.062 0.219,0.2812 0.09,0.2188 0.156,0.5938 0.06,0.375 0.06,0.9375 z"
     id="text13-8-0"
     style="font-size:64px;line-height:1;font-family:Calibri;-inkscape-font-specification:Calibri;font-variant-ligatures:none;text-align:center;letter-spacing:1px;word-spacing:1px;text-orientation:upright;text-anchor:middle;fill:#fe4eba;fill-opacity:1;stroke-width:3;stroke-linejoin:bevel;stroke-opacity:0.836773;paint-order:stroke fill markers"
     aria-label="concept" /><path
     d="m 1100.975,590.4982 v 2.9531 q 0,0.6094 -0.14,0.9844 -0.118,0.375 -0.399,0.5859 -0.258,0.2109 -0.68,0.2813 -0.398,0.07 -0.961,0.07 -0.562,0 -0.96,-0.07 -0.399,-0.07 -0.657,-0.2813 -0.258,-0.2109 -0.398,-0.5859 -0.117,-0.375 -0.117,-0.9844 0,-0.7031 0.07,-1.2891 0.07,-0.6094 0.211,-1.1484 0.164,-0.5391 0.422,-1.0547 0.281,-0.5391 0.656,-1.125 l 3.164,-4.8047 q 0.117,-0.1875 0.258,-0.3047 0.141,-0.1172 0.351,-0.1875 0.211,-0.094 0.493,-0.1406 0.304,-0.047 0.726,-0.047 0.375,0 0.633,0.047 0.258,0.023 0.375,0.1172 0.117,0.07 0.117,0.2109 0.02,0.1406 -0.09,0.3281 z m -8.39,0 v 2.9531 q 0,0.6094 -0.141,0.9844 -0.117,0.375 -0.399,0.5859 -0.257,0.2109 -0.679,0.2813 -0.399,0.07 -0.961,0.07 -0.563,0 -0.961,-0.07 -0.399,-0.07 -0.656,-0.2813 -0.258,-0.2109 -0.399,-0.5859 -0.117,-0.375 -0.117,-0.9844 0,-0.7031 0.07,-1.2891 0.07,-0.6094 0.211,-1.1484 0.164,-0.5391 0.422,-1.0547 0.281,-0.5391 0.656,-1.125 l 3.164,-4.8047 q 0.118,-0.1875 0.258,-0.3047 0.141,-0.1172 0.352,-0.1875 0.211,-0.094 0.492,-0.1406 0.305,-0.047 0.727,-0.047 0.375,0 0.609,0.047 0.258,0.023 0.375,0.1172 0.141,0.07 0.141,0.2109 0,0.1406 -0.09,0.3281 z m 36.578,14.2031 q 0,2.7656 -0.61,4.9687 -0.586,2.2032 -1.758,3.75 -1.148,1.5235 -2.859,2.3672 -1.711,0.8203 -3.914,0.8203 -0.937,0 -1.734,-0.1875 -0.797,-0.1875 -1.571,-0.5859 -0.75,-0.3984 -1.5,-1.0078 -0.75,-0.6094 -1.593,-1.4297 v 10.5469 q 0,0.1875 -0.09,0.3281 -0.09,0.1406 -0.305,0.2344 -0.211,0.094 -0.586,0.1406 -0.375,0.047 -0.961,0.047 -0.562,0 -0.937,-0.047 -0.375,-0.047 -0.61,-0.1406 -0.21,-0.094 -0.304,-0.2344 -0.07,-0.1406 -0.07,-0.3281 v -29.461 q 0,-0.2109 0.07,-0.3281 0.07,-0.1406 0.281,-0.2344 0.211,-0.094 0.539,-0.1172 0.328,-0.047 0.797,-0.047 0.492,0 0.797,0.047 0.328,0.023 0.539,0.1172 0.211,0.094 0.281,0.2344 0.09,0.1172 0.09,0.3281 v 2.836 q 0.961,-0.9844 1.851,-1.711 0.891,-0.7265 1.782,-1.1953 0.914,-0.4922 1.851,-0.7265 0.961,-0.2578 2.016,-0.2578 2.297,0 3.914,0.8906 1.617,0.8906 2.625,2.4375 1.031,1.5469 1.5,3.6094 0.469,2.039 0.469,4.3359 z m -4.078,0.4453 q 0,-1.6172 -0.258,-3.1172 -0.235,-1.5234 -0.844,-2.6953 -0.586,-1.1719 -1.594,-1.875 -1.008,-0.7031 -2.508,-0.7031 -0.75,0 -1.476,0.2343 -0.727,0.211 -1.477,0.7032 -0.75,0.4687 -1.57,1.2656 -0.82,0.7734 -1.734,1.9219 v 8.3906 q 1.593,1.9453 3.023,2.9766 1.43,1.0312 3,1.0312 1.453,0 2.484,-0.7031 1.055,-0.7031 1.688,-1.875 0.656,-1.1719 0.961,-2.625 0.305,-1.4531 0.305,-2.9297 z m 23.218,-9.2813 q 0,0.5157 -0.02,0.8672 -0.02,0.3516 -0.09,0.5625 -0.07,0.1875 -0.187,0.3047 -0.09,0.094 -0.281,0.094 -0.188,0 -0.469,-0.094 -0.258,-0.1172 -0.61,-0.2109 -0.328,-0.1172 -0.75,-0.211 -0.421,-0.094 -0.914,-0.094 -0.586,0 -1.148,0.2343 -0.563,0.2344 -1.195,0.7735 -0.61,0.539 -1.289,1.4297 -0.68,0.8906 -1.5,2.1796 v 13.875 q 0,0.1875 -0.09,0.3282 -0.09,0.1172 -0.305,0.2109 -0.211,0.094 -0.586,0.1406 -0.375,0.047 -0.961,0.047 -0.562,0 -0.937,-0.047 -0.375,-0.047 -0.61,-0.1406 -0.211,-0.094 -0.304,-0.2109 -0.07,-0.1407 -0.07,-0.3282 v -21.0937 q 0,-0.1875 0.07,-0.3047 0.07,-0.1406 0.281,-0.2344 0.211,-0.1172 0.539,-0.1406 0.328,-0.047 0.867,-0.047 0.516,0 0.844,0.047 0.352,0.023 0.539,0.1406 0.188,0.094 0.258,0.2344 0.09,0.1172 0.09,0.3047 v 3.0703 q 0.867,-1.2656 1.617,-2.0625 0.773,-0.7969 1.453,-1.2422 0.68,-0.4687 1.336,-0.6328 0.679,-0.1875 1.359,-0.1875 0.305,0 0.68,0.047 0.398,0.023 0.82,0.1172 0.422,0.094 0.75,0.2109 0.352,0.1172 0.492,0.2344 0.141,0.1172 0.188,0.2344 0.05,0.094 0.07,0.2578 0.05,0.1641 0.05,0.4922 0.02,0.3047 0.02,0.8437 z m 22.774,8.25 q 0,0.9141 -0.469,1.3125 -0.445,0.375 -1.031,0.375 h -13.828 q 0,1.7579 0.351,3.1641 0.352,1.4063 1.172,2.4141 0.82,1.0078 2.133,1.5468 1.312,0.5391 3.211,0.5391 1.5,0 2.672,-0.2344 1.172,-0.2578 2.015,-0.5625 0.867,-0.3047 1.407,-0.539 0.562,-0.2578 0.843,-0.2578 0.164,0 0.282,0.094 0.14,0.07 0.21,0.2343 0.07,0.1641 0.09,0.4688 0.05,0.2812 0.05,0.7031 0,0.3047 -0.02,0.5391 -0.02,0.2109 -0.07,0.3984 -0.02,0.1641 -0.117,0.3047 -0.07,0.1406 -0.211,0.2812 -0.117,0.1172 -0.75,0.4219 -0.632,0.2813 -1.64,0.5625 -1.008,0.2813 -2.344,0.4922 -1.313,0.2344 -2.813,0.2344 -2.601,0 -4.57,-0.7266 -1.945,-0.7265 -3.281,-2.1562 -1.336,-1.4297 -2.016,-3.586 -0.679,-2.1562 -0.679,-5.0156 0,-2.7187 0.703,-4.875 0.703,-2.1797 2.015,-3.6797 1.336,-1.5234 3.211,-2.3203 1.875,-0.8203 4.196,-0.8203 2.484,0 4.218,0.7969 1.758,0.7969 2.883,2.1562 1.125,1.336 1.641,3.1641 0.539,1.8047 0.539,3.8672 z m -3.891,-1.1484 q 0.07,-3.0469 -1.359,-4.7812 -1.407,-1.7344 -4.196,-1.7344 -1.429,0 -2.507,0.539 -1.079,0.5391 -1.805,1.4297 -0.727,0.8907 -1.125,2.086 -0.399,1.1718 -0.445,2.4609 z m 24.016,6.8672 q 0,1.6172 -0.61,2.8828 -0.586,1.2656 -1.687,2.1328 -1.102,0.8672 -2.625,1.3125 -1.524,0.4453 -3.352,0.4453 -1.125,0 -2.156,-0.1875 -1.008,-0.164 -1.828,-0.4218 -0.797,-0.2813 -1.359,-0.5625 -0.563,-0.3047 -0.821,-0.5391 -0.258,-0.2344 -0.375,-0.6563 -0.117,-0.4218 -0.117,-1.1484 0,-0.4453 0.05,-0.75 0.05,-0.3047 0.117,-0.4922 0.07,-0.1875 0.188,-0.2578 0.14,-0.094 0.304,-0.094 0.258,0 0.75,0.3281 0.516,0.3047 1.243,0.6797 0.75,0.375 1.757,0.7032 1.008,0.3046 2.321,0.3046 0.984,0 1.781,-0.2109 0.797,-0.2109 1.383,-0.6094 0.586,-0.4218 0.89,-1.0547 0.329,-0.6328 0.329,-1.5 0,-0.8906 -0.469,-1.5 -0.446,-0.6093 -1.196,-1.0781 -0.75,-0.4687 -1.687,-0.8203 -0.938,-0.375 -1.945,-0.7734 -0.985,-0.3985 -1.946,-0.8907 -0.937,-0.5156 -1.687,-1.2421 -0.75,-0.7266 -1.219,-1.7344 -0.445,-1.0078 -0.445,-2.4141 0,-1.2422 0.469,-2.3672 0.492,-1.1484 1.453,-1.9922 0.961,-0.8671 2.39,-1.3828 1.453,-0.5156 3.375,-0.5156 0.844,0 1.688,0.1406 0.844,0.1407 1.523,0.3516 0.68,0.2109 1.149,0.4687 0.492,0.2344 0.726,0.4219 0.258,0.1875 0.328,0.3281 0.09,0.1407 0.118,0.3282 0.05,0.164 0.07,0.4218 0.05,0.2579 0.05,0.6329 0,0.3984 -0.05,0.7031 -0.02,0.2812 -0.118,0.4687 -0.07,0.1875 -0.187,0.2813 -0.117,0.07 -0.258,0.07 -0.211,0 -0.609,-0.2579 -0.399,-0.2578 -1.032,-0.539 -0.632,-0.3047 -1.5,-0.5625 -0.843,-0.2578 -1.945,-0.2578 -0.984,0 -1.734,0.2343 -0.75,0.211 -1.242,0.6329 -0.469,0.3984 -0.727,0.9609 -0.234,0.5625 -0.234,1.2187 0,0.9141 0.468,1.5469 0.469,0.6094 1.219,1.0781 0.75,0.4688 1.711,0.8438 0.961,0.375 1.945,0.7734 1.008,0.3985 1.969,0.8907 0.984,0.4921 1.734,1.1953 0.75,0.7031 1.196,1.6875 0.469,0.9843 0.469,2.3437 z m 24.531,-5.7188 q 0,0.9141 -0.469,1.3125 -0.445,0.375 -1.031,0.375 h -13.828 q 0,1.7579 0.351,3.1641 0.352,1.4063 1.172,2.4141 0.821,1.0078 2.133,1.5468 1.313,0.5391 3.211,0.5391 1.5,0 2.672,-0.2344 1.172,-0.2578 2.016,-0.5625 0.867,-0.3047 1.406,-0.539 0.562,-0.2578 0.844,-0.2578 0.164,0 0.281,0.094 0.14,0.07 0.211,0.2343 0.07,0.1641 0.09,0.4688 0.05,0.2812 0.05,0.7031 0,0.3047 -0.02,0.5391 -0.02,0.2109 -0.07,0.3984 -0.02,0.1641 -0.117,0.3047 -0.07,0.1406 -0.211,0.2812 -0.118,0.1172 -0.75,0.4219 -0.633,0.2813 -1.641,0.5625 -1.008,0.2813 -2.344,0.4922 -1.312,0.2344 -2.812,0.2344 -2.602,0 -4.571,-0.7266 -1.945,-0.7265 -3.281,-2.1562 -1.336,-1.4297 -2.015,-3.586 -0.68,-2.1562 -0.68,-5.0156 0,-2.7187 0.703,-4.875 0.703,-2.1797 2.016,-3.6797 1.336,-1.5234 3.211,-2.3203 1.875,-0.8203 4.195,-0.8203 2.484,0 4.219,0.7969 1.757,0.7969 2.882,2.1562 1.125,1.336 1.641,3.1641 0.539,1.8047 0.539,3.8672 z m -3.891,-1.1484 q 0.07,-3.0469 -1.359,-4.7812 -1.406,-1.7344 -4.195,-1.7344 -1.43,0 -2.508,0.539 -1.078,0.5391 -1.805,1.4297 -0.726,0.8907 -1.125,2.086 -0.398,1.1718 -0.445,2.4609 z m 28.938,12.6094 q 0,0.1875 -0.09,0.3281 -0.09,0.1172 -0.305,0.2109 -0.211,0.094 -0.586,0.1407 -0.375,0.047 -0.937,0.047 -0.586,0 -0.961,-0.047 -0.375,-0.047 -0.586,-0.1407 -0.211,-0.094 -0.305,-0.2109 -0.09,-0.1406 -0.09,-0.3281 v -12.3516 q 0,-1.8047 -0.281,-2.9062 -0.281,-1.1016 -0.82,-1.8985 -0.539,-0.7968 -1.407,-1.2187 -0.843,-0.4219 -1.968,-0.4219 -1.454,0 -2.907,1.0313 -1.453,1.0312 -3.047,3.0234 v 14.7422 q 0,0.1875 -0.09,0.3281 -0.09,0.1172 -0.304,0.211 -0.211,0.094 -0.586,0.1406 -0.375,0.047 -0.961,0.047 -0.563,0 -0.938,-0.047 -0.375,-0.047 -0.609,-0.1406 -0.211,-0.094 -0.305,-0.211 -0.07,-0.1406 -0.07,-0.3281 v -21.0938 q 0,-0.1875 0.07,-0.3047 0.07,-0.1406 0.282,-0.2343 0.211,-0.1172 0.539,-0.1407 0.328,-0.047 0.867,-0.047 0.515,0 0.844,0.047 0.351,0.023 0.539,0.1407 0.187,0.094 0.257,0.2343 0.09,0.1172 0.09,0.3047 v 2.7891 q 1.782,-1.9922 3.54,-2.9063 1.781,-0.9375 3.585,-0.9375 2.11,0 3.54,0.7266 1.453,0.7031 2.343,1.8984 0.891,1.1954 1.266,2.8125 0.398,1.5938 0.398,3.8438 z m 18.578,-1.5469 q 0,0.6797 -0.09,1.0781 -0.09,0.3985 -0.281,0.586 -0.188,0.1875 -0.563,0.3515 -0.375,0.1641 -0.867,0.2578 -0.469,0.1172 -1.008,0.1875 -0.539,0.07 -1.078,0.07 -1.641,0 -2.812,-0.4218 -1.172,-0.4453 -1.922,-1.3125 -0.75,-0.8907 -1.102,-2.2266 -0.328,-1.3594 -0.328,-3.1875 v -12.3281 h -2.953 q -0.352,0 -0.563,-0.375 -0.211,-0.375 -0.211,-1.2188 0,-0.4453 0.05,-0.75 0.07,-0.3047 0.165,-0.4922 0.09,-0.2109 0.234,-0.2812 0.164,-0.094 0.351,-0.094 h 2.93 v -5.0156 q 0,-0.1641 0.07,-0.3047 0.09,-0.1406 0.305,-0.2344 0.234,-0.1172 0.609,-0.1641 0.375,-0.047 0.938,-0.047 0.586,0 0.961,0.047 0.375,0.047 0.586,0.1641 0.211,0.094 0.304,0.2344 0.09,0.1406 0.09,0.3047 v 5.0156 h 5.414 q 0.188,0 0.328,0.094 0.141,0.07 0.235,0.2812 0.117,0.1875 0.164,0.4922 0.05,0.3047 0.05,0.75 0,0.8438 -0.211,1.2188 -0.211,0.375 -0.563,0.375 h -5.414 v 11.7659 q 0,2.1797 0.633,3.3047 0.656,1.1016 2.321,1.1016 0.539,0 0.96,-0.094 0.422,-0.1172 0.75,-0.2344 0.329,-0.1172 0.563,-0.211 0.234,-0.1171 0.422,-0.1171 0.117,0 0.211,0.07 0.117,0.047 0.164,0.2109 0.07,0.1641 0.117,0.4453 0.05,0.2813 0.05,0.7031 z m 21.086,-28.7812 q 0,0.7265 -0.07,1.3359 -0.07,0.5859 -0.234,1.125 -0.141,0.5391 -0.422,1.0781 -0.258,0.5156 -0.633,1.0781 l -3.188,4.8047 q -0.09,0.1875 -0.257,0.3282 -0.141,0.1172 -0.352,0.2109 -0.211,0.07 -0.492,0.1172 -0.281,0.047 -0.703,0.047 -0.375,0 -0.633,-0.023 -0.235,-0.047 -0.375,-0.1406 -0.117,-0.094 -0.117,-0.2344 0,-0.1406 0.07,-0.3516 l 3.093,-6.3984 v -2.9766 q 0,-0.6093 0.118,-0.9843 0.117,-0.375 0.375,-0.5625 0.281,-0.211 0.679,-0.2813 0.422,-0.07 1.008,-0.07 0.539,0 0.938,0.07 0.421,0.07 0.679,0.2813 0.258,0.1875 0.375,0.5625 0.141,0.375 0.141,0.9843 z m -8.391,0 q 0,0.7265 -0.07,1.3359 -0.07,0.5859 -0.234,1.125 -0.141,0.5391 -0.422,1.0781 -0.258,0.5156 -0.633,1.0781 l -3.187,4.8047 q -0.09,0.1875 -0.258,0.3282 -0.141,0.1172 -0.352,0.2109 -0.211,0.07 -0.492,0.1172 -0.281,0.047 -0.703,0.047 -0.375,0 -0.633,-0.023 -0.258,-0.047 -0.375,-0.1406 -0.117,-0.094 -0.14,-0.2344 0,-0.1406 0.09,-0.3516 l 3.093,-6.3984 v -2.9766 q 0,-0.6093 0.118,-0.9843 0.117,-0.375 0.375,-0.5625 0.281,-0.211 0.679,-0.2813 0.422,-0.07 1.008,-0.07 0.563,0 0.961,0.07 0.398,0.07 0.656,0.2813 0.258,0.1875 0.375,0.5625 0.141,0.375 0.141,0.9843 z m 44.18,27.1171 q 0,0.3985 -0.02,0.7032 -0.02,0.2812 -0.09,0.4922 -0.05,0.1875 -0.141,0.3515 -0.07,0.1406 -0.375,0.4453 -0.281,0.2813 -0.984,0.7266 -0.703,0.4219 -1.594,0.7734 -0.867,0.3282 -1.898,0.5391 -1.031,0.2109 -2.133,0.2109 -2.273,0 -4.031,-0.75 -1.758,-0.75 -2.953,-2.1797 -1.172,-1.4531 -1.805,-3.539 -0.609,-2.1094 -0.609,-4.8516 0,-3.1172 0.75,-5.3437 0.773,-2.25 2.085,-3.6797 1.336,-1.4297 3.118,-2.1094 1.804,-0.7031 3.89,-0.7031 1.008,0 1.946,0.1875 0.961,0.1875 1.757,0.4922 0.797,0.3047 1.407,0.7031 0.632,0.3984 0.914,0.6797 0.281,0.2812 0.375,0.4453 0.117,0.1641 0.187,0.3984 0.07,0.211 0.09,0.4922 0.02,0.2813 0.02,0.7031 0,0.9141 -0.211,1.2891 -0.211,0.3516 -0.515,0.3516 -0.352,0 -0.821,-0.375 -0.445,-0.3985 -1.148,-0.8672 -0.703,-0.4688 -1.711,-0.8438 -0.984,-0.3984 -2.344,-0.3984 -2.789,0 -4.289,2.1562 -1.476,2.1329 -1.476,6.211 0,2.039 0.375,3.5859 0.398,1.5235 1.148,2.5547 0.75,1.0313 1.828,1.5469 1.102,0.4922 2.508,0.4922 1.336,0 2.344,-0.4219 1.008,-0.4219 1.734,-0.9141 0.75,-0.5156 1.242,-0.914 0.516,-0.4219 0.797,-0.4219 0.164,0 0.281,0.094 0.118,0.094 0.188,0.3281 0.09,0.211 0.117,0.5625 0.05,0.3281 0.05,0.7969 z m 25.352,-7.5703 q 0,2.5782 -0.68,4.7578 -0.68,2.1563 -2.039,3.7266 -1.336,1.5703 -3.375,2.4609 -2.016,0.8672 -4.688,0.8672 -2.601,0 -4.547,-0.7734 -1.921,-0.7734 -3.211,-2.25 -1.289,-1.4766 -1.921,-3.5859 -0.633,-2.1094 -0.633,-4.7813 0,-2.5781 0.656,-4.7344 0.68,-2.1797 2.016,-3.75 1.359,-1.5703 3.375,-2.4375 2.015,-0.8672 4.711,-0.8672 2.601,0 4.523,0.7735 1.945,0.7734 3.234,2.25 1.289,1.4765 1.922,3.5859 0.657,2.1094 0.657,4.7578 z m -4.079,0.2578 q 0,-1.7109 -0.328,-3.2343 -0.304,-1.5235 -1.031,-2.6719 -0.727,-1.1484 -1.969,-1.8047 -1.242,-0.6797 -3.093,-0.6797 -1.711,0 -2.954,0.6094 -1.218,0.6094 -2.015,1.7344 -0.797,1.1015 -1.196,2.625 -0.375,1.5234 -0.375,3.3281 0,1.7344 0.305,3.2578 0.328,1.5234 1.055,2.6719 0.75,1.125 1.992,1.8047 1.242,0.6562 3.094,0.6562 1.687,0 2.929,-0.6094 1.243,-0.6093 2.04,-1.7109 0.796,-1.1016 1.171,-2.625 0.375,-1.5234 0.375,-3.3516 z m 28.938,10.5235 q 0,0.1875 -0.09,0.3281 -0.09,0.1172 -0.305,0.211 -0.211,0.094 -0.586,0.1406 -0.375,0.047 -0.937,0.047 -0.586,0 -0.961,-0.047 -0.375,-0.047 -0.586,-0.1406 -0.211,-0.094 -0.305,-0.211 -0.09,-0.1406 -0.09,-0.3281 v -12.3516 q 0,-1.8047 -0.281,-2.9062 -0.281,-1.1016 -0.82,-1.8985 -0.539,-0.7968 -1.407,-1.2187 -0.843,-0.4219 -1.968,-0.4219 -1.453,0 -2.907,1.0313 -1.453,1.0312 -3.046,3.0234 v 14.7422 q 0,0.1875 -0.09,0.3281 -0.09,0.1172 -0.305,0.211 -0.211,0.094 -0.586,0.1406 -0.375,0.047 -0.961,0.047 -0.563,0 -0.938,-0.047 -0.375,-0.047 -0.609,-0.1406 -0.211,-0.094 -0.305,-0.211 -0.07,-0.1406 -0.07,-0.3281 v -21.0938 q 0,-0.1875 0.07,-0.3046 0.07,-0.1407 0.282,-0.2344 0.211,-0.1172 0.539,-0.1406 0.328,-0.047 0.867,-0.047 0.516,0 0.844,0.047 0.351,0.023 0.539,0.1406 0.187,0.094 0.258,0.2344 0.09,0.1171 0.09,0.3046 v 2.7891 q 1.781,-1.9922 3.539,-2.9062 1.781,-0.9375 3.586,-0.9375 2.109,0 3.539,0.7265 1.453,0.7031 2.343,1.8985 0.891,1.1953 1.266,2.8125 0.398,1.5937 0.398,3.8437 z m 18.578,-1.5469 q 0,0.6797 -0.09,1.0781 -0.09,0.3985 -0.281,0.586 -0.188,0.1875 -0.563,0.3515 -0.375,0.1641 -0.867,0.2578 -0.469,0.1172 -1.008,0.1875 -0.539,0.07 -1.078,0.07 -1.64,0 -2.812,-0.4219 -1.172,-0.4453 -1.922,-1.3125 -0.75,-0.8906 -1.102,-2.2266 -0.328,-1.3594 -0.328,-3.1875 v -12.3281 h -2.953 q -0.352,0 -0.563,-0.375 -0.21,-0.375 -0.21,-1.2188 0,-0.4453 0.05,-0.75 0.07,-0.3047 0.164,-0.4922 0.09,-0.2109 0.234,-0.2812 0.164,-0.094 0.352,-0.094 h 2.929 v -5.0156 q 0,-0.1641 0.07,-0.3047 0.09,-0.1406 0.305,-0.2344 0.234,-0.1172 0.609,-0.1641 0.375,-0.047 0.938,-0.047 0.586,0 0.961,0.047 0.375,0.047 0.586,0.1641 0.211,0.094 0.304,0.2344 0.09,0.1406 0.09,0.3047 v 5.0156 h 5.414 q 0.188,0 0.329,0.094 0.14,0.07 0.234,0.2812 0.117,0.1875 0.164,0.4922 0.05,0.3047 0.05,0.75 0,0.8438 -0.211,1.2188 -0.211,0.375 -0.562,0.375 h -5.415 v 11.766 q 0,2.1797 0.633,3.3047 0.657,1.1016 2.321,1.1016 0.539,0 0.961,-0.094 0.421,-0.1172 0.75,-0.2344 0.328,-0.1172 0.562,-0.211 0.234,-0.1171 0.422,-0.1171 0.117,0 0.211,0.07 0.117,0.047 0.164,0.2109 0.07,0.1641 0.117,0.4453 0.05,0.2813 0.05,0.7031 z m 23.594,-9.914 q 0,0.914 -0.469,1.3125 -0.445,0.375 -1.031,0.375 h -13.828 q 0,1.7578 0.351,3.164 0.352,1.4063 1.172,2.4141 0.82,1.0078 2.133,1.5468 1.312,0.5391 3.211,0.5391 1.5,0 2.672,-0.2344 1.172,-0.2578 2.015,-0.5625 0.868,-0.3047 1.407,-0.539 0.562,-0.2578 0.843,-0.2578 0.164,0 0.282,0.094 0.14,0.07 0.211,0.2343 0.07,0.1641 0.09,0.4688 0.05,0.2812 0.05,0.7031 0,0.3047 -0.02,0.5391 -0.02,0.2109 -0.07,0.3984 -0.02,0.1641 -0.118,0.3047 -0.07,0.1406 -0.211,0.2813 -0.117,0.1171 -0.75,0.4218 -0.632,0.2813 -1.64,0.5625 -1.008,0.2813 -2.344,0.4922 -1.312,0.2344 -2.812,0.2344 -2.602,0 -4.571,-0.7266 -1.945,-0.7265 -3.281,-2.1562 -1.336,-1.4297 -2.016,-3.586 -0.679,-2.1562 -0.679,-5.0156 0,-2.7187 0.703,-4.875 0.703,-2.1797 2.015,-3.6797 1.336,-1.5234 3.211,-2.3203 1.875,-0.8203 4.196,-0.8203 2.484,0 4.218,0.7969 1.758,0.7969 2.883,2.1562 1.125,1.336 1.641,3.1641 0.539,1.8047 0.539,3.8672 z m -3.891,-1.1485 q 0.07,-3.0469 -1.359,-4.7812 -1.406,-1.7344 -4.196,-1.7344 -1.429,0 -2.507,0.539 -1.078,0.5391 -1.805,1.4297 -0.727,0.8907 -1.125,2.086 -0.398,1.1718 -0.445,2.4609 z m 26.031,12.1641 q 0.188,0.3281 0.188,0.5625 0,0.2109 -0.234,0.3515 -0.211,0.1407 -0.68,0.1875 -0.445,0.07 -1.172,0.07 -0.703,0 -1.125,-0.047 -0.398,-0.023 -0.656,-0.094 -0.235,-0.094 -0.375,-0.2109 -0.117,-0.1406 -0.211,-0.3047 l -5.063,-8.3672 -5.039,8.3672 q -0.09,0.1641 -0.234,0.3047 -0.117,0.1172 -0.375,0.2109 -0.235,0.07 -0.633,0.094 -0.398,0.047 -1.055,0.047 -0.679,0 -1.125,-0.07 -0.422,-0.047 -0.632,-0.1875 -0.188,-0.1406 -0.188,-0.3515 0.02,-0.2344 0.234,-0.5625 l 6.563,-10.2891 -6.211,-9.914 q -0.188,-0.3282 -0.211,-0.5391 0,-0.2344 0.211,-0.375 0.234,-0.1641 0.68,-0.2109 0.468,-0.047 1.218,-0.047 0.68,0 1.079,0.047 0.421,0.023 0.656,0.094 0.234,0.07 0.351,0.1875 0.118,0.1171 0.211,0.2812 l 4.805,7.8516 4.875,-7.8516 q 0.09,-0.1406 0.211,-0.2578 0.117,-0.1172 0.305,-0.1875 0.211,-0.094 0.562,-0.1172 0.375,-0.047 1.008,-0.047 0.68,0 1.101,0.047 0.446,0.047 0.657,0.1875 0.211,0.1172 0.187,0.3516 -0.02,0.2343 -0.234,0.5859 l -6.164,9.7969 z m 16.914,-1.1016 q 0,0.6797 -0.09,1.0781 -0.09,0.3985 -0.281,0.586 -0.187,0.1875 -0.562,0.3515 -0.375,0.1641 -0.867,0.2578 -0.469,0.1172 -1.008,0.1875 -0.539,0.07 -1.078,0.07 -1.641,0 -2.813,-0.4219 -1.172,-0.4453 -1.922,-1.3125 -0.75,-0.8906 -1.101,-2.2266 -0.328,-1.3594 -0.328,-3.1875 v -12.3281 h -2.954 q -0.351,0 -0.562,-0.375 -0.211,-0.375 -0.211,-1.2188 0,-0.4453 0.05,-0.75 0.07,-0.3047 0.164,-0.4922 0.09,-0.2109 0.234,-0.2812 0.164,-0.094 0.352,-0.094 h 2.93 v -5.0156 q 0,-0.1641 0.07,-0.3047 0.09,-0.1406 0.304,-0.2344 0.235,-0.1172 0.61,-0.1641 0.375,-0.047 0.937,-0.047 0.586,0 0.961,0.047 0.375,0.047 0.586,0.1641 0.211,0.094 0.305,0.2344 0.09,0.1406 0.09,0.3047 v 5.0156 h 5.414 q 0.187,0 0.328,0.094 0.141,0.07 0.234,0.2812 0.118,0.1875 0.164,0.4922 0.05,0.3047 0.05,0.75 0,0.8438 -0.211,1.2188 -0.21,0.375 -0.562,0.375 h -5.414 v 11.766 q 0,2.1797 0.633,3.3047 0.656,1.1016 2.32,1.1016 0.539,0 0.961,-0.094 0.422,-0.1172 0.75,-0.2344 0.328,-0.1172 0.562,-0.211 0.235,-0.1171 0.422,-0.1171 0.118,0 0.211,0.07 0.117,0.047 0.164,0.2109 0.07,0.1641 0.118,0.4453 0.05,0.2813 0.05,0.7031 z"
     id="text14-0"
     style="font-size:48px;line-height:1;font-family:Calibri;-inkscape-font-specification:Calibri;font-variant-ligatures:none;text-align:center;letter-spacing:1px;word-spacing:1px;text-orientation:upright;text-anchor:middle;fill:#fe90b5;fill-opacity:0.992157;stroke-width:3;stroke-linejoin:bevel;stroke-opacity:0.836773;paint-order:stroke fill markers"
     aria-label="“present” context" /></svg>
